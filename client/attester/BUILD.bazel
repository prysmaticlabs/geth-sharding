load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")
load("@com_github_jmhodges_bazel_gomock//:gomock.bzl", "gomock")

go_library(
    name = "go_default_library",
    srcs = ["service.go"],
    importpath = "github.com/prysmaticlabs/prysm/client/attester",
    visibility = ["//client:__subpackages__"],
    deps = [
        "//client/types:go_default_library",
        "//proto/beacon/rpc/v1:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@io_bazel_rules_go//proto/wkt:empty_go_proto",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "mock_beacon_service_test.go",
        "service_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//client/internal:go_default_library",
        "//proto/beacon/p2p/v1:go_default_library",  #keep
        "//proto/beacon/rpc/v1:go_default_library",
        "//shared/testutil:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",  #keep
        "@com_github_sirupsen_logrus//hooks/test:go_default_library",
        "@org_golang_google_grpc//:go_default_library",  #keep
        "@org_golang_google_grpc//metadata:go_default_library",  #keep
    ],
)

gomock(
    name = "mock_beacon_service_test",
    out = "mock_beacon_service_test.go",
    interfaces = [
        "BeaconServiceClient",
        "BeaconService_LatestBeaconBlockClient",
    ],
    library = "//proto/beacon/rpc/v1:go_default_library",
    package = "attester",
)
