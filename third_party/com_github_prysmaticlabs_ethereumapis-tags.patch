diff --git a/eth/v1alpha1/BUILD.bazel b/eth/v1alpha1/BUILD.bazel
index c0fbe31..ae4ff87 100644
--- a/eth/v1alpha1/BUILD.bazel
+++ b/eth/v1alpha1/BUILD.bazel
@@ -25,7 +25,6 @@ proto_library(
         "beacon_chain.proto",
         "node.proto",
         "validator.proto",
-        ":generated_swagger_proto",
     ],
     visibility = ["//visibility:public"],
     deps = [
@@ -33,6 +32,7 @@ proto_library(
         "@com_google_protobuf//:any_proto",
         "@com_google_protobuf//:timestamp_proto",
         "@go_googleapis//google/api:annotations_proto",
+        "@gogo_special_proto//github.com/gogo/protobuf/gogoproto",
         "@grpc_ecosystem_grpc_gateway//protoc-gen-swagger/options:options_proto",
     ],
 )
@@ -48,11 +48,30 @@ java_proto_library(
 
 go_proto_library(
     name = "go_proto",
-    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    compilers = ["@prysm//:grpc_proto_compiler"],
     importpath = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1",
     proto = ":proto",
     visibility = ["//visibility:public"],
     deps = [
+        "@com_github_prysmaticlabs_go_bitfield//:go_default_library",
+        "@go_googleapis//google/api:annotations_go_proto",
+    ],
+)
+
+go_proto_library(
+    name = "go_grpc_gateway_library",
+    compilers = [
+        "@prysm//:grpc_nogogo_proto_compiler",
+        "@grpc_ecosystem_grpc_gateway//protoc-gen-grpc-gateway:go_gen_grpc_gateway",
+    ],
+    importpath = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1_gateway",
+    proto = ":proto",
+    visibility = ["//visibility:public"],
+    deps = [
+        "@com_github_gogo_protobuf//gogoproto:go_default_library",
+        "@com_github_golang_protobuf//descriptor:go_default_library",
+        "@com_github_golang_protobuf//ptypes/empty:go_default_library",
+        "@com_github_prysmaticlabs_go_bitfield//:go_default_library",
         "@go_googleapis//google/api:annotations_go_proto",
         "@grpc_ecosystem_grpc_gateway//protoc-gen-swagger/options:options_go_proto",
     ],
diff --git a/eth/v1alpha1/attestation.proto b/eth/v1alpha1/attestation.proto
index b177b76..28b4b46 100644
--- a/eth/v1alpha1/attestation.proto
+++ b/eth/v1alpha1/attestation.proto
@@ -15,6 +15,8 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
+
 option csharp_namespace = "Ethereum.Eth.v1alpha1";
 option go_package = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth";
 option java_multiple_files = true;
@@ -25,12 +27,12 @@ option php_namespace = "Ethereum\\Eth\\v1alpha1";
 message Attestation {
     // A bitfield representation of validator indices that have voted exactly
     // the same vote and have been aggregated into this attestation.
-    bytes aggregation_bits = 1;
+    bytes aggregation_bits = 1 [(gogoproto.moretags) = "ssz-max:\"2048\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"];
 
     AttestationData data = 2;
 
     // 96 byte BLS aggregate signature.
-    bytes signature = 3;
+    bytes signature = 3 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message AggregateAttestationAndProof {
@@ -41,7 +43,7 @@ message AggregateAttestationAndProof {
     Attestation aggregate = 3;
 
     // 96 byte selection proof signed by the aggregator, which is the signature of the slot to aggregate.
-    bytes selection_proof = 2;
+    bytes selection_proof = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message AttestationData {
@@ -55,7 +57,7 @@ message AttestationData {
     uint64 committee_index = 2;
 
     // 32 byte root of the LMD GHOST block vote.
-    bytes beacon_block_root = 3;
+    bytes beacon_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The most recent justified checkpoint in the beacon state
     Checkpoint source = 4;
@@ -91,5 +93,5 @@ message Checkpoint {
     uint64 epoch = 1;
 
     // Block root of the checkpoint references.
-    bytes root = 2;
+    bytes root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
diff --git a/eth/v1alpha1/beacon_block.proto b/eth/v1alpha1/beacon_block.proto
index 2ce5c34..4cbb276 100644
--- a/eth/v1alpha1/beacon_block.proto
+++ b/eth/v1alpha1/beacon_block.proto
@@ -15,6 +15,7 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
 import "eth/v1alpha1/attestation.proto";
 
 option csharp_namespace = "Ethereum.Eth.v1alpha1";
@@ -30,10 +31,10 @@ message BeaconBlock {
     uint64 slot = 1; 
 
     // 32 byte root of the parent block.
-    bytes parent_root = 2;
+    bytes parent_root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // 32 byte root of the resulting state after processing this block.
-    bytes state_root = 3;
+    bytes state_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The block body itself.
     BeaconBlockBody body = 4;
@@ -45,38 +46,38 @@ message SignedBeaconBlock {
     BeaconBlock block = 1;
 
     // 96 byte BLS signature from the validator that produced this block.
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 // The block body of an Ethereum 2.0 beacon block.
 message BeaconBlockBody {
     // The validators RANDAO reveal 96 byte value.
-    bytes randao_reveal = 1;
+    bytes randao_reveal = 1 [(gogoproto.moretags) = "ssz-size:\"96\""];
 
     // A reference to the Ethereum 1.x chain.
     Eth1Data eth1_data = 2;
 
     // 32 byte field of arbitrary data. This field may contain any data and
     // is not used for anything other than a fun message.
-    bytes graffiti = 3; 
+    bytes graffiti = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Block operations
     // Refer to spec constants at https://github.com/ethereum/eth2.0-specs/blob/dev/specs/core/0_beacon-chain.md#max-operations-per-block
 
     // At most MAX_PROPOSER_SLASHINGS.
-    repeated ProposerSlashing proposer_slashings = 4;
+    repeated ProposerSlashing proposer_slashings = 4 [(gogoproto.moretags) = "ssz-max:\"16\""];
 
     // At most MAX_ATTESTER_SLASHINGS.
-    repeated AttesterSlashing attester_slashings = 5;
+    repeated AttesterSlashing attester_slashings = 5 [(gogoproto.moretags) = "ssz-max:\"1\""];
 
     // At most MAX_ATTESTATIONS.
-    repeated Attestation attestations = 6;
+    repeated Attestation attestations = 6 [(gogoproto.moretags) = "ssz-max:\"128\""];
 
     // At most MAX_DEPOSITS.
-    repeated Deposit deposits = 7;
+    repeated Deposit deposits = 7 [(gogoproto.moretags) = "ssz-max:\"16\""];
 
     // At most MAX_VOLUNTARY_EXITS.
-    repeated SignedVoluntaryExit voluntary_exits = 8;
+    repeated SignedVoluntaryExit voluntary_exits = 8 [(gogoproto.moretags) = "ssz-max:\"16\""];
 }
 
 // Proposer slashings are proofs that a slashable offense has been committed by
@@ -107,20 +108,20 @@ message AttesterSlashing {
 message Deposit {
     message Data {
         // 48 byte BLS public key of the validator.
-        bytes public_key = 1;
+        bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\" spec-name:\"pubkey\""];
 
         // A 32 byte hash of the withdrawal address public key.
-        bytes withdrawal_credentials = 2;
+        bytes withdrawal_credentials = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
         // Deposit amount in gwei.
         uint64 amount = 3;
 
         // 96 byte signature from the validators public key.
-        bytes signature = 4;
+        bytes signature = 4 [(gogoproto.moretags) = "ssz-size:\"96\""];
     }
 
     // 32 byte roots in the deposit tree branch.
-    repeated bytes proof = 1;
+    repeated bytes proof = 1 [(gogoproto.moretags) = "ssz-size:\"33,32\""];
 
     Data data = 2;
 }
@@ -142,14 +143,14 @@ message SignedVoluntaryExit {
     VoluntaryExit exit = 1;
 
     // Validator's 96 byte signature
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 // Eth1Data represents references to the Ethereum 1.x deposit contract.
 message Eth1Data {
     // The 32 byte deposit tree root for the last deposit included in this
     // block.
-    bytes deposit_root = 1;
+    bytes deposit_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The total number of deposits included in the beacon chain since genesis
     // including the deposits in this block.
@@ -157,7 +158,7 @@ message Eth1Data {
 
     // The 32 byte block hash of the Ethereum 1.x block considered for deposit
     // inclusion.
-    bytes block_hash = 3;
+    bytes block_hash = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 // A beacon block header is essentially a beacon block with only a reference to
@@ -169,13 +170,13 @@ message BeaconBlockHeader {
     uint64 slot = 1; 
 
     // 32 byte merkle tree root of the parent ssz encoded block.
-    bytes parent_root = 2;
+    bytes parent_root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // 32 byte merkle tree root of the resulting ssz encoded state after processing this block.
-    bytes state_root = 3;
+    bytes state_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // 32 byte merkle tree root of the ssz encoded block body.
-    bytes body_root = 4;
+    bytes body_root = 4 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message SignedBeaconBlockHeader {
@@ -183,14 +184,14 @@ message SignedBeaconBlockHeader {
     BeaconBlockHeader header = 1;
 
     // 96 byte BLS signature from the validator that produced this block header.
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message IndexedAttestation {
-    repeated uint64 attesting_indices = 1;
+    repeated uint64 attesting_indices = 1 [(gogoproto.moretags) = "ssz-max:\"2048\""];
 
     AttestationData data = 2;
 
     // 96 bytes aggregate signature.
-    bytes signature = 3;
+    bytes signature = 3 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
diff --git a/eth/v1alpha1/beacon_chain.pb.go b/eth/v1alpha1/beacon_chain.pb.go
index f0668c5..18c1573 100755
--- a/eth/v1alpha1/beacon_chain.pb.go
+++ b/eth/v1alpha1/beacon_chain.pb.go
@@ -1590,7 +1590,6 @@ func (m *ActiveSetChanges) GetEjectedIndices() []uint64 {
 
 type ValidatorPerformanceRequest struct {
 	PublicKeys           [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
-	Slot                 uint64   `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
 	XXX_NoUnkeyedLiteral struct{} `json:"-"`
 	XXX_unrecognized     []byte   `json:"-"`
 	XXX_sizecache        int32    `json:"-"`
@@ -1628,19 +1627,15 @@ func (m *ValidatorPerformanceRequest) GetPublicKeys() [][]byte {
 	return nil
 }
 
-func (m *ValidatorPerformanceRequest) GetSlot() uint64 {
-	if m != nil {
-		return m.Slot
-	}
-	return 0
-}
-
 type ValidatorPerformanceResponse struct {
 	Balances                      []uint64 `protobuf:"varint,1,rep,packed,name=balances,proto3" json:"balances,omitempty"`
-	TotalValidators               uint64   `protobuf:"varint,2,opt,name=total_validators,json=totalValidators,proto3" json:"total_validators,omitempty"`
-	TotalActiveValidators         uint64   `protobuf:"varint,3,opt,name=total_active_validators,json=totalActiveValidators,proto3" json:"total_active_validators,omitempty"`
-	MissingValidators             [][]byte `protobuf:"bytes,4,rep,name=missing_validators,json=missingValidators,proto3" json:"missing_validators,omitempty"`
-	AverageActiveValidatorBalance float32  `protobuf:"fixed32,5,opt,name=average_active_validator_balance,json=averageActiveValidatorBalance,proto3" json:"average_active_validator_balance,omitempty"`
+	InclusionSlots                []uint64 `protobuf:"varint,2,rep,packed,name=inclusion_slots,json=inclusionSlots,proto3" json:"inclusion_slots,omitempty"`
+	InclusionDistances            []uint64 `protobuf:"varint,3,rep,packed,name=inclusion_distances,json=inclusionDistances,proto3" json:"inclusion_distances,omitempty"`
+	CorrectlyVotedSource          []bool   `protobuf:"varint,4,rep,packed,name=correctly_voted_source,json=correctlyVotedSource,proto3" json:"correctly_voted_source,omitempty"`
+	CorrectlyVotedTarget          []bool   `protobuf:"varint,5,rep,packed,name=correctly_voted_target,json=correctlyVotedTarget,proto3" json:"correctly_voted_target,omitempty"`
+	CorrectlyVotedHead            []bool   `protobuf:"varint,6,rep,packed,name=correctly_voted_head,json=correctlyVotedHead,proto3" json:"correctly_voted_head,omitempty"`
+	MissingValidators             [][]byte `protobuf:"bytes,7,rep,name=missing_validators,json=missingValidators,proto3" json:"missing_validators,omitempty"`
+	AverageActiveValidatorBalance float32  `protobuf:"fixed32,8,opt,name=average_active_validator_balance,json=averageActiveValidatorBalance,proto3" json:"average_active_validator_balance,omitempty"`
 	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
 	XXX_unrecognized              []byte   `json:"-"`
 	XXX_sizecache                 int32    `json:"-"`
@@ -1678,18 +1673,39 @@ func (m *ValidatorPerformanceResponse) GetBalances() []uint64 {
 	return nil
 }
 
-func (m *ValidatorPerformanceResponse) GetTotalValidators() uint64 {
+func (m *ValidatorPerformanceResponse) GetInclusionSlots() []uint64 {
 	if m != nil {
-		return m.TotalValidators
+		return m.InclusionSlots
 	}
-	return 0
+	return nil
 }
 
-func (m *ValidatorPerformanceResponse) GetTotalActiveValidators() uint64 {
+func (m *ValidatorPerformanceResponse) GetInclusionDistances() []uint64 {
 	if m != nil {
-		return m.TotalActiveValidators
+		return m.InclusionDistances
 	}
-	return 0
+	return nil
+}
+
+func (m *ValidatorPerformanceResponse) GetCorrectlyVotedSource() []bool {
+	if m != nil {
+		return m.CorrectlyVotedSource
+	}
+	return nil
+}
+
+func (m *ValidatorPerformanceResponse) GetCorrectlyVotedTarget() []bool {
+	if m != nil {
+		return m.CorrectlyVotedTarget
+	}
+	return nil
+}
+
+func (m *ValidatorPerformanceResponse) GetCorrectlyVotedHead() []bool {
+	if m != nil {
+		return m.CorrectlyVotedHead
+	}
+	return nil
 }
 
 func (m *ValidatorPerformanceResponse) GetMissingValidators() [][]byte {
@@ -2325,159 +2341,163 @@ func init() {
 func init() { proto.RegisterFile("eth/v1alpha1/beacon_chain.proto", fileDescriptor_e33ad64d6ced77c1) }
 
 var fileDescriptor_e33ad64d6ced77c1 = []byte{
-	// 2425 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xcd, 0x73, 0x1b, 0x49,
-	0x15, 0xcf, 0x48, 0xf2, 0x87, 0x9e, 0x64, 0x4b, 0xee, 0xc8, 0xb6, 0x32, 0x71, 0x62, 0x65, 0x9c,
-	0xc4, 0x4a, 0x9c, 0x48, 0x89, 0xb3, 0x9b, 0x0d, 0x0b, 0xb5, 0x94, 0x9d, 0x88, 0x24, 0x6c, 0xa8,
-	0x35, 0xe3, 0x6c, 0xf8, 0xd8, 0x2d, 0x54, 0x23, 0xb9, 0x2d, 0x4d, 0x22, 0xcd, 0x28, 0x33, 0x2d,
-	0x57, 0x9c, 0x82, 0x0b, 0x50, 0x9c, 0xf9, 0x28, 0x3e, 0x4e, 0x14, 0xdc, 0x76, 0xa9, 0xda, 0x82,
-	0xe2, 0xc0, 0x65, 0x0f, 0xdc, 0xb9, 0x02, 0x07, 0xaa, 0x38, 0xf2, 0x5f, 0x70, 0xa1, 0xa6, 0xbb,
-	0xa7, 0xa7, 0x67, 0x34, 0x23, 0xc9, 0x15, 0x1f, 0xa8, 0x3d, 0x45, 0xf3, 0xfa, 0xf5, 0x7b, 0xbf,
-	0x7e, 0xaf, 0xdf, 0x57, 0x3b, 0xb0, 0x8e, 0x49, 0xb7, 0x7e, 0x74, 0xdb, 0xe8, 0x0d, 0xba, 0xc6,
-	0xed, 0x7a, 0x0b, 0x1b, 0x6d, 0xdb, 0x6a, 0xb6, 0xbb, 0x86, 0x69, 0xd5, 0x06, 0x8e, 0x4d, 0x6c,
-	0xb4, 0x8c, 0x49, 0x17, 0x3b, 0x78, 0xd8, 0xaf, 0x61, 0xd2, 0xad, 0xf9, 0x9c, 0xea, 0x5a, 0xc7,
-	0xb6, 0x3b, 0x3d, 0x5c, 0x37, 0x06, 0x66, 0xdd, 0xb0, 0x2c, 0x9b, 0x18, 0xc4, 0xb4, 0x2d, 0x97,
-	0x6d, 0x52, 0xcf, 0xf3, 0x55, 0xfa, 0xd5, 0x1a, 0x1e, 0xd6, 0x71, 0x7f, 0x40, 0x8e, 0xf9, 0xe2,
-	0xb9, 0xe8, 0xa2, 0x61, 0xf9, 0x4b, 0x17, 0x43, 0x68, 0x0c, 0x42, 0xb0, 0xcb, 0x04, 0xf3, 0xf5,
-	0x58, 0xb4, 0xad, 0x9e, 0xdd, 0x7e, 0xc1, 0x19, 0xd6, 0x42, 0x0c, 0x47, 0x46, 0xcf, 0x3c, 0x30,
-	0x88, 0xed, 0xb0, 0x55, 0xcd, 0x06, 0xf4, 0xcc, 0x27, 0xdd, 0xef, 0x1a, 0x56, 0x07, 0xef, 0x63,
-	0x82, 0xee, 0xc1, 0xac, 0xd1, 0xf6, 0x94, 0x94, 0x95, 0x8a, 0x52, 0x5d, 0xdc, 0xae, 0xd4, 0x62,
-	0x8f, 0x5c, 0xdb, 0xc7, 0x64, 0x87, 0xf2, 0xe9, 0x9c, 0x1f, 0xad, 0x43, 0x6e, 0x30, 0x6c, 0xf5,
-	0xcc, 0x76, 0xf3, 0x05, 0x3e, 0x76, 0xcb, 0xa9, 0x4a, 0xba, 0x9a, 0xd7, 0x81, 0x91, 0xde, 0xc7,
-	0xc7, 0xae, 0xf6, 0x79, 0x0a, 0x56, 0x9f, 0x98, 0x2e, 0xd9, 0x09, 0x4e, 0xe2, 0xea, 0xf8, 0xe5,
-	0x10, 0xbb, 0x04, 0x55, 0xa1, 0xd0, 0xc5, 0xc6, 0x01, 0x83, 0xdf, 0x74, 0x6c, 0x9b, 0x50, 0xfd,
-	0xf9, 0x47, 0x67, 0xf4, 0x05, 0x6f, 0x61, 0xd7, 0xa3, 0xeb, 0xb6, 0x4d, 0xd0, 0x06, 0xe4, 0x5d,
-	0x7b, 0xe8, 0xb4, 0x71, 0x13, 0x0f, 0xec, 0x76, 0xb7, 0x9c, 0xaa, 0x28, 0xd5, 0xcc, 0xa3, 0x33,
-	0x7a, 0x8e, 0x51, 0x1b, 0x1e, 0x11, 0x5d, 0x02, 0xfe, 0xc9, 0x44, 0xa5, 0xb9, 0x28, 0x60, 0x44,
-	0x5f, 0x0e, 0x31, 0x9c, 0x0e, 0x26, 0x5c, 0x4e, 0xc6, 0x97, 0xc3, 0xa8, 0x42, 0x0e, 0x67, 0xa2,
-	0x72, 0x66, 0x7c, 0x39, 0x8c, 0x48, 0xe5, 0xa8, 0x30, 0xd7, 0xc1, 0x16, 0x76, 0x4d, 0xb7, 0x3c,
-	0x5b, 0x51, 0xaa, 0xf3, 0x8f, 0xce, 0xe8, 0x3e, 0x01, 0x9d, 0x87, 0xec, 0xc0, 0xe8, 0xe0, 0xa6,
-	0x6b, 0xbe, 0xc6, 0xe5, 0xb9, 0x8a, 0x52, 0x9d, 0xd1, 0xe7, 0x3d, 0xc2, 0xbe, 0xf9, 0x1a, 0xa3,
-	0x0b, 0x00, 0x74, 0x91, 0xd8, 0x2f, 0xb0, 0x55, 0x9e, 0xaf, 0x28, 0xd5, 0xac, 0x4e, 0xd9, 0x9f,
-	0x7a, 0x84, 0xdd, 0x45, 0xc8, 0xbf, 0x1c, 0x62, 0xe7, 0xb8, 0x79, 0x68, 0xf6, 0x08, 0x76, 0xb4,
-	0x4f, 0x15, 0x28, 0x8f, 0x5a, 0xcf, 0x1d, 0xd8, 0x96, 0x8b, 0xd1, 0xd7, 0x20, 0x2f, 0xdd, 0x0f,
-	0xb7, 0xac, 0x54, 0xd2, 0xd5, 0xdc, 0xb6, 0x96, 0xe0, 0x3b, 0x49, 0x84, 0x1e, 0xda, 0x87, 0xae,
-	0x42, 0xc1, 0xc2, 0xaf, 0x48, 0x53, 0x02, 0x96, 0xa2, 0xc0, 0x16, 0x3c, 0xf2, 0x9e, 0x0f, 0xce,
-	0xc3, 0x4e, 0x6c, 0x62, 0xf4, 0xd8, 0xc9, 0xd2, 0xf4, 0x64, 0x59, 0x4a, 0xf1, 0x8e, 0xa6, 0xfd,
-	0x55, 0x81, 0x25, 0x0f, 0x2b, 0xf5, 0x9a, 0xf0, 0x71, 0x09, 0x32, 0x21, 0xc7, 0xd2, 0x2f, 0x8f,
-	0xea, 0xf6, 0x6c, 0x22, 0xfc, 0x48, 0xbf, 0xd0, 0x0a, 0xcc, 0x30, 0xb7, 0xa4, 0x39, 0x99, 0x7d,
-	0xca, 0xd6, 0xce, 0x8c, 0xb5, 0xf6, 0xcc, 0x58, 0x6b, 0xcf, 0x4e, 0xb2, 0xf6, 0x9f, 0x15, 0x40,
-	0xf2, 0x09, 0xb8, 0x9d, 0x3f, 0x84, 0x02, 0xbd, 0xa1, 0xf7, 0x6d, 0x8b, 0x18, 0xa6, 0x85, 0x1d,
-	0xdf, 0xd4, 0x5b, 0x09, 0xa6, 0xde, 0xa5, 0x51, 0xb9, 0x1b, 0xda, 0xa3, 0x47, 0x65, 0x9c, 0x96,
-	0xd9, 0x87, 0x50, 0x8a, 0xd3, 0x87, 0xde, 0x83, 0x19, 0xaa, 0x91, 0x5a, 0x3e, 0xb7, 0x5d, 0x4d,
-	0x0a, 0x69, 0xb3, 0x63, 0xe1, 0x03, 0x49, 0x82, 0xce, 0xb6, 0x79, 0x6a, 0xa5, 0xb8, 0xf4, 0x90,
-	0xe5, 0xf5, 0x6c, 0xcb, 0x8f, 0x48, 0xed, 0x93, 0x0c, 0x64, 0xef, 0x7b, 0x49, 0xf2, 0x11, 0x36,
-	0x0e, 0x3c, 0x2f, 0xd0, 0x48, 0xa6, 0x4e, 0xf5, 0x14, 0x66, 0xf4, 0x79, 0x8f, 0xb0, 0xef, 0xb9,
-	0xf5, 0x02, 0x00, 0x5d, 0x94, 0x42, 0x57, 0xa7, 0xec, 0x2c, 0xdc, 0xae, 0x8e, 0x66, 0x01, 0x1a,
-	0xba, 0xd1, 0x1c, 0x70, 0x05, 0x16, 0x0f, 0x4d, 0xcb, 0xe8, 0x99, 0xaf, 0x31, 0x57, 0x44, 0xa3,
-	0x57, 0x5f, 0x10, 0x54, 0xaa, 0x6d, 0x13, 0x0a, 0x01, 0x1b, 0x53, 0x39, 0x43, 0xf9, 0x82, 0xdd,
-	0x4c, 0xef, 0x2d, 0x28, 0x05, 0x8c, 0x92, 0xf2, 0x59, 0xaa, 0x1c, 0x89, 0xb5, 0x10, 0x82, 0xe7,
-	0x43, 0x97, 0x98, 0x87, 0xa6, 0x8f, 0x60, 0x8e, 0x21, 0x10, 0x54, 0x1f, 0x41, 0xc0, 0xc6, 0x10,
-	0xcc, 0x33, 0x04, 0x82, 0x2c, 0x10, 0x04, 0x8c, 0x12, 0x82, 0x2c, 0x43, 0x20, 0xd6, 0x02, 0x04,
-	0x77, 0x61, 0x75, 0xe0, 0xe0, 0x23, 0xd3, 0x1e, 0xba, 0xcd, 0x08, 0x14, 0xa0, 0x2a, 0x96, 0xfd,
-	0xe5, 0xaf, 0x87, 0x20, 0xdd, 0x83, 0x72, 0xcc, 0x3e, 0x86, 0x2d, 0x47, 0x37, 0xae, 0x8c, 0x6c,
-	0x64, 0x18, 0x77, 0xe0, 0x42, 0xcc, 0x4e, 0x09, 0x6c, 0x9e, 0x82, 0x55, 0x47, 0xb6, 0x0b, 0xd0,
-	0xda, 0x47, 0xb0, 0xec, 0x45, 0xd5, 0x7d, 0xbb, 0xdf, 0x37, 0x09, 0xc1, 0x58, 0xe4, 0x06, 0x11,
-	0xef, 0x4a, 0x62, 0xbc, 0xa7, 0x22, 0xf1, 0x3e, 0x12, 0xb3, 0xff, 0x4c, 0x43, 0x91, 0xdd, 0xde,
-	0x40, 0x3e, 0x2a, 0x85, 0x04, 0xfb, 0x62, 0xbf, 0x05, 0xd0, 0x16, 0x3c, 0xb4, 0x54, 0xe5, 0xb6,
-	0xdf, 0x19, 0x1b, 0xc2, 0x81, 0xc8, 0x5a, 0xf0, 0xb3, 0x61, 0x11, 0xe7, 0x58, 0x97, 0x44, 0xa1,
-	0xb7, 0x60, 0xc5, 0x2b, 0x87, 0x47, 0xb8, 0x29, 0xca, 0x6d, 0xb3, 0x6d, 0x0f, 0x2d, 0x76, 0x91,
-	0x33, 0x7a, 0x89, 0xad, 0x06, 0x85, 0xd7, 0x5b, 0x53, 0xbf, 0x02, 0x0b, 0x42, 0xe8, 0x63, 0x82,
-	0xfb, 0x68, 0x0b, 0x96, 0x82, 0xfd, 0xa6, 0x75, 0x60, 0xb6, 0x31, 0xcb, 0x34, 0x19, 0xbd, 0x28,
-	0x16, 0x1e, 0x33, 0xba, 0xda, 0x81, 0xc5, 0x00, 0x92, 0x67, 0x5e, 0xf4, 0x61, 0xe8, 0x78, 0x2c,
-	0x43, 0xbd, 0x7d, 0xe2, 0xe3, 0x79, 0x48, 0xe4, 0xc3, 0xa9, 0x43, 0x28, 0x44, 0xce, 0x8e, 0x8a,
-	0x90, 0x7e, 0x81, 0x8f, 0xb9, 0x71, 0xbd, 0x9f, 0xe8, 0x09, 0xcc, 0x1c, 0x19, 0xbd, 0x21, 0xa6,
-	0xfe, 0xca, 0x6d, 0xdf, 0x3d, 0xb9, 0x55, 0xbd, 0x23, 0xe8, 0x4c, 0xc8, 0xbb, 0xa9, 0x7b, 0x8a,
-	0xf6, 0x2f, 0x05, 0xd6, 0x3c, 0x9a, 0x30, 0xda, 0xae, 0xd1, 0x33, 0xac, 0xf6, 0x1b, 0x5d, 0x9e,
-	0x68, 0xb7, 0x92, 0x8e, 0x76, 0x2b, 0xa8, 0x0c, 0x73, 0xbe, 0xe1, 0x33, 0xd4, 0xf0, 0xfe, 0xe7,
-	0xa9, 0xd6, 0x99, 0xdf, 0xa4, 0x60, 0x69, 0xe4, 0x5c, 0x09, 0x97, 0xf6, 0x09, 0xcc, 0xb7, 0x38,
-	0x07, 0xbf, 0xb2, 0xb7, 0x12, 0x8c, 0x3b, 0x22, 0xb1, 0xc6, 0x7f, 0xe8, 0x42, 0x42, 0x5c, 0xcd,
-	0x49, 0x4f, 0xae, 0x39, 0x99, 0x48, 0xcd, 0x51, 0xbf, 0x0d, 0x73, 0x5c, 0x36, 0x3d, 0xba, 0x30,
-	0x29, 0xab, 0xf2, 0x7a, 0x56, 0x58, 0xd4, 0x3b, 0x94, 0x69, 0x1d, 0xe0, 0x57, 0x3c, 0xed, 0xb3,
-	0x0f, 0xcf, 0xcc, 0x1c, 0x12, 0x8f, 0x10, 0xff, 0x53, 0xfb, 0xa3, 0xc2, 0x92, 0x85, 0x38, 0xcc,
-	0x1b, 0xf9, 0x7b, 0x85, 0xf5, 0xb5, 0x47, 0x4c, 0xcd, 0xbc, 0xce, 0xbf, 0xc2, 0xce, 0xcc, 0x8c,
-	0x75, 0xe6, 0xcc, 0x24, 0x67, 0x7e, 0x0f, 0xce, 0x3e, 0xc4, 0x01, 0x5e, 0x09, 0x2e, 0x3b, 0xb8,
-	0x80, 0xcb, 0x8e, 0xbe, 0x1e, 0xb2, 0x57, 0x8a, 0x77, 0x45, 0x81, 0xc5, 0x46, 0x9b, 0x92, 0x14,
-	0x40, 0x60, 0x8d, 0x84, 0x5b, 0xf2, 0x11, 0x2c, 0x06, 0xa9, 0xa3, 0x67, 0xba, 0x84, 0xdf, 0x95,
-	0xb7, 0x26, 0xdd, 0x15, 0xb7, 0x26, 0x65, 0x25, 0xbf, 0x55, 0x59, 0x10, 0xb2, 0x68, 0x62, 0x39,
-	0xa5, 0x4b, 0xf3, 0x5c, 0x1e, 0x3d, 0x44, 0x9b, 0x52, 0x0a, 0xd9, 0xc9, 0xb7, 0xd2, 0x7b, 0x90,
-	0x15, 0x18, 0x78, 0x4e, 0xa9, 0x4c, 0x3a, 0x8a, 0x1e, 0x6c, 0xd1, 0x4c, 0xd8, 0x90, 0x9d, 0xb2,
-	0x43, 0xdd, 0xbe, 0x8f, 0x09, 0x1b, 0x79, 0x4e, 0xb5, 0x00, 0xfd, 0x34, 0x0d, 0xc5, 0xa8, 0xfc,
-	0x04, 0x2f, 0x6d, 0xc3, 0x32, 0xbd, 0x80, 0x06, 0xc1, 0x07, 0xcd, 0xd1, 0xb1, 0xe9, 0xac, 0x58,
-	0xdc, 0x0b, 0x32, 0xd2, 0x16, 0x2c, 0x05, 0x7b, 0xfc, 0xdc, 0x94, 0x66, 0x45, 0x41, 0x2c, 0xf0,
-	0xa2, 0x80, 0x6e, 0x00, 0xc2, 0xaf, 0xcc, 0xa8, 0xf4, 0x0c, 0x95, 0x5e, 0x64, 0x2b, 0x92, 0xe8,
-	0x2b, 0xb0, 0xc8, 0xb9, 0x7d, 0xb9, 0x33, 0x54, 0xee, 0x02, 0xa3, 0xfa, 0x42, 0x6b, 0x70, 0xd6,
-	0xed, 0x19, 0x6e, 0x37, 0x22, 0x75, 0x96, 0x4a, 0x5d, 0xe2, 0x4b, 0x92, 0xd8, 0x4d, 0x28, 0xf8,
-	0xfc, 0xbe, 0xdc, 0x39, 0x2a, 0x77, 0x91, 0x93, 0x25, 0xc1, 0xf8, 0x39, 0x6e, 0x47, 0xe1, 0xce,
-	0x33, 0xc1, 0x7c, 0x29, 0x2c, 0xd8, 0xe7, 0xf7, 0x05, 0x67, 0x99, 0x60, 0x4e, 0xe6, 0x82, 0x35,
-	0x1d, 0xce, 0x0b, 0xd7, 0xef, 0x61, 0xe7, 0xd0, 0x76, 0xfa, 0x34, 0x0f, 0x72, 0xaf, 0x47, 0xaa,
-	0x80, 0x32, 0x52, 0x05, 0x90, 0x3c, 0x9d, 0xb0, 0xd9, 0x44, 0xfb, 0x65, 0x0a, 0xd6, 0xe2, 0x85,
-	0xf2, 0x29, 0x41, 0x95, 0x12, 0x35, 0x2b, 0xda, 0x41, 0xda, 0xbd, 0x06, 0x45, 0x16, 0x19, 0xe2,
-	0x86, 0xba, 0x5c, 0x78, 0x81, 0xd2, 0xa5, 0xf8, 0xbe, 0x0b, 0xab, 0x8c, 0x35, 0xda, 0x51, 0xb8,
-	0x3c, 0x55, 0x2e, 0xd3, 0xe5, 0x9d, 0x70, 0x47, 0xe1, 0xa2, 0x9b, 0x80, 0xfa, 0xa6, 0xeb, 0x9a,
-	0x56, 0x47, 0xde, 0xc2, 0x5c, 0xbf, 0xc4, 0x57, 0x24, 0xf6, 0x87, 0x50, 0x31, 0x8e, 0xb0, 0xe3,
-	0x45, 0xf4, 0x48, 0xeb, 0xe2, 0xa7, 0x66, 0x2f, 0xf5, 0xa5, 0xf4, 0x0b, 0x9c, 0x2f, 0xa2, 0x91,
-	0xe7, 0x7f, 0xed, 0x67, 0x0a, 0x2c, 0x0a, 0xe2, 0x37, 0x87, 0x78, 0x88, 0x3d, 0xfb, 0xb6, 0xbb,
-	0x43, 0xc7, 0x6a, 0xf6, 0xcc, 0xbe, 0xe9, 0x8f, 0x03, 0x40, 0x49, 0x4f, 0x3c, 0x8a, 0xe8, 0x97,
-	0xe8, 0xfc, 0x19, 0x13, 0x08, 0xa5, 0x60, 0x55, 0x72, 0x7f, 0x15, 0xe8, 0x15, 0x6e, 0x8e, 0x56,
-	0x70, 0x7a, 0x8d, 0x03, 0x4e, 0xed, 0xdf, 0x0a, 0xac, 0x87, 0x8a, 0xc8, 0x8e, 0xeb, 0x9a, 0x1d,
-	0xab, 0x8f, 0x2d, 0xf2, 0x45, 0x68, 0x1f, 0x3e, 0x4b, 0x43, 0x29, 0xee, 0x68, 0x09, 0x59, 0xc7,
-	0x80, 0x9c, 0x11, 0x30, 0xf1, 0xc2, 0xf0, 0xd5, 0x49, 0xd9, 0x54, 0x92, 0x1b, 0x74, 0x69, 0x01,
-	0x51, 0x97, 0x65, 0x9e, 0x56, 0x85, 0xf8, 0x87, 0x02, 0x67, 0x63, 0x74, 0x79, 0x39, 0xd0, 0x7f,
-	0x96, 0x0b, 0x37, 0xb8, 0x19, 0xbd, 0xd8, 0x8a, 0xf6, 0xfe, 0x9b, 0x50, 0x10, 0x5c, 0x4d, 0xb9,
-	0xf7, 0x58, 0x14, 0xe4, 0xc7, 0xb4, 0xc6, 0x6c, 0xc0, 0x02, 0x7b, 0x06, 0xc1, 0x0e, 0x9b, 0xa0,
-	0x58, 0x7c, 0xe5, 0x7d, 0x22, 0x1d, 0x9c, 0x36, 0x60, 0x61, 0xe0, 0xd8, 0x03, 0xdb, 0xf5, 0x99,
-	0xd8, 0xcc, 0x99, 0xf7, 0x89, 0xfe, 0x80, 0x2b, 0xd5, 0xf4, 0x99, 0x48, 0x0f, 0xa4, 0x1d, 0x42,
-	0x45, 0x2e, 0x46, 0x7b, 0x86, 0x43, 0xcc, 0xb6, 0x39, 0x60, 0x4f, 0x31, 0xa7, 0x58, 0x89, 0x3e,
-	0x55, 0xe0, 0x62, 0x92, 0x16, 0x9e, 0xa4, 0xe2, 0x6f, 0xc8, 0x1a, 0x64, 0xc5, 0xb4, 0xcb, 0xd4,
-	0xe8, 0x01, 0x01, 0xed, 0xc3, 0xc2, 0x40, 0x16, 0x46, 0xed, 0x94, 0xdb, 0xbe, 0x39, 0xe9, 0x06,
-	0x85, 0x11, 0x84, 0x65, 0x68, 0x4f, 0x61, 0x45, 0x7a, 0x90, 0xda, 0xb3, 0xed, 0x9e, 0x6f, 0x89,
-	0x50, 0xa4, 0x28, 0x63, 0x23, 0x25, 0x15, 0x89, 0x14, 0xed, 0x13, 0x05, 0x56, 0x47, 0xc4, 0xfe,
-	0x7f, 0xbe, 0x96, 0xfd, 0x5c, 0x81, 0xbc, 0x3f, 0x0e, 0x59, 0x87, 0x66, 0x07, 0x3d, 0x84, 0xd9,
-	0x36, 0xfd, 0xc5, 0x91, 0xd5, 0x27, 0xcc, 0x50, 0x1e, 0x6b, 0x8d, 0xfd, 0xc3, 0x26, 0x52, 0xbe,
-	0x5d, 0xfd, 0x12, 0xe4, 0x24, 0xb2, 0x3c, 0xac, 0x65, 0xd9, 0xb0, 0x56, 0x92, 0x87, 0xb5, 0xac,
-	0x34, 0x74, 0x5d, 0x7f, 0x06, 0x59, 0xf1, 0xc4, 0x8b, 0x56, 0x00, 0xed, 0x3c, 0x78, 0xd0, 0x7c,
-	0xb6, 0xf3, 0xe4, 0xf1, 0x83, 0x9d, 0xa7, 0x1f, 0xe8, 0xcd, 0xf7, 0x1b, 0xdf, 0xd9, 0x2f, 0x9e,
-	0x41, 0xe7, 0x60, 0x59, 0x6f, 0x7c, 0xe3, 0x83, 0x67, 0x8d, 0xe8, 0x92, 0xe2, 0x6d, 0xd9, 0x6f,
-	0x3c, 0x8d, 0xd2, 0x53, 0xdb, 0xff, 0x2d, 0x41, 0x8e, 0xe3, 0xee, 0x1a, 0xa6, 0x85, 0x7e, 0xab,
-	0x40, 0x31, 0xfa, 0xac, 0x89, 0x6a, 0x09, 0x07, 0x4e, 0x78, 0x3d, 0x56, 0xeb, 0x53, 0xf3, 0xb3,
-	0x1b, 0xa0, 0x5d, 0xfb, 0xe1, 0xdf, 0xff, 0xf3, 0x8b, 0xd4, 0x06, 0xba, 0x54, 0x8f, 0x79, 0x43,
-	0xaf, 0x87, 0x9c, 0xfc, 0x63, 0x05, 0xd0, 0x3e, 0x71, 0xb0, 0xd1, 0x0f, 0x41, 0x5c, 0xa9, 0xb1,
-	0x87, 0xfb, 0x9a, 0xff, 0x70, 0x5f, 0x6b, 0xf4, 0x07, 0xe4, 0x58, 0x9d, 0xe2, 0x16, 0x69, 0xb7,
-	0xa8, 0xf6, 0xeb, 0xa8, 0x3a, 0x51, 0x7b, 0xdd, 0xa5, 0x9a, 0x6f, 0x29, 0xe8, 0x77, 0x0a, 0x14,
-	0x22, 0xf7, 0x19, 0xdd, 0x9c, 0xac, 0x4b, 0x0a, 0x27, 0xb5, 0x36, 0x2d, 0x3b, 0x37, 0x52, 0x8d,
-	0xc2, 0xac, 0xa2, 0xab, 0x93, 0x61, 0x0e, 0x3c, 0x38, 0x3f, 0x51, 0x00, 0x82, 0x37, 0x53, 0x54,
-	0x1d, 0xe3, 0x94, 0xd0, 0xc3, 0xb0, 0x7a, 0x6d, 0x0a, 0x4e, 0x8e, 0x69, 0x83, 0x62, 0xba, 0x80,
-	0xce, 0xc7, 0x62, 0x6a, 0x31, 0xcd, 0xaf, 0x20, 0xcf, 0x3c, 0xc6, 0x91, 0x9c, 0xd4, 0x57, 0xd2,
-	0x13, 0xa8, 0x76, 0x9d, 0x2a, 0xbc, 0x8c, 0xb4, 0x31, 0x0a, 0x03, 0x2f, 0x7d, 0x1f, 0x0a, 0x4c,
-	0x73, 0xf0, 0x1e, 0x9a, 0xa4, 0x3c, 0x69, 0x88, 0x11, 0x3b, 0xb5, 0x9b, 0x54, 0xf5, 0x26, 0xba,
-	0x12, 0xab, 0x9a, 0xfe, 0x59, 0xaa, 0x8b, 0x8d, 0x83, 0x40, 0xfb, 0x00, 0xf2, 0x0f, 0xe9, 0xe0,
-	0xf1, 0xc6, 0xaa, 0xaf, 0x52, 0xd5, 0x15, 0x74, 0x71, 0xbc, 0x6a, 0xf4, 0x2b, 0x05, 0x4a, 0xd4,
-	0x4b, 0xd1, 0xd2, 0x7b, 0x63, 0x8c, 0x4b, 0x47, 0x5e, 0xff, 0xd4, 0xcd, 0x29, 0x1f, 0x89, 0xb4,
-	0x4d, 0x8a, 0xeb, 0x12, 0x5a, 0x8f, 0xc7, 0x15, 0xe8, 0xff, 0x7d, 0xf4, 0xf1, 0x40, 0xbc, 0xad,
-	0xdc, 0x19, 0x83, 0x2c, 0xe9, 0x85, 0x49, 0xad, 0x4e, 0xfb, 0xd0, 0x92, 0x94, 0x59, 0x82, 0x46,
-	0xbc, 0x2e, 0x46, 0x81, 0x1f, 0x29, 0xb0, 0x18, 0x7e, 0xe0, 0x18, 0x6b, 0xb6, 0x91, 0x77, 0x10,
-	0xf5, 0xd2, 0xc4, 0x91, 0x5e, 0xab, 0x50, 0x38, 0x2a, 0x2a, 0x27, 0xc1, 0x41, 0x3f, 0xa0, 0x97,
-	0x46, 0x6c, 0x41, 0xd7, 0x13, 0x84, 0xc6, 0xbc, 0x6c, 0xa8, 0x13, 0x07, 0x71, 0x6d, 0x9d, 0xea,
-	0x3f, 0x87, 0x56, 0x13, 0xf4, 0xa3, 0xbf, 0x28, 0xb0, 0x36, 0x6e, 0x3e, 0x47, 0xef, 0x4e, 0x81,
-	0x27, 0x61, 0xa8, 0x4f, 0xbc, 0x57, 0x51, 0x7e, 0xed, 0x36, 0x85, 0xb9, 0x85, 0xae, 0x25, 0x7a,
-	0x8d, 0x8d, 0x46, 0x2e, 0x26, 0x6d, 0x8e, 0xeb, 0x35, 0x2c, 0xc9, 0x10, 0xd8, 0xbc, 0x93, 0x14,
-	0x71, 0x57, 0x26, 0x19, 0x8a, 0x6e, 0x4f, 0x0a, 0x3b, 0x09, 0xc6, 0x4b, 0xaa, 0xe6, 0x4f, 0x0a,
-	0xac, 0x86, 0xfa, 0xc8, 0x60, 0x08, 0x45, 0xdb, 0x13, 0x9b, 0xb1, 0x91, 0x31, 0x58, 0xbd, 0x73,
-	0xa2, 0x3d, 0x3c, 0x15, 0xdf, 0xa0, 0x60, 0xaf, 0xa2, 0xcb, 0x89, 0x60, 0x07, 0x12, 0xac, 0xcf,
-	0xf8, 0x9f, 0x2f, 0x63, 0xa7, 0x95, 0xbb, 0xd3, 0x5c, 0xfb, 0xd1, 0xc9, 0x4d, 0xdd, 0x3a, 0xc1,
-	0xe8, 0x32, 0x05, 0x5e, 0x79, 0x8e, 0xf9, 0x5c, 0x81, 0x73, 0x89, 0xad, 0x3a, 0x7a, 0x67, 0x8a,
-	0x4b, 0x19, 0xd7, 0xdc, 0xab, 0x6f, 0x9f, 0xac, 0x55, 0x9e, 0x50, 0x8a, 0x65, 0x5b, 0x87, 0xf0,
-	0xb9, 0x50, 0x78, 0x88, 0x49, 0xa8, 0xa9, 0x4c, 0xba, 0x9a, 0x1b, 0x53, 0x34, 0x97, 0x13, 0xca,
-	0x2e, 0xeb, 0x36, 0xbd, 0x16, 0xa5, 0xc4, 0xaa, 0x5f, 0x90, 0x80, 0x1e, 0x5b, 0x87, 0x36, 0xba,
-	0x36, 0xe9, 0xd0, 0xe2, 0xbf, 0x1f, 0xa8, 0x97, 0x27, 0xb1, 0x7a, 0x02, 0xb5, 0x3b, 0x14, 0xce,
-	0x4d, 0xb4, 0x15, 0x0b, 0x47, 0xb2, 0x8a, 0x69, 0x1d, 0xda, 0xbc, 0x3e, 0x56, 0x95, 0x5b, 0xca,
-	0xee, 0xaf, 0x15, 0x38, 0x67, 0x3b, 0x9d, 0x78, 0x25, 0xbb, 0x45, 0xa9, 0x31, 0xdd, 0xf3, 0xac,
-	0xb4, 0xa7, 0x7c, 0xf7, 0x6e, 0xc7, 0x24, 0xdd, 0x61, 0xab, 0xd6, 0xb6, 0xfb, 0xf5, 0x81, 0x73,
-	0xec, 0xf6, 0x0d, 0x62, 0xb6, 0x7b, 0x46, 0xcb, 0xad, 0xfb, 0x32, 0x8c, 0x81, 0xe9, 0x86, 0x70,
-	0x7c, 0x19, 0x93, 0xee, 0x1f, 0x52, 0xcb, 0x0d, 0x5f, 0x47, 0x43, 0xd2, 0xf1, 0xb7, 0x80, 0xfe,
-	0x71, 0x83, 0x74, 0x3f, 0xf6, 0xe9, 0xad, 0x59, 0xea, 0x96, 0x3b, 0xff, 0x0b, 0x00, 0x00, 0xff,
-	0xff, 0x99, 0x2a, 0x75, 0x1f, 0x83, 0x22, 0x00, 0x00,
+	// 2486 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0x4b, 0x6f, 0x1b, 0xc9,
+	0x11, 0xf6, 0x90, 0xd4, 0x83, 0x45, 0x8a, 0x94, 0xda, 0x94, 0x4c, 0x8f, 0xe5, 0x15, 0x3d, 0xb2,
+	0x2d, 0xda, 0xb2, 0x49, 0x5b, 0xde, 0xf5, 0x3a, 0x9b, 0xc0, 0x81, 0x64, 0x2b, 0xb6, 0xb3, 0x0e,
+	0x56, 0x19, 0x79, 0x9d, 0xc7, 0x2e, 0x42, 0x0c, 0xa9, 0x16, 0x39, 0x36, 0x39, 0x43, 0xcf, 0x34,
+	0x05, 0xcb, 0x48, 0x02, 0xe4, 0x81, 0x9c, 0xf3, 0x00, 0x92, 0x9c, 0x82, 0xe4, 0xb6, 0xbb, 0xc0,
+	0x22, 0x41, 0x0e, 0xb9, 0xec, 0x21, 0xf7, 0x5c, 0x93, 0x1c, 0x02, 0xe4, 0x98, 0x1f, 0x12, 0xf4,
+	0x63, 0x7a, 0x7a, 0x86, 0x1c, 0x92, 0x86, 0x75, 0x08, 0x72, 0xb2, 0xa6, 0xaa, 0xba, 0xea, 0xeb,
+	0xaa, 0xee, 0x7a, 0x34, 0x0d, 0x6b, 0x98, 0x74, 0xea, 0x47, 0x37, 0xad, 0x6e, 0xbf, 0x63, 0xdd,
+	0xac, 0x37, 0xb1, 0xd5, 0x72, 0x9d, 0x46, 0xab, 0x63, 0xd9, 0x4e, 0xad, 0xef, 0xb9, 0xc4, 0x45,
+	0xcb, 0x98, 0x74, 0xb0, 0x87, 0x07, 0xbd, 0x1a, 0x26, 0x9d, 0x5a, 0x20, 0xa9, 0xaf, 0xb6, 0x5d,
+	0xb7, 0xdd, 0xc5, 0x75, 0xab, 0x6f, 0xd7, 0x2d, 0xc7, 0x71, 0x89, 0x45, 0x6c, 0xd7, 0xf1, 0xf9,
+	0x22, 0xfd, 0x9c, 0xe0, 0xb2, 0xaf, 0xe6, 0xe0, 0xb0, 0x8e, 0x7b, 0x7d, 0x72, 0x2c, 0x98, 0x67,
+	0xe3, 0x4c, 0xcb, 0x09, 0x58, 0x6f, 0x45, 0xd0, 0x58, 0x84, 0x60, 0x9f, 0x2b, 0x16, 0xfc, 0x91,
+	0x68, 0x9b, 0x5d, 0xb7, 0xf5, 0x5c, 0x08, 0xac, 0x46, 0x04, 0x8e, 0xac, 0xae, 0x7d, 0x60, 0x11,
+	0xd7, 0xe3, 0x5c, 0xc3, 0x05, 0xf4, 0x34, 0x20, 0xdd, 0xeb, 0x58, 0x4e, 0x1b, 0xef, 0x63, 0x82,
+	0xee, 0xc0, 0xac, 0xd5, 0xa2, 0x46, 0xca, 0x5a, 0x45, 0xab, 0x16, 0xb6, 0x2a, 0xb5, 0x91, 0x5b,
+	0xae, 0xed, 0x63, 0xb2, 0xcd, 0xe4, 0x4c, 0x21, 0x8f, 0xd6, 0x20, 0xd7, 0x1f, 0x34, 0xbb, 0x76,
+	0xab, 0xf1, 0x1c, 0x1f, 0xfb, 0xe5, 0x54, 0x25, 0x5d, 0xcd, 0x9b, 0xc0, 0x49, 0xef, 0xe3, 0x63,
+	0xdf, 0xf8, 0x22, 0x05, 0x67, 0x1e, 0xdb, 0x3e, 0xd9, 0x0e, 0x77, 0xe2, 0x9b, 0xf8, 0xc5, 0x00,
+	0xfb, 0x04, 0x55, 0xa1, 0xd8, 0xc1, 0xd6, 0x01, 0x87, 0xdf, 0xf0, 0x5c, 0x97, 0x30, 0xfb, 0xf9,
+	0x87, 0xa7, 0xcc, 0x05, 0xca, 0xd8, 0xa1, 0x74, 0xd3, 0x75, 0x09, 0x5a, 0x87, 0xbc, 0xef, 0x0e,
+	0xbc, 0x16, 0x6e, 0xe0, 0xbe, 0xdb, 0xea, 0x94, 0x53, 0x15, 0xad, 0x9a, 0x79, 0x78, 0xca, 0xcc,
+	0x71, 0xea, 0x2e, 0x25, 0xa2, 0x0b, 0x20, 0x3e, 0xb9, 0xaa, 0xb4, 0x50, 0x05, 0x9c, 0x18, 0xe8,
+	0x21, 0x96, 0xd7, 0xc6, 0x44, 0xe8, 0xc9, 0x04, 0x7a, 0x38, 0x55, 0xea, 0x11, 0x42, 0x4c, 0xcf,
+	0x4c, 0xa0, 0x87, 0x13, 0x99, 0x1e, 0x1d, 0xe6, 0xda, 0xd8, 0xc1, 0xbe, 0xed, 0x97, 0x67, 0x2b,
+	0x5a, 0x75, 0xfe, 0xe1, 0x29, 0x33, 0x20, 0xa0, 0x73, 0x90, 0xed, 0x5b, 0x6d, 0xdc, 0xf0, 0xed,
+	0x57, 0xb8, 0x3c, 0x57, 0xd1, 0xaa, 0x33, 0xe6, 0x3c, 0x25, 0xec, 0xdb, 0xaf, 0x30, 0x3a, 0x0f,
+	0xc0, 0x98, 0xc4, 0x7d, 0x8e, 0x9d, 0xf2, 0x7c, 0x45, 0xab, 0x66, 0x4d, 0x26, 0xfe, 0x84, 0x12,
+	0x76, 0x0a, 0x90, 0x7f, 0x31, 0xc0, 0xde, 0x71, 0xe3, 0xd0, 0xee, 0x12, 0xec, 0x19, 0x9f, 0x6a,
+	0x50, 0x1e, 0xf6, 0x9e, 0xdf, 0x77, 0x1d, 0x1f, 0xa3, 0xaf, 0x41, 0x5e, 0x39, 0x1f, 0x7e, 0x59,
+	0xab, 0xa4, 0xab, 0xb9, 0x2d, 0x23, 0x21, 0x76, 0x8a, 0x0a, 0x33, 0xb2, 0x0e, 0x5d, 0x86, 0xa2,
+	0x83, 0x5f, 0x92, 0x86, 0x02, 0x2c, 0xc5, 0x80, 0x2d, 0x50, 0xf2, 0x5e, 0x00, 0x8e, 0x62, 0x27,
+	0x2e, 0xb1, 0xba, 0x7c, 0x67, 0x69, 0xb6, 0xb3, 0x2c, 0xa3, 0xd0, 0xad, 0x19, 0x7f, 0xd5, 0x60,
+	0x89, 0x62, 0x65, 0x51, 0x93, 0x31, 0x2e, 0x41, 0x26, 0x12, 0x58, 0xf6, 0x45, 0xa9, 0x7e, 0xd7,
+	0x25, 0x32, 0x8e, 0xec, 0x0b, 0xad, 0xc0, 0x0c, 0x0f, 0x4b, 0x5a, 0x90, 0xf9, 0xa7, 0xea, 0xed,
+	0xcc, 0x58, 0x6f, 0xcf, 0x8c, 0xf5, 0xf6, 0xec, 0x24, 0x6f, 0xff, 0x59, 0x03, 0xa4, 0xee, 0x40,
+	0xf8, 0xf9, 0x43, 0x28, 0xb2, 0x13, 0x7a, 0xcf, 0x75, 0x88, 0x65, 0x3b, 0xd8, 0x0b, 0x5c, 0xbd,
+	0x99, 0xe0, 0xea, 0x1d, 0x76, 0x2b, 0x77, 0x22, 0x6b, 0xcc, 0xb8, 0x8e, 0x93, 0x72, 0xfb, 0x00,
+	0x4a, 0xa3, 0xec, 0xa1, 0xbb, 0x30, 0xc3, 0x2c, 0x32, 0xcf, 0xe7, 0xb6, 0xaa, 0x49, 0x57, 0xda,
+	0x6e, 0x3b, 0xf8, 0x40, 0xd1, 0x60, 0xf2, 0x65, 0xd4, 0xac, 0x72, 0x2f, 0x29, 0xb2, 0xbc, 0x99,
+	0x6d, 0x06, 0x37, 0xd2, 0xf8, 0x24, 0x03, 0xd9, 0x7b, 0x34, 0x49, 0x3e, 0xc4, 0xd6, 0x01, 0x8d,
+	0x02, 0xbb, 0xc9, 0x2c, 0xa8, 0xd4, 0x60, 0xc6, 0x9c, 0xa7, 0x84, 0x7d, 0x1a, 0xd6, 0xf3, 0x00,
+	0x8c, 0xa9, 0x5c, 0x5d, 0x93, 0x89, 0xf3, 0xeb, 0x76, 0x79, 0x38, 0x0b, 0xb0, 0xab, 0x1b, 0xcf,
+	0x01, 0x97, 0xa0, 0x70, 0x68, 0x3b, 0x56, 0xd7, 0x7e, 0x85, 0x85, 0x21, 0x76, 0x7b, 0xcd, 0x05,
+	0x49, 0x65, 0xd6, 0x36, 0xa0, 0x18, 0x8a, 0x71, 0x93, 0x33, 0x4c, 0x2e, 0x5c, 0xcd, 0xed, 0xde,
+	0x80, 0x52, 0x28, 0xa8, 0x18, 0x9f, 0x65, 0xc6, 0x91, 0xe4, 0x45, 0x10, 0x3c, 0x1b, 0xf8, 0xc4,
+	0x3e, 0xb4, 0x03, 0x04, 0x73, 0x1c, 0x81, 0xa4, 0x06, 0x08, 0x42, 0x31, 0x8e, 0x60, 0x9e, 0x23,
+	0x90, 0x64, 0x89, 0x20, 0x14, 0x54, 0x10, 0x64, 0x39, 0x02, 0xc9, 0x0b, 0x11, 0xdc, 0x86, 0x33,
+	0x7d, 0x0f, 0x1f, 0xd9, 0xee, 0xc0, 0x6f, 0xc4, 0xa0, 0x00, 0x33, 0xb1, 0x1c, 0xb0, 0xbf, 0x1e,
+	0x81, 0x74, 0x07, 0xca, 0x23, 0xd6, 0x71, 0x6c, 0x39, 0xb6, 0x70, 0x65, 0x68, 0x21, 0xc7, 0xb8,
+	0x0d, 0xe7, 0x47, 0xac, 0x54, 0xc0, 0xe6, 0x19, 0x58, 0x7d, 0x68, 0xb9, 0x04, 0x6d, 0x7c, 0x04,
+	0xcb, 0xf4, 0x56, 0xdd, 0x73, 0x7b, 0x3d, 0x9b, 0x10, 0x8c, 0x65, 0x6e, 0x90, 0xf7, 0x5d, 0x4b,
+	0xbc, 0xef, 0xa9, 0xd8, 0x7d, 0x1f, 0xba, 0xb3, 0xff, 0x4c, 0xc3, 0x22, 0x3f, 0xbd, 0xa1, 0x7e,
+	0x54, 0x8a, 0x28, 0x0e, 0xd4, 0x7e, 0x0b, 0xa0, 0x25, 0x65, 0x58, 0xa9, 0xca, 0x6d, 0xbd, 0x3b,
+	0xf6, 0x0a, 0x87, 0x2a, 0x6b, 0xe1, 0x9f, 0xbb, 0x0e, 0xf1, 0x8e, 0x4d, 0x45, 0x15, 0x7a, 0x1b,
+	0x56, 0x68, 0x39, 0x3c, 0xc2, 0x0d, 0x59, 0x6e, 0x1b, 0x2d, 0x77, 0xe0, 0xf0, 0x83, 0x9c, 0x31,
+	0x4b, 0x9c, 0x1b, 0x16, 0x5e, 0xca, 0xd3, 0xbf, 0x02, 0x0b, 0x52, 0xe9, 0x23, 0x82, 0x7b, 0x68,
+	0x13, 0x96, 0xc2, 0xf5, 0xb6, 0x73, 0x60, 0xb7, 0x30, 0xcf, 0x34, 0x19, 0x73, 0x51, 0x32, 0x1e,
+	0x71, 0xba, 0xde, 0x86, 0x42, 0x08, 0x89, 0xba, 0x17, 0x7d, 0x18, 0xd9, 0x1e, 0xcf, 0x50, 0xef,
+	0xbc, 0xf6, 0xf6, 0x28, 0x12, 0x75, 0x73, 0xfa, 0x00, 0x8a, 0xb1, 0xbd, 0xa3, 0x45, 0x48, 0x3f,
+	0xc7, 0xc7, 0xc2, 0xb9, 0xf4, 0x4f, 0xf4, 0x18, 0x66, 0x8e, 0xac, 0xee, 0x00, 0xb3, 0x78, 0xe5,
+	0xb6, 0x6e, 0xbf, 0xbe, 0x57, 0xe9, 0x16, 0x4c, 0xae, 0xe4, 0xbd, 0xd4, 0x1d, 0xcd, 0xf8, 0x97,
+	0x06, 0xab, 0x94, 0x26, 0x9d, 0xb6, 0x63, 0x75, 0x2d, 0xa7, 0xf5, 0x46, 0x87, 0x27, 0xde, 0xad,
+	0xa4, 0xe3, 0xdd, 0x0a, 0x2a, 0xc3, 0x5c, 0xe0, 0xf8, 0x0c, 0x73, 0x7c, 0xf0, 0x79, 0xa2, 0x75,
+	0xe6, 0xb7, 0x29, 0x58, 0x1a, 0xda, 0x57, 0xc2, 0xa1, 0x7d, 0x0c, 0xf3, 0x4d, 0x21, 0x21, 0x8e,
+	0xec, 0x8d, 0x04, 0xe7, 0x0e, 0x69, 0xac, 0x89, 0x3f, 0x4c, 0xa9, 0x61, 0x54, 0xcd, 0x49, 0x4f,
+	0xae, 0x39, 0x99, 0x58, 0xcd, 0xd1, 0xbf, 0x0d, 0x73, 0x42, 0x37, 0xdb, 0xba, 0x74, 0x29, 0xaf,
+	0xf2, 0x66, 0x56, 0x7a, 0x94, 0x6e, 0xca, 0x76, 0x0e, 0xf0, 0x4b, 0x91, 0xf6, 0xf9, 0x07, 0x75,
+	0xb3, 0x80, 0x24, 0x6e, 0x48, 0xf0, 0x69, 0xfc, 0x51, 0xe3, 0xc9, 0x42, 0x6e, 0xe6, 0x8d, 0xe2,
+	0xbd, 0xc2, 0xfb, 0xda, 0x23, 0x6e, 0x66, 0xde, 0x14, 0x5f, 0xd1, 0x60, 0x66, 0xc6, 0x06, 0x73,
+	0x66, 0x52, 0x30, 0xbf, 0x07, 0xa7, 0x1f, 0xe0, 0x10, 0xaf, 0x02, 0x97, 0x6f, 0x5c, 0xc2, 0xe5,
+	0x5b, 0x5f, 0x8b, 0xf8, 0x2b, 0x25, 0xba, 0xa2, 0xd0, 0x63, 0xc3, 0x4d, 0x49, 0x0a, 0x20, 0xf4,
+	0x46, 0xc2, 0x29, 0xf9, 0x08, 0x0a, 0x61, 0xea, 0xe8, 0xda, 0x3e, 0x11, 0x67, 0xe5, 0xed, 0x49,
+	0x67, 0xc5, 0xaf, 0x29, 0x59, 0x29, 0x68, 0x55, 0x16, 0xa4, 0x2e, 0x96, 0x58, 0x4e, 0xe8, 0xd0,
+	0x3c, 0x53, 0x47, 0x0f, 0xd9, 0xa6, 0x94, 0x22, 0x7e, 0x0a, 0xbc, 0x74, 0x17, 0xb2, 0x12, 0x83,
+	0xc8, 0x29, 0x95, 0x49, 0x5b, 0x31, 0xc3, 0x25, 0x86, 0x0d, 0xeb, 0x6a, 0x50, 0xb6, 0x59, 0xd8,
+	0xf7, 0x31, 0xe1, 0x23, 0xcf, 0x89, 0x16, 0xa0, 0x9f, 0xa7, 0x61, 0x31, 0xae, 0x3f, 0x21, 0x4a,
+	0x5b, 0xb0, 0xcc, 0x0e, 0xa0, 0x45, 0xf0, 0x41, 0x63, 0x78, 0x6c, 0x3a, 0x2d, 0x99, 0x7b, 0x61,
+	0x46, 0xda, 0x84, 0xa5, 0x70, 0x4d, 0x90, 0x9b, 0xd2, 0xbc, 0x28, 0x48, 0x86, 0x28, 0x0a, 0xe8,
+	0x1a, 0x20, 0xfc, 0xd2, 0x8e, 0x6b, 0xcf, 0x30, 0xed, 0x8b, 0x9c, 0xa3, 0xa8, 0xbe, 0x04, 0x05,
+	0x21, 0x1d, 0xe8, 0x9d, 0x61, 0x7a, 0x17, 0x38, 0x35, 0x50, 0x5a, 0x83, 0xd3, 0x7e, 0xd7, 0xf2,
+	0x3b, 0x31, 0xad, 0xb3, 0x4c, 0xeb, 0x92, 0x60, 0x29, 0x6a, 0x37, 0xa0, 0x18, 0xc8, 0x07, 0x7a,
+	0xe7, 0x98, 0xde, 0x82, 0x20, 0x2b, 0x8a, 0xf1, 0x33, 0xdc, 0x8a, 0xc3, 0x9d, 0xe7, 0x8a, 0x05,
+	0x2b, 0xaa, 0x38, 0x90, 0x0f, 0x14, 0x67, 0xb9, 0x62, 0x41, 0x16, 0x8a, 0x8d, 0xbb, 0x70, 0x4e,
+	0x86, 0x7e, 0x0f, 0x7b, 0x87, 0xae, 0xd7, 0x63, 0x79, 0x50, 0x44, 0x3d, 0x56, 0x05, 0xb4, 0xa1,
+	0x99, 0xf5, 0xb3, 0x34, 0xac, 0x8e, 0x56, 0x20, 0x26, 0x02, 0x5d, 0x49, 0xca, 0xbc, 0x40, 0x87,
+	0x29, 0x76, 0x03, 0x8a, 0xb6, 0xd3, 0xea, 0x0e, 0x7c, 0xdb, 0x75, 0x58, 0x67, 0xc6, 0xc3, 0x9b,
+	0x31, 0x0b, 0x92, 0x4c, 0x5b, 0x32, 0x1f, 0xd5, 0xe1, 0x74, 0x28, 0x78, 0x60, 0xfb, 0x84, 0xeb,
+	0xe3, 0xb1, 0x45, 0x92, 0x75, 0x3f, 0xe0, 0xd0, 0x36, 0xa3, 0xe5, 0x7a, 0x1e, 0x6e, 0x91, 0xee,
+	0x71, 0xe3, 0xc8, 0xa5, 0x7e, 0xe0, 0xa3, 0x2d, 0x8b, 0xf0, 0xbc, 0x59, 0x92, 0xdc, 0xa7, 0x94,
+	0xb9, 0xcf, 0x78, 0xa3, 0x56, 0xf1, 0x41, 0x96, 0x45, 0x7b, 0x68, 0xd5, 0x13, 0xc6, 0xa3, 0xad,
+	0x69, 0x7c, 0x15, 0xed, 0xc6, 0x59, 0xd4, 0xe7, 0x4d, 0x14, 0x5d, 0xc3, 0x46, 0x80, 0xeb, 0x80,
+	0x7a, 0xb6, 0xef, 0xdb, 0x4e, 0x3b, 0xec, 0x82, 0x78, 0xe4, 0xf3, 0xe6, 0x92, 0xe0, 0x28, 0x79,
+	0xec, 0x01, 0x54, 0xac, 0x23, 0xec, 0xd1, 0x94, 0x32, 0xd4, 0x3b, 0x05, 0xb5, 0x81, 0x76, 0xcd,
+	0x29, 0xf3, 0xbc, 0x90, 0xdb, 0x8e, 0x36, 0x51, 0xa2, 0x00, 0x19, 0xbf, 0xd0, 0xa0, 0x20, 0x89,
+	0xdf, 0x1c, 0xe0, 0x01, 0xa6, 0x01, 0x6e, 0x75, 0x06, 0x9e, 0xd3, 0xe8, 0xda, 0x3d, 0x3b, 0x98,
+	0x47, 0x80, 0x91, 0x1e, 0x53, 0x8a, 0x6c, 0xd8, 0xd8, 0x00, 0x3c, 0xe2, 0x26, 0x96, 0x42, 0xae,
+	0x72, 0xfe, 0xaa, 0xc0, 0xee, 0x50, 0x63, 0xb8, 0x85, 0x60, 0xf7, 0x28, 0x94, 0x34, 0xfe, 0xad,
+	0xc1, 0x5a, 0xa4, 0x8a, 0x6d, 0xfb, 0xbe, 0xdd, 0x76, 0x7a, 0xd8, 0x21, 0xff, 0x0f, 0xfd, 0xcb,
+	0xe7, 0x69, 0x28, 0x8d, 0xda, 0x5a, 0x42, 0xda, 0xb3, 0x20, 0x67, 0x85, 0x42, 0xa2, 0x32, 0x7d,
+	0x75, 0x52, 0x3a, 0x57, 0xf4, 0x86, 0x6d, 0x62, 0x48, 0x34, 0x55, 0x9d, 0x27, 0x55, 0xa2, 0xfe,
+	0xa1, 0xc1, 0xe9, 0x11, 0xb6, 0x68, 0x12, 0x0e, 0xde, 0x05, 0xa3, 0x1d, 0x76, 0xc6, 0x5c, 0x6c,
+	0xc6, 0x87, 0x8f, 0x0d, 0x28, 0x4a, 0xa9, 0x86, 0xda, 0xfc, 0x14, 0x24, 0xf9, 0x11, 0x2b, 0x72,
+	0xeb, 0xb0, 0xc0, 0xdf, 0x61, 0xb0, 0xc7, 0x47, 0x38, 0xde, 0x0b, 0xe5, 0x03, 0x22, 0x9b, 0xdc,
+	0xd6, 0x61, 0xa1, 0xef, 0xb9, 0x7d, 0xd7, 0x0f, 0x84, 0xf8, 0xd0, 0x9b, 0x0f, 0x88, 0xc1, 0x84,
+	0xad, 0x34, 0x15, 0x33, 0xb1, 0x26, 0xcc, 0x38, 0x84, 0x8a, 0x5a, 0x0d, 0xf7, 0x2c, 0x8f, 0xd8,
+	0x2d, 0xbb, 0xcf, 0xdf, 0x82, 0x4e, 0xb0, 0x14, 0x7e, 0xaa, 0xc1, 0x5b, 0x49, 0x56, 0x44, 0xe6,
+	0x1c, 0x7d, 0x42, 0x56, 0x21, 0x2b, 0xc7, 0x6d, 0x6e, 0xc6, 0x0c, 0x09, 0x68, 0x1f, 0x16, 0xfa,
+	0xaa, 0x32, 0xe6, 0xa7, 0xdc, 0xd6, 0xf5, 0x49, 0x27, 0x28, 0x8a, 0x20, 0xaa, 0xc3, 0x78, 0x02,
+	0x2b, 0xca, 0x8b, 0xd8, 0x9e, 0xeb, 0x76, 0x03, 0x4f, 0x44, 0x6e, 0x8a, 0x36, 0xf6, 0xa6, 0xa4,
+	0x62, 0x37, 0xc5, 0xf8, 0x44, 0x83, 0x33, 0x43, 0x6a, 0xff, 0x37, 0x9f, 0xeb, 0x7e, 0xa9, 0x41,
+	0x3e, 0x98, 0xc7, 0x9c, 0x43, 0xbb, 0x8d, 0x1e, 0xc0, 0x6c, 0x8b, 0xfd, 0x25, 0x90, 0xd5, 0x27,
+	0x0c, 0x71, 0x54, 0xb4, 0xc6, 0xff, 0xe1, 0x23, 0xb1, 0x58, 0xae, 0x7f, 0x09, 0x72, 0x0a, 0x59,
+	0x9d, 0x16, 0xb3, 0x7c, 0x5a, 0x2c, 0xa9, 0xd3, 0x62, 0x56, 0x99, 0xfa, 0xae, 0x3e, 0x85, 0xac,
+	0x7c, 0x63, 0x46, 0x2b, 0x80, 0xb6, 0xef, 0xdf, 0x6f, 0x3c, 0xdd, 0x7e, 0xfc, 0xe8, 0xfe, 0xf6,
+	0x93, 0x0f, 0xcc, 0xc6, 0xfb, 0xbb, 0xdf, 0xd9, 0x5f, 0x3c, 0x85, 0xce, 0xc2, 0xb2, 0xb9, 0xfb,
+	0x8d, 0x0f, 0x9e, 0xee, 0xc6, 0x59, 0x1a, 0x5d, 0xb2, 0xbf, 0xfb, 0x24, 0x4e, 0x4f, 0x6d, 0xfd,
+	0x68, 0x19, 0x72, 0x02, 0x77, 0xc7, 0xb2, 0x1d, 0xf4, 0x3b, 0x0d, 0x16, 0xe3, 0xef, 0xaa, 0xa8,
+	0x96, 0xb0, 0xe1, 0x84, 0xe7, 0x6b, 0xbd, 0x3e, 0xb5, 0x3c, 0x3f, 0x01, 0xc6, 0x95, 0x1f, 0xff,
+	0xfd, 0x3f, 0xbf, 0x4a, 0xad, 0xa3, 0x0b, 0xf5, 0x11, 0x8f, 0xf8, 0xf5, 0x48, 0x90, 0x7f, 0xaa,
+	0x01, 0xda, 0x27, 0x1e, 0xb6, 0x7a, 0x11, 0x88, 0x2b, 0x35, 0xfe, 0xcb, 0x41, 0x2d, 0xf8, 0xe5,
+	0xa0, 0xb6, 0xdb, 0xeb, 0x93, 0x63, 0x7d, 0x8a, 0x53, 0x64, 0xdc, 0x60, 0xd6, 0xaf, 0xa2, 0xea,
+	0x44, 0xeb, 0x75, 0x9f, 0x59, 0xbe, 0xa1, 0xa1, 0xdf, 0x6b, 0x50, 0x8c, 0x9d, 0x67, 0x74, 0x7d,
+	0xb2, 0x2d, 0xe5, 0x3a, 0xe9, 0xb5, 0x69, 0xc5, 0x85, 0x93, 0x6a, 0x0c, 0x66, 0x15, 0x5d, 0x9e,
+	0x0c, 0xb3, 0x4f, 0xe1, 0xfc, 0x4c, 0x03, 0x08, 0x1f, 0x6d, 0x51, 0x75, 0x4c, 0x50, 0x22, 0x2f,
+	0xd3, 0xfa, 0x95, 0x29, 0x24, 0x05, 0xa6, 0x75, 0x86, 0xe9, 0x3c, 0x3a, 0x37, 0x12, 0x53, 0x93,
+	0x5b, 0xfe, 0x21, 0xe4, 0x79, 0xc4, 0x04, 0x92, 0xa4, 0x58, 0x4d, 0xfd, 0x12, 0x6b, 0x5c, 0x65,
+	0x66, 0x2f, 0x22, 0x63, 0x8c, 0xd9, 0x30, 0x56, 0xdf, 0x87, 0x22, 0xb7, 0x1f, 0x3e, 0xcb, 0x26,
+	0x41, 0x48, 0x9a, 0xa5, 0xe4, 0x4a, 0xe3, 0x3a, 0x33, 0xbd, 0x81, 0x2e, 0x8d, 0x34, 0xcd, 0x7e,
+	0x1d, 0xa3, 0xfd, 0x60, 0x68, 0xbd, 0x0f, 0xf9, 0x07, 0x6c, 0xfe, 0x79, 0x63, 0xd3, 0x97, 0x99,
+	0xe9, 0x0a, 0x7a, 0x6b, 0xbc, 0x69, 0xf4, 0x6b, 0x0d, 0x4a, 0x2c, 0x56, 0xf1, 0x02, 0x7c, 0x6d,
+	0x4c, 0x60, 0x87, 0x1e, 0x21, 0xf5, 0x8d, 0x29, 0xdf, 0xaa, 0x8c, 0x0d, 0x86, 0xeb, 0x02, 0x5a,
+	0x1b, 0x8d, 0x2b, 0xb4, 0xff, 0x87, 0xf8, 0x1b, 0x86, 0x7c, 0xe2, 0xb9, 0x35, 0x06, 0x59, 0xd2,
+	0x43, 0x57, 0xe2, 0x79, 0x19, 0x5a, 0x90, 0x94, 0x5f, 0xc2, 0x76, 0xbc, 0x2e, 0xa7, 0x94, 0x9f,
+	0x68, 0x50, 0x88, 0xbe, 0xb3, 0x8c, 0x75, 0xdb, 0xd0, 0x73, 0x8c, 0x7e, 0x61, 0xe2, 0xcb, 0x82,
+	0x51, 0x61, 0x70, 0x74, 0x54, 0x4e, 0x82, 0x83, 0x7e, 0xc0, 0x0e, 0x8d, 0x5c, 0x82, 0xae, 0x26,
+	0x28, 0x1d, 0xf1, 0xc0, 0xa2, 0x4f, 0x7c, 0x0f, 0x30, 0xd6, 0x98, 0xfd, 0xb3, 0xe8, 0x4c, 0x82,
+	0x7d, 0xf4, 0x17, 0x0d, 0x56, 0xc7, 0x3d, 0x13, 0xa0, 0xf7, 0xa6, 0xc0, 0x93, 0xf0, 0xb6, 0x90,
+	0x78, 0xae, 0xe2, 0xf2, 0xc6, 0x4d, 0x06, 0x73, 0x13, 0x5d, 0x49, 0x8c, 0x1a, 0x1f, 0x90, 0x7c,
+	0x4c, 0x5a, 0x02, 0xd7, 0x2b, 0x58, 0x52, 0x21, 0xf0, 0xa9, 0x27, 0xe9, 0xc6, 0x5d, 0x9a, 0xe4,
+	0x28, 0xb6, 0x3c, 0xe9, 0xda, 0x29, 0x30, 0x5e, 0x30, 0x33, 0x7f, 0xd2, 0xe0, 0x4c, 0xa4, 0x9b,
+	0x0c, 0xe7, 0x63, 0xb4, 0x35, 0xb1, 0x25, 0x1b, 0x9a, 0xc6, 0xf5, 0x5b, 0xaf, 0xb5, 0x46, 0x24,
+	0xe4, 0x6b, 0x0c, 0xec, 0x65, 0x74, 0x31, 0x11, 0x6c, 0x5f, 0x81, 0xf5, 0xb9, 0xf8, 0x15, 0x75,
+	0xe4, 0xcc, 0x72, 0x7b, 0x9a, 0x63, 0x3f, 0x3c, 0xbf, 0xe9, 0x9b, 0xaf, 0x31, 0xc0, 0x4c, 0x81,
+	0x57, 0x9d, 0x66, 0xbe, 0xd0, 0xe0, 0x6c, 0x62, 0xc3, 0x8e, 0xde, 0x9d, 0xe2, 0x50, 0x8e, 0x6a,
+	0xf1, 0xf5, 0x77, 0x5e, 0xaf, 0x61, 0x9e, 0x50, 0x90, 0x55, 0x5f, 0x47, 0xf0, 0xf9, 0x50, 0x7c,
+	0x80, 0x49, 0xa4, 0xb5, 0x4c, 0x3a, 0x9a, 0xeb, 0x53, 0xb4, 0x98, 0x13, 0x8a, 0x2f, 0xef, 0x39,
+	0x69, 0xa3, 0x52, 0xe2, 0xd5, 0x2f, 0x4c, 0x40, 0x8f, 0x9c, 0x43, 0x17, 0x5d, 0x99, 0xb4, 0x69,
+	0xf9, 0xbf, 0x20, 0xf4, 0x8b, 0x93, 0x44, 0xa9, 0x42, 0xe3, 0x16, 0x83, 0x73, 0x1d, 0x6d, 0x8e,
+	0x84, 0xa3, 0x78, 0xc5, 0x76, 0x0e, 0x5d, 0x51, 0x1f, 0xab, 0xda, 0x0d, 0x6d, 0xe7, 0x37, 0x1a,
+	0x9c, 0x75, 0xbd, 0xf6, 0x68, 0x23, 0x3b, 0x8b, 0x4a, 0x7b, 0xba, 0x47, 0xbd, 0xb4, 0xa7, 0x7d,
+	0xf7, 0x76, 0xdb, 0x26, 0x9d, 0x41, 0xb3, 0xd6, 0x72, 0x7b, 0xf5, 0xbe, 0x77, 0xec, 0xf7, 0x2c,
+	0x62, 0xb7, 0xba, 0x56, 0xd3, 0xaf, 0x07, 0x3a, 0xac, 0xbe, 0xed, 0x47, 0x70, 0x7c, 0x19, 0x93,
+	0xce, 0x67, 0xa9, 0xe5, 0xdd, 0xc0, 0xc6, 0xae, 0x62, 0xe3, 0x6f, 0x21, 0xfd, 0xe3, 0x5d, 0xd2,
+	0xf9, 0x38, 0xa0, 0x37, 0x67, 0x59, 0x58, 0x6e, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x40, 0x23,
+	0x59, 0xd3, 0x0a, 0x23, 0x00, 0x00,
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
@@ -2595,7 +2615,7 @@ func (c *beaconChainClient) StreamBlocks(ctx context.Context, in *empty.Empty, o
 }
 
 type BeaconChain_StreamBlocksClient interface {
-	Recv() (*BeaconBlock, error)
+	Recv() (*SignedBeaconBlock, error)
 	grpc.ClientStream
 }
 
@@ -2603,8 +2623,8 @@ type beaconChainStreamBlocksClient struct {
 	grpc.ClientStream
 }
 
-func (x *beaconChainStreamBlocksClient) Recv() (*BeaconBlock, error) {
-	m := new(BeaconBlock)
+func (x *beaconChainStreamBlocksClient) Recv() (*SignedBeaconBlock, error) {
+	m := new(SignedBeaconBlock)
 	if err := x.ClientStream.RecvMsg(m); err != nil {
 		return nil, err
 	}
@@ -2883,7 +2903,7 @@ func _BeaconChain_StreamBlocks_Handler(srv interface{}, stream grpc.ServerStream
 }
 
 type BeaconChain_StreamBlocksServer interface {
-	Send(*BeaconBlock) error
+	Send(*SignedBeaconBlock) error
 	grpc.ServerStream
 }
 
@@ -2891,7 +2911,7 @@ type beaconChainStreamBlocksServer struct {
 	grpc.ServerStream
 }
 
-func (x *beaconChainStreamBlocksServer) Send(m *BeaconBlock) error {
+func (x *beaconChainStreamBlocksServer) Send(m *SignedBeaconBlock) error {
 	return x.ServerStream.SendMsg(m)
 }
 
diff --git a/eth/v1alpha1/beacon_chain.proto b/eth/v1alpha1/beacon_chain.proto
index 8de1adb..3a9092c 100644
--- a/eth/v1alpha1/beacon_chain.proto
+++ b/eth/v1alpha1/beacon_chain.proto
@@ -15,6 +15,7 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
 import "google/api/annotations.proto";
 import "google/protobuf/empty.proto";
 import "google/protobuf/any.proto";
@@ -85,9 +86,9 @@ service BeaconChain {
         };
     }
 
-    // Server-side stream of all blocks as they are received by
-    // the beacon chain node. 
-    rpc StreamBlocks(google.protobuf.Empty) returns (stream BeaconBlock) {
+    // Server-side stream of all signed blocks as they are received by
+    // the beacon chain node.
+    rpc StreamBlocks(google.protobuf.Empty) returns (stream SignedBeaconBlock) {
         option (google.api.http) = {
             get: "/eth/v1alpha1/beacon/blocks/stream"
         };
@@ -344,7 +345,7 @@ message ChainHead {
     uint64 head_epoch = 2;
 
     // 32 byte merkle tree root of the canonical head block in the beacon node.
-    bytes head_block_root = 3;
+    bytes head_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Most recent slot that contains the finalized block.
     uint64 finalized_slot = 4;
@@ -353,7 +354,7 @@ message ChainHead {
     uint64 finalized_epoch = 5;
     
     // Most recent 32 byte finalized block root.
-    bytes finalized_block_root = 6;
+    bytes finalized_block_root = 6 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Most recent slot that contains the justified block.
     uint64 justified_slot = 7;
@@ -362,7 +363,7 @@ message ChainHead {
     uint64 justified_epoch = 8;
     
     // Most recent 32 byte justified block root.
-    bytes justified_block_root = 9;
+    bytes justified_block_root = 9 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Most recent slot that contains the previous justified block.
     uint64 previous_justified_slot = 10;
@@ -371,7 +372,7 @@ message ChainHead {
     uint64 previous_justified_epoch = 11;
 
     // Previous 32 byte justified block root.
-    bytes previous_justified_block_root = 12;
+    bytes previous_justified_block_root = 12 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message ListCommitteesRequest {
@@ -416,7 +417,7 @@ message ListValidatorBalancesRequest {
 
     // Validator 48 byte BLS public keys to filter validators for the given
     // epoch.
-    repeated bytes public_keys = 3;
+    repeated bytes public_keys = 3 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
         
     // Validator indices to filter validators for the given epoch.
     repeated uint64 indices = 4;
@@ -437,7 +438,7 @@ message ValidatorBalances {
 
     message Balance {
         // Validator's 48 byte BLS public key.
-        bytes public_key = 1;
+        bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
 
         // Validator's index in the validator set.
         uint64 index = 2;
@@ -486,7 +487,7 @@ message GetValidatorRequest {
         uint64 index = 1;
 
         // 48 byte validator public key.
-        bytes public_key = 2;
+        bytes public_key = 2 [(gogoproto.moretags) = "ssz-size:\"48\""];
     }
 }
 
@@ -528,26 +529,25 @@ message ActiveSetChanges {
     uint64 epoch = 1;
 
     // 48 byte validator public keys that have been activated in the given epoch.
-    repeated bytes activated_public_keys = 2;
+    repeated bytes activated_public_keys = 2 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators activated in the given epoch.
     repeated uint64 activated_indices = 3;
 
-    // 48 byte validator public keys that have been voluntarily exited in this
-    // epoch.
-    repeated bytes exited_public_keys = 4;
+    // 48 byte validator public keys that have been voluntarily exited in the given epoch.
+    repeated bytes exited_public_keys = 4 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators exited in the given epoch.
     repeated uint64 exited_indices = 5;
 
-    // 48 byte validator public keys that have been slashed in this epoch.
-    repeated bytes slashed_public_keys = 6;
+    // 48 byte validator public keys that have been slashed in the given epoch.
+    repeated bytes slashed_public_keys = 6 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators slashed in the given epoch.
     repeated uint64 slashed_indices = 7;
 
     // 48 byte validator public keys that have been involuntarily ejected in this epoch.
-    repeated bytes ejected_public_keys = 8;
+    repeated bytes ejected_public_keys = 8 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators ejected in the given epoch.
     repeated uint64 ejected_indices = 9;
@@ -556,24 +556,32 @@ message ActiveSetChanges {
 message ValidatorPerformanceRequest {
     // A list of 48 byte validator public keys.
     repeated bytes public_keys = 1;
-
-    // The slot at which the performance is being requested.
-    uint64 slot = 2;
 }
 
 message ValidatorPerformanceResponse {
     // A list of validator balances mapped 1-to-1 with the request's
 	// public keys.
     repeated uint64 balances = 1;
-	// The total number of validators in the beacon chain.
-    uint64 total_validators = 2;
-	// The total number of active validators in the beacon chain.
-    uint64 total_active_validators = 3;
+    // The slot of when validator's attestation got included in the chain at previous epoch, the slot
+    // is mapped 1-to-1 with the request's public keys.
+    repeated uint64 inclusion_slots = 2;
+    // The distance of when validator submitted and got included in the chain, the distance
+    // is mapped 1-to-1 with the request's public keys.
+    repeated uint64 inclusion_distances = 3;
+    // Whether the list of validator recently correctly voted for source at previous epoch, the result
+    // is mapped 1-to-1 with the request's public keys.
+    repeated bool correctly_voted_source = 4;
+    // Whether the list of validator recently correctly voted for target at previous epoch, the result
+    // is mapped 1-to-1 with the request's public keys.
+    repeated bool correctly_voted_target = 5;
+    // Whether the list of validator recently correctly voted for head at previous epoch, the result
+    // is mapped 1-to-1 with the request's public keys.
+    repeated bool correctly_voted_head = 6;
 	// The total number of validators from the request not found in
 	// in the beacon chain.
-    repeated bytes missing_validators = 4;
+    repeated bytes missing_validators = 7;
 	// The average active validator balance in the beacon chain.
-    float average_active_validator_balance = 5;
+    float average_active_validator_balance = 8;
 }
 
 message ValidatorQueue {
@@ -583,11 +591,11 @@ message ValidatorQueue {
 
     // Ordered list of 48 byte public keys awaiting activation. 0th index is the
     // next key to be processed.
-    repeated bytes activation_public_keys = 2;
+    repeated bytes activation_public_keys = 2 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Ordered list of public keys awaiting exit. 0th index is the next key to
     // be processed.
-    repeated bytes exit_public_keys = 3;
+    repeated bytes exit_public_keys = 3 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 }
 
 message ListValidatorAssignmentsRequest {
@@ -599,7 +607,7 @@ message ListValidatorAssignmentsRequest {
         bool genesis = 2;
     }
     // 48 byte validator public keys to filter assignments for the given epoch.
-    repeated bytes public_keys = 3;
+    repeated bytes public_keys = 3 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
         
     // Validator indicies to filter assignments for the given epoch.
     repeated uint64 indices = 4;
@@ -634,7 +642,7 @@ message ValidatorAssignments {
         uint64 proposer_slot = 4;
 
         // 48 byte BLS public key.
-        bytes public_key = 5;
+        bytes public_key = 5 [(gogoproto.moretags) = "ssz-size:\"48\""];
     }
 
     // The epoch for which this set of validator assignments is valid.
diff --git a/eth/v1alpha1/validator.proto b/eth/v1alpha1/validator.proto
index 9e19670..440e193 100644
--- a/eth/v1alpha1/validator.proto
+++ b/eth/v1alpha1/validator.proto
@@ -15,6 +15,7 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
 import "google/api/annotations.proto";
 import "google/protobuf/empty.proto";
 import "eth/v1alpha1/beacon_block.proto";
@@ -180,7 +181,7 @@ message DomainResponse {
 
 message ValidatorActivationRequest {
     // A list of 48 byte validator public keys.
-    repeated bytes public_keys = 1;
+    repeated bytes public_keys = 1 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 }
 
 message ValidatorActivationResponse {
@@ -206,7 +207,7 @@ message ChainStartResponse {
 
 message ValidatorIndexRequest {
     // A 48 byte validator public key.
-    bytes public_key = 1;
+    bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
 }
 
 message ValidatorIndexResponse {
@@ -216,7 +217,7 @@ message ValidatorIndexResponse {
 
 message ValidatorStatusRequest {
     // A 48 byte validator public key.
-    bytes public_key = 1;
+    bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
 }
 
 enum ValidatorStatus {
@@ -254,7 +255,7 @@ message DutiesRequest {
     uint64 epoch = 1;
 
     // Array of byte encoded BLS public keys.
-    repeated bytes public_keys = 2;
+    repeated bytes public_keys = 2 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 }
 
 message DutiesResponse {
@@ -273,7 +274,7 @@ message DutiesResponse {
         uint64 proposer_slot = 4;
 
         // 48 byte BLS public key for the validator who's assigned to perform a duty.
-        bytes public_key = 5;
+        bytes public_key = 5 [(gogoproto.moretags) = "ssz-size:\"48\""];
 
         // The current status of the validator assigned to perform the duty.
         ValidatorStatus status = 6;
@@ -288,15 +289,16 @@ message BlockRequest {
     uint64 slot = 1;
 
     // Validator's 32 byte randao reveal secret of the current epoch.
-    bytes randao_reveal = 2;
+    bytes randao_reveal = 2 [(gogoproto.moretags) = "ssz-size:\"48\""];
 
     // Validator's 32 byte graffiti message for the new block.
-    bytes graffiti = 3;
+    bytes graffiti = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
+
 }
 
 message ProposeResponse {
     // The block root of the successfully proposed beacon block.
-    bytes block_root = 1;
+    bytes block_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message AttestationDataRequest {
@@ -309,16 +311,16 @@ message AttestationDataRequest {
 
 message AttestResponse {
     // The root of the attestation data successfully submitted to the beacon node.
-    bytes attestation_data_root = 1;
+    bytes attestation_data_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 // An Ethereum 2.0 validator.
 message Validator {
     // 48 byte BLS public key used for the validator's activities.
-    bytes public_key = 1;
+    bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\" spec-name:\"pubkey\""];
 
     // 32 byte hash of the withdrawal destination public key.
-    bytes withdrawal_credentials = 2;
+    bytes withdrawal_credentials = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The validators current effective balance in gwei.
     uint64 effective_balance = 3;
