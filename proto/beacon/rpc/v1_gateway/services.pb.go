// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/beacon/rpc/v1/services.proto

package ethereum_beacon_rpc_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	v1 "github.com/prysmaticlabs/prysm/proto/beacon/p2p/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValidatorRole int32

const (
	ValidatorRole_UNKNOWN  ValidatorRole = 0
	ValidatorRole_ATTESTER ValidatorRole = 1
	ValidatorRole_PROPOSER ValidatorRole = 2
)

var ValidatorRole_name = map[int32]string{
	0: "UNKNOWN",
	1: "ATTESTER",
	2: "PROPOSER",
}

var ValidatorRole_value = map[string]int32{
	"UNKNOWN":  0,
	"ATTESTER": 1,
	"PROPOSER": 2,
}

func (x ValidatorRole) String() string {
	return proto.EnumName(ValidatorRole_name, int32(x))
}

func (ValidatorRole) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{0}
}

type ValidatorStatus int32

const (
	ValidatorStatus_UNKNOWN_STATUS ValidatorStatus = 0
	ValidatorStatus_PENDING_ACTIVE ValidatorStatus = 1
	ValidatorStatus_ACTIVE         ValidatorStatus = 2
	ValidatorStatus_INITIATED_EXIT ValidatorStatus = 3
	ValidatorStatus_WITHDRAWABLE   ValidatorStatus = 4
	ValidatorStatus_EXITED         ValidatorStatus = 5
	ValidatorStatus_EXITED_SLASHED ValidatorStatus = 6
)

var ValidatorStatus_name = map[int32]string{
	0: "UNKNOWN_STATUS",
	1: "PENDING_ACTIVE",
	2: "ACTIVE",
	3: "INITIATED_EXIT",
	4: "WITHDRAWABLE",
	5: "EXITED",
	6: "EXITED_SLASHED",
}

var ValidatorStatus_value = map[string]int32{
	"UNKNOWN_STATUS": 0,
	"PENDING_ACTIVE": 1,
	"ACTIVE":         2,
	"INITIATED_EXIT": 3,
	"WITHDRAWABLE":   4,
	"EXITED":         5,
	"EXITED_SLASHED": 6,
}

func (x ValidatorStatus) String() string {
	return proto.EnumName(ValidatorStatus_name, int32(x))
}

func (ValidatorStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{1}
}

type BlockRequest struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	RandaoReveal         []byte   `protobuf:"bytes,2,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockRequest) Reset()         { *m = BlockRequest{} }
func (m *BlockRequest) String() string { return proto.CompactTextString(m) }
func (*BlockRequest) ProtoMessage()    {}
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{0}
}

func (m *BlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRequest.Unmarshal(m, b)
}
func (m *BlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRequest.Marshal(b, m, deterministic)
}
func (m *BlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRequest.Merge(m, src)
}
func (m *BlockRequest) XXX_Size() int {
	return xxx_messageInfo_BlockRequest.Size(m)
}
func (m *BlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRequest proto.InternalMessageInfo

func (m *BlockRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *BlockRequest) GetRandaoReveal() []byte {
	if m != nil {
		return m.RandaoReveal
	}
	return nil
}

type ProposeResponse struct {
	BlockRoot            []byte   `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposeResponse) Reset()         { *m = ProposeResponse{} }
func (m *ProposeResponse) String() string { return proto.CompactTextString(m) }
func (*ProposeResponse) ProtoMessage()    {}
func (*ProposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{1}
}

func (m *ProposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeResponse.Unmarshal(m, b)
}
func (m *ProposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeResponse.Marshal(b, m, deterministic)
}
func (m *ProposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeResponse.Merge(m, src)
}
func (m *ProposeResponse) XXX_Size() int {
	return xxx_messageInfo_ProposeResponse.Size(m)
}
func (m *ProposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeResponse proto.InternalMessageInfo

func (m *ProposeResponse) GetBlockRoot() []byte {
	if m != nil {
		return m.BlockRoot
	}
	return nil
}

type AttestationRequest struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	PocBit               []byte   `protobuf:"bytes,2,opt,name=poc_bit,json=pocBit,proto3" json:"poc_bit,omitempty"`
	Slot                 uint64   `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
	Shard                uint64   `protobuf:"varint,4,opt,name=shard,proto3" json:"shard,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestationRequest) Reset()         { *m = AttestationRequest{} }
func (m *AttestationRequest) String() string { return proto.CompactTextString(m) }
func (*AttestationRequest) ProtoMessage()    {}
func (*AttestationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{2}
}

func (m *AttestationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationRequest.Unmarshal(m, b)
}
func (m *AttestationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationRequest.Marshal(b, m, deterministic)
}
func (m *AttestationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationRequest.Merge(m, src)
}
func (m *AttestationRequest) XXX_Size() int {
	return xxx_messageInfo_AttestationRequest.Size(m)
}
func (m *AttestationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationRequest proto.InternalMessageInfo

func (m *AttestationRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *AttestationRequest) GetPocBit() []byte {
	if m != nil {
		return m.PocBit
	}
	return nil
}

func (m *AttestationRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *AttestationRequest) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

type AttestResponse struct {
	Root                 []byte   `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestResponse) Reset()         { *m = AttestResponse{} }
func (m *AttestResponse) String() string { return proto.CompactTextString(m) }
func (*AttestResponse) ProtoMessage()    {}
func (*AttestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{3}
}

func (m *AttestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestResponse.Unmarshal(m, b)
}
func (m *AttestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestResponse.Marshal(b, m, deterministic)
}
func (m *AttestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestResponse.Merge(m, src)
}
func (m *AttestResponse) XXX_Size() int {
	return xxx_messageInfo_AttestResponse.Size(m)
}
func (m *AttestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttestResponse proto.InternalMessageInfo

func (m *AttestResponse) GetRoot() []byte {
	if m != nil {
		return m.Root
	}
	return nil
}

type ValidatorPerformanceRequest struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorPerformanceRequest) Reset()         { *m = ValidatorPerformanceRequest{} }
func (m *ValidatorPerformanceRequest) String() string { return proto.CompactTextString(m) }
func (*ValidatorPerformanceRequest) ProtoMessage()    {}
func (*ValidatorPerformanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{4}
}

func (m *ValidatorPerformanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorPerformanceRequest.Unmarshal(m, b)
}
func (m *ValidatorPerformanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorPerformanceRequest.Marshal(b, m, deterministic)
}
func (m *ValidatorPerformanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorPerformanceRequest.Merge(m, src)
}
func (m *ValidatorPerformanceRequest) XXX_Size() int {
	return xxx_messageInfo_ValidatorPerformanceRequest.Size(m)
}
func (m *ValidatorPerformanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorPerformanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorPerformanceRequest proto.InternalMessageInfo

func (m *ValidatorPerformanceRequest) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *ValidatorPerformanceRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type ValidatorPerformanceResponse struct {
	Balance                       uint64   `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	TotalValidators               uint64   `protobuf:"varint,2,opt,name=total_validators,json=totalValidators,proto3" json:"total_validators,omitempty"`
	TotalActiveValidators         uint64   `protobuf:"varint,3,opt,name=total_active_validators,json=totalActiveValidators,proto3" json:"total_active_validators,omitempty"`
	AverageActiveValidatorBalance float32  `protobuf:"fixed32,4,opt,name=average_active_validator_balance,json=averageActiveValidatorBalance,proto3" json:"average_active_validator_balance,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *ValidatorPerformanceResponse) Reset()         { *m = ValidatorPerformanceResponse{} }
func (m *ValidatorPerformanceResponse) String() string { return proto.CompactTextString(m) }
func (*ValidatorPerformanceResponse) ProtoMessage()    {}
func (*ValidatorPerformanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{5}
}

func (m *ValidatorPerformanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorPerformanceResponse.Unmarshal(m, b)
}
func (m *ValidatorPerformanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorPerformanceResponse.Marshal(b, m, deterministic)
}
func (m *ValidatorPerformanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorPerformanceResponse.Merge(m, src)
}
func (m *ValidatorPerformanceResponse) XXX_Size() int {
	return xxx_messageInfo_ValidatorPerformanceResponse.Size(m)
}
func (m *ValidatorPerformanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorPerformanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorPerformanceResponse proto.InternalMessageInfo

func (m *ValidatorPerformanceResponse) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *ValidatorPerformanceResponse) GetTotalValidators() uint64 {
	if m != nil {
		return m.TotalValidators
	}
	return 0
}

func (m *ValidatorPerformanceResponse) GetTotalActiveValidators() uint64 {
	if m != nil {
		return m.TotalActiveValidators
	}
	return 0
}

func (m *ValidatorPerformanceResponse) GetAverageActiveValidatorBalance() float32 {
	if m != nil {
		return m.AverageActiveValidatorBalance
	}
	return 0
}

type ValidatorActivationRequest struct {
	PublicKeys           [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorActivationRequest) Reset()         { *m = ValidatorActivationRequest{} }
func (m *ValidatorActivationRequest) String() string { return proto.CompactTextString(m) }
func (*ValidatorActivationRequest) ProtoMessage()    {}
func (*ValidatorActivationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{6}
}

func (m *ValidatorActivationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorActivationRequest.Unmarshal(m, b)
}
func (m *ValidatorActivationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorActivationRequest.Marshal(b, m, deterministic)
}
func (m *ValidatorActivationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorActivationRequest.Merge(m, src)
}
func (m *ValidatorActivationRequest) XXX_Size() int {
	return xxx_messageInfo_ValidatorActivationRequest.Size(m)
}
func (m *ValidatorActivationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorActivationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorActivationRequest proto.InternalMessageInfo

func (m *ValidatorActivationRequest) GetPublicKeys() [][]byte {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type ValidatorActivationResponse struct {
	ActivatedPublicKeys  [][]byte                              `protobuf:"bytes,1,rep,name=activated_public_keys,json=activatedPublicKeys,proto3" json:"activated_public_keys,omitempty"` // Deprecated: Do not use.
	Statuses             []*ValidatorActivationResponse_Status `protobuf:"bytes,2,rep,name=statuses,proto3" json:"statuses,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ValidatorActivationResponse) Reset()         { *m = ValidatorActivationResponse{} }
func (m *ValidatorActivationResponse) String() string { return proto.CompactTextString(m) }
func (*ValidatorActivationResponse) ProtoMessage()    {}
func (*ValidatorActivationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{7}
}

func (m *ValidatorActivationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorActivationResponse.Unmarshal(m, b)
}
func (m *ValidatorActivationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorActivationResponse.Marshal(b, m, deterministic)
}
func (m *ValidatorActivationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorActivationResponse.Merge(m, src)
}
func (m *ValidatorActivationResponse) XXX_Size() int {
	return xxx_messageInfo_ValidatorActivationResponse.Size(m)
}
func (m *ValidatorActivationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorActivationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorActivationResponse proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *ValidatorActivationResponse) GetActivatedPublicKeys() [][]byte {
	if m != nil {
		return m.ActivatedPublicKeys
	}
	return nil
}

func (m *ValidatorActivationResponse) GetStatuses() []*ValidatorActivationResponse_Status {
	if m != nil {
		return m.Statuses
	}
	return nil
}

type ValidatorActivationResponse_Status struct {
	PublicKey            []byte                   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Status               *ValidatorStatusResponse `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ValidatorActivationResponse_Status) Reset()         { *m = ValidatorActivationResponse_Status{} }
func (m *ValidatorActivationResponse_Status) String() string { return proto.CompactTextString(m) }
func (*ValidatorActivationResponse_Status) ProtoMessage()    {}
func (*ValidatorActivationResponse_Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{7, 0}
}

func (m *ValidatorActivationResponse_Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorActivationResponse_Status.Unmarshal(m, b)
}
func (m *ValidatorActivationResponse_Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorActivationResponse_Status.Marshal(b, m, deterministic)
}
func (m *ValidatorActivationResponse_Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorActivationResponse_Status.Merge(m, src)
}
func (m *ValidatorActivationResponse_Status) XXX_Size() int {
	return xxx_messageInfo_ValidatorActivationResponse_Status.Size(m)
}
func (m *ValidatorActivationResponse_Status) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorActivationResponse_Status.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorActivationResponse_Status proto.InternalMessageInfo

func (m *ValidatorActivationResponse_Status) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *ValidatorActivationResponse_Status) GetStatus() *ValidatorStatusResponse {
	if m != nil {
		return m.Status
	}
	return nil
}

type ExitedValidatorsRequest struct {
	PublicKeys           [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExitedValidatorsRequest) Reset()         { *m = ExitedValidatorsRequest{} }
func (m *ExitedValidatorsRequest) String() string { return proto.CompactTextString(m) }
func (*ExitedValidatorsRequest) ProtoMessage()    {}
func (*ExitedValidatorsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{8}
}

func (m *ExitedValidatorsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitedValidatorsRequest.Unmarshal(m, b)
}
func (m *ExitedValidatorsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitedValidatorsRequest.Marshal(b, m, deterministic)
}
func (m *ExitedValidatorsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitedValidatorsRequest.Merge(m, src)
}
func (m *ExitedValidatorsRequest) XXX_Size() int {
	return xxx_messageInfo_ExitedValidatorsRequest.Size(m)
}
func (m *ExitedValidatorsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitedValidatorsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExitedValidatorsRequest proto.InternalMessageInfo

func (m *ExitedValidatorsRequest) GetPublicKeys() [][]byte {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type ExitedValidatorsResponse struct {
	PublicKeys           [][]byte `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExitedValidatorsResponse) Reset()         { *m = ExitedValidatorsResponse{} }
func (m *ExitedValidatorsResponse) String() string { return proto.CompactTextString(m) }
func (*ExitedValidatorsResponse) ProtoMessage()    {}
func (*ExitedValidatorsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{9}
}

func (m *ExitedValidatorsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExitedValidatorsResponse.Unmarshal(m, b)
}
func (m *ExitedValidatorsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExitedValidatorsResponse.Marshal(b, m, deterministic)
}
func (m *ExitedValidatorsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExitedValidatorsResponse.Merge(m, src)
}
func (m *ExitedValidatorsResponse) XXX_Size() int {
	return xxx_messageInfo_ExitedValidatorsResponse.Size(m)
}
func (m *ExitedValidatorsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExitedValidatorsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExitedValidatorsResponse proto.InternalMessageInfo

func (m *ExitedValidatorsResponse) GetPublicKeys() [][]byte {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type ChainStartResponse struct {
	Started              bool     `protobuf:"varint,1,opt,name=started,proto3" json:"started,omitempty"`
	GenesisTime          uint64   `protobuf:"varint,2,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainStartResponse) Reset()         { *m = ChainStartResponse{} }
func (m *ChainStartResponse) String() string { return proto.CompactTextString(m) }
func (*ChainStartResponse) ProtoMessage()    {}
func (*ChainStartResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{10}
}

func (m *ChainStartResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainStartResponse.Unmarshal(m, b)
}
func (m *ChainStartResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainStartResponse.Marshal(b, m, deterministic)
}
func (m *ChainStartResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainStartResponse.Merge(m, src)
}
func (m *ChainStartResponse) XXX_Size() int {
	return xxx_messageInfo_ChainStartResponse.Size(m)
}
func (m *ChainStartResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainStartResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChainStartResponse proto.InternalMessageInfo

func (m *ChainStartResponse) GetStarted() bool {
	if m != nil {
		return m.Started
	}
	return false
}

func (m *ChainStartResponse) GetGenesisTime() uint64 {
	if m != nil {
		return m.GenesisTime
	}
	return 0
}

type ValidatorIndexRequest struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorIndexRequest) Reset()         { *m = ValidatorIndexRequest{} }
func (m *ValidatorIndexRequest) String() string { return proto.CompactTextString(m) }
func (*ValidatorIndexRequest) ProtoMessage()    {}
func (*ValidatorIndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{11}
}

func (m *ValidatorIndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorIndexRequest.Unmarshal(m, b)
}
func (m *ValidatorIndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorIndexRequest.Marshal(b, m, deterministic)
}
func (m *ValidatorIndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorIndexRequest.Merge(m, src)
}
func (m *ValidatorIndexRequest) XXX_Size() int {
	return xxx_messageInfo_ValidatorIndexRequest.Size(m)
}
func (m *ValidatorIndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorIndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorIndexRequest proto.InternalMessageInfo

func (m *ValidatorIndexRequest) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type ValidatorIndexResponse struct {
	Index                uint64   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorIndexResponse) Reset()         { *m = ValidatorIndexResponse{} }
func (m *ValidatorIndexResponse) String() string { return proto.CompactTextString(m) }
func (*ValidatorIndexResponse) ProtoMessage()    {}
func (*ValidatorIndexResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{12}
}

func (m *ValidatorIndexResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorIndexResponse.Unmarshal(m, b)
}
func (m *ValidatorIndexResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorIndexResponse.Marshal(b, m, deterministic)
}
func (m *ValidatorIndexResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorIndexResponse.Merge(m, src)
}
func (m *ValidatorIndexResponse) XXX_Size() int {
	return xxx_messageInfo_ValidatorIndexResponse.Size(m)
}
func (m *ValidatorIndexResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorIndexResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorIndexResponse proto.InternalMessageInfo

func (m *ValidatorIndexResponse) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type CommitteeAssignmentsRequest struct {
	EpochStart           uint64   `protobuf:"varint,1,opt,name=epoch_start,json=epochStart,proto3" json:"epoch_start,omitempty"`
	PublicKeys           [][]byte `protobuf:"bytes,2,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitteeAssignmentsRequest) Reset()         { *m = CommitteeAssignmentsRequest{} }
func (m *CommitteeAssignmentsRequest) String() string { return proto.CompactTextString(m) }
func (*CommitteeAssignmentsRequest) ProtoMessage()    {}
func (*CommitteeAssignmentsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{13}
}

func (m *CommitteeAssignmentsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitteeAssignmentsRequest.Unmarshal(m, b)
}
func (m *CommitteeAssignmentsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitteeAssignmentsRequest.Marshal(b, m, deterministic)
}
func (m *CommitteeAssignmentsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitteeAssignmentsRequest.Merge(m, src)
}
func (m *CommitteeAssignmentsRequest) XXX_Size() int {
	return xxx_messageInfo_CommitteeAssignmentsRequest.Size(m)
}
func (m *CommitteeAssignmentsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitteeAssignmentsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CommitteeAssignmentsRequest proto.InternalMessageInfo

func (m *CommitteeAssignmentsRequest) GetEpochStart() uint64 {
	if m != nil {
		return m.EpochStart
	}
	return 0
}

func (m *CommitteeAssignmentsRequest) GetPublicKeys() [][]byte {
	if m != nil {
		return m.PublicKeys
	}
	return nil
}

type CommitteeAssignmentResponse struct {
	Assignment           []*CommitteeAssignmentResponse_CommitteeAssignment `protobuf:"bytes,1,rep,name=assignment,proto3" json:"assignment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *CommitteeAssignmentResponse) Reset()         { *m = CommitteeAssignmentResponse{} }
func (m *CommitteeAssignmentResponse) String() string { return proto.CompactTextString(m) }
func (*CommitteeAssignmentResponse) ProtoMessage()    {}
func (*CommitteeAssignmentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{14}
}

func (m *CommitteeAssignmentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitteeAssignmentResponse.Unmarshal(m, b)
}
func (m *CommitteeAssignmentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitteeAssignmentResponse.Marshal(b, m, deterministic)
}
func (m *CommitteeAssignmentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitteeAssignmentResponse.Merge(m, src)
}
func (m *CommitteeAssignmentResponse) XXX_Size() int {
	return xxx_messageInfo_CommitteeAssignmentResponse.Size(m)
}
func (m *CommitteeAssignmentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitteeAssignmentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitteeAssignmentResponse proto.InternalMessageInfo

func (m *CommitteeAssignmentResponse) GetAssignment() []*CommitteeAssignmentResponse_CommitteeAssignment {
	if m != nil {
		return m.Assignment
	}
	return nil
}

type CommitteeAssignmentResponse_CommitteeAssignment struct {
	Committee            []uint64        `protobuf:"varint,1,rep,packed,name=committee,proto3" json:"committee,omitempty"`
	Shard                uint64          `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	Slot                 uint64          `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
	IsProposer           bool            `protobuf:"varint,4,opt,name=is_proposer,json=isProposer,proto3" json:"is_proposer,omitempty"`
	PublicKey            []byte          `protobuf:"bytes,5,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Status               ValidatorStatus `protobuf:"varint,6,opt,name=status,proto3,enum=ethereum.beacon.rpc.v1.ValidatorStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) Reset() {
	*m = CommitteeAssignmentResponse_CommitteeAssignment{}
}
func (m *CommitteeAssignmentResponse_CommitteeAssignment) String() string {
	return proto.CompactTextString(m)
}
func (*CommitteeAssignmentResponse_CommitteeAssignment) ProtoMessage() {}
func (*CommitteeAssignmentResponse_CommitteeAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{14, 0}
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitteeAssignmentResponse_CommitteeAssignment.Unmarshal(m, b)
}
func (m *CommitteeAssignmentResponse_CommitteeAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitteeAssignmentResponse_CommitteeAssignment.Marshal(b, m, deterministic)
}
func (m *CommitteeAssignmentResponse_CommitteeAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitteeAssignmentResponse_CommitteeAssignment.Merge(m, src)
}
func (m *CommitteeAssignmentResponse_CommitteeAssignment) XXX_Size() int {
	return xxx_messageInfo_CommitteeAssignmentResponse_CommitteeAssignment.Size(m)
}
func (m *CommitteeAssignmentResponse_CommitteeAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitteeAssignmentResponse_CommitteeAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_CommitteeAssignmentResponse_CommitteeAssignment proto.InternalMessageInfo

func (m *CommitteeAssignmentResponse_CommitteeAssignment) GetCommittee() []uint64 {
	if m != nil {
		return m.Committee
	}
	return nil
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) GetIsProposer() bool {
	if m != nil {
		return m.IsProposer
	}
	return false
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CommitteeAssignmentResponse_CommitteeAssignment) GetStatus() ValidatorStatus {
	if m != nil {
		return m.Status
	}
	return ValidatorStatus_UNKNOWN_STATUS
}

type ValidatorStatusResponse struct {
	Status                    ValidatorStatus `protobuf:"varint,1,opt,name=status,proto3,enum=ethereum.beacon.rpc.v1.ValidatorStatus" json:"status,omitempty"`
	Eth1DepositBlockNumber    uint64          `protobuf:"varint,2,opt,name=eth1_deposit_block_number,json=eth1DepositBlockNumber,proto3" json:"eth1_deposit_block_number,omitempty"`
	DepositInclusionSlot      uint64          `protobuf:"varint,3,opt,name=deposit_inclusion_slot,json=depositInclusionSlot,proto3" json:"deposit_inclusion_slot,omitempty"`
	ActivationEpoch           uint64          `protobuf:"varint,4,opt,name=activation_epoch,json=activationEpoch,proto3" json:"activation_epoch,omitempty"`
	PositionInActivationQueue uint64          `protobuf:"varint,5,opt,name=position_in_activation_queue,json=positionInActivationQueue,proto3" json:"position_in_activation_queue,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}        `json:"-"`
	XXX_unrecognized          []byte          `json:"-"`
	XXX_sizecache             int32           `json:"-"`
}

func (m *ValidatorStatusResponse) Reset()         { *m = ValidatorStatusResponse{} }
func (m *ValidatorStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ValidatorStatusResponse) ProtoMessage()    {}
func (*ValidatorStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{15}
}

func (m *ValidatorStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorStatusResponse.Unmarshal(m, b)
}
func (m *ValidatorStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorStatusResponse.Marshal(b, m, deterministic)
}
func (m *ValidatorStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorStatusResponse.Merge(m, src)
}
func (m *ValidatorStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ValidatorStatusResponse.Size(m)
}
func (m *ValidatorStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorStatusResponse proto.InternalMessageInfo

func (m *ValidatorStatusResponse) GetStatus() ValidatorStatus {
	if m != nil {
		return m.Status
	}
	return ValidatorStatus_UNKNOWN_STATUS
}

func (m *ValidatorStatusResponse) GetEth1DepositBlockNumber() uint64 {
	if m != nil {
		return m.Eth1DepositBlockNumber
	}
	return 0
}

func (m *ValidatorStatusResponse) GetDepositInclusionSlot() uint64 {
	if m != nil {
		return m.DepositInclusionSlot
	}
	return 0
}

func (m *ValidatorStatusResponse) GetActivationEpoch() uint64 {
	if m != nil {
		return m.ActivationEpoch
	}
	return 0
}

func (m *ValidatorStatusResponse) GetPositionInActivationQueue() uint64 {
	if m != nil {
		return m.PositionInActivationQueue
	}
	return 0
}

type DomainRequest struct {
	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainRequest) Reset()         { *m = DomainRequest{} }
func (m *DomainRequest) String() string { return proto.CompactTextString(m) }
func (*DomainRequest) ProtoMessage()    {}
func (*DomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{16}
}

func (m *DomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainRequest.Unmarshal(m, b)
}
func (m *DomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainRequest.Marshal(b, m, deterministic)
}
func (m *DomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainRequest.Merge(m, src)
}
func (m *DomainRequest) XXX_Size() int {
	return xxx_messageInfo_DomainRequest.Size(m)
}
func (m *DomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DomainRequest proto.InternalMessageInfo

func (m *DomainRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type DomainResponse struct {
	SignatureDomain      uint64   `protobuf:"varint,1,opt,name=signature_domain,json=signatureDomain,proto3" json:"signature_domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainResponse) Reset()         { *m = DomainResponse{} }
func (m *DomainResponse) String() string { return proto.CompactTextString(m) }
func (*DomainResponse) ProtoMessage()    {}
func (*DomainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{17}
}

func (m *DomainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainResponse.Unmarshal(m, b)
}
func (m *DomainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainResponse.Marshal(b, m, deterministic)
}
func (m *DomainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainResponse.Merge(m, src)
}
func (m *DomainResponse) XXX_Size() int {
	return xxx_messageInfo_DomainResponse.Size(m)
}
func (m *DomainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DomainResponse proto.InternalMessageInfo

func (m *DomainResponse) GetSignatureDomain() uint64 {
	if m != nil {
		return m.SignatureDomain
	}
	return 0
}

type BlockTreeResponse struct {
	Tree                 []*BlockTreeResponse_TreeNode `protobuf:"bytes,1,rep,name=tree,proto3" json:"tree,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *BlockTreeResponse) Reset()         { *m = BlockTreeResponse{} }
func (m *BlockTreeResponse) String() string { return proto.CompactTextString(m) }
func (*BlockTreeResponse) ProtoMessage()    {}
func (*BlockTreeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{18}
}

func (m *BlockTreeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTreeResponse.Unmarshal(m, b)
}
func (m *BlockTreeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTreeResponse.Marshal(b, m, deterministic)
}
func (m *BlockTreeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTreeResponse.Merge(m, src)
}
func (m *BlockTreeResponse) XXX_Size() int {
	return xxx_messageInfo_BlockTreeResponse.Size(m)
}
func (m *BlockTreeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTreeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTreeResponse proto.InternalMessageInfo

func (m *BlockTreeResponse) GetTree() []*BlockTreeResponse_TreeNode {
	if m != nil {
		return m.Tree
	}
	return nil
}

type BlockTreeResponse_TreeNode struct {
	Block                *v1.BeaconBlock `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	BlockRoot            []byte          `protobuf:"bytes,2,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`
	ParticipatedVotes    uint64          `protobuf:"varint,3,opt,name=participated_votes,json=participatedVotes,proto3" json:"participated_votes,omitempty"`
	TotalVotes           uint64          `protobuf:"varint,4,opt,name=total_votes,json=totalVotes,proto3" json:"total_votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *BlockTreeResponse_TreeNode) Reset()         { *m = BlockTreeResponse_TreeNode{} }
func (m *BlockTreeResponse_TreeNode) String() string { return proto.CompactTextString(m) }
func (*BlockTreeResponse_TreeNode) ProtoMessage()    {}
func (*BlockTreeResponse_TreeNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{18, 0}
}

func (m *BlockTreeResponse_TreeNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockTreeResponse_TreeNode.Unmarshal(m, b)
}
func (m *BlockTreeResponse_TreeNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockTreeResponse_TreeNode.Marshal(b, m, deterministic)
}
func (m *BlockTreeResponse_TreeNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockTreeResponse_TreeNode.Merge(m, src)
}
func (m *BlockTreeResponse_TreeNode) XXX_Size() int {
	return xxx_messageInfo_BlockTreeResponse_TreeNode.Size(m)
}
func (m *BlockTreeResponse_TreeNode) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockTreeResponse_TreeNode.DiscardUnknown(m)
}

var xxx_messageInfo_BlockTreeResponse_TreeNode proto.InternalMessageInfo

func (m *BlockTreeResponse_TreeNode) GetBlock() *v1.BeaconBlock {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *BlockTreeResponse_TreeNode) GetBlockRoot() []byte {
	if m != nil {
		return m.BlockRoot
	}
	return nil
}

func (m *BlockTreeResponse_TreeNode) GetParticipatedVotes() uint64 {
	if m != nil {
		return m.ParticipatedVotes
	}
	return 0
}

func (m *BlockTreeResponse_TreeNode) GetTotalVotes() uint64 {
	if m != nil {
		return m.TotalVotes
	}
	return 0
}

type TreeBlockSlotRequest struct {
	SlotFrom             uint64   `protobuf:"varint,1,opt,name=slot_from,json=slotFrom,proto3" json:"slot_from,omitempty"`
	SlotTo               uint64   `protobuf:"varint,2,opt,name=slot_to,json=slotTo,proto3" json:"slot_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TreeBlockSlotRequest) Reset()         { *m = TreeBlockSlotRequest{} }
func (m *TreeBlockSlotRequest) String() string { return proto.CompactTextString(m) }
func (*TreeBlockSlotRequest) ProtoMessage()    {}
func (*TreeBlockSlotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9eb4e94b85965285, []int{19}
}

func (m *TreeBlockSlotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TreeBlockSlotRequest.Unmarshal(m, b)
}
func (m *TreeBlockSlotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TreeBlockSlotRequest.Marshal(b, m, deterministic)
}
func (m *TreeBlockSlotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TreeBlockSlotRequest.Merge(m, src)
}
func (m *TreeBlockSlotRequest) XXX_Size() int {
	return xxx_messageInfo_TreeBlockSlotRequest.Size(m)
}
func (m *TreeBlockSlotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TreeBlockSlotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TreeBlockSlotRequest proto.InternalMessageInfo

func (m *TreeBlockSlotRequest) GetSlotFrom() uint64 {
	if m != nil {
		return m.SlotFrom
	}
	return 0
}

func (m *TreeBlockSlotRequest) GetSlotTo() uint64 {
	if m != nil {
		return m.SlotTo
	}
	return 0
}

func init() {
	proto.RegisterEnum("ethereum.beacon.rpc.v1.ValidatorRole", ValidatorRole_name, ValidatorRole_value)
	proto.RegisterEnum("ethereum.beacon.rpc.v1.ValidatorStatus", ValidatorStatus_name, ValidatorStatus_value)
	proto.RegisterType((*BlockRequest)(nil), "ethereum.beacon.rpc.v1.BlockRequest")
	proto.RegisterType((*ProposeResponse)(nil), "ethereum.beacon.rpc.v1.ProposeResponse")
	proto.RegisterType((*AttestationRequest)(nil), "ethereum.beacon.rpc.v1.AttestationRequest")
	proto.RegisterType((*AttestResponse)(nil), "ethereum.beacon.rpc.v1.AttestResponse")
	proto.RegisterType((*ValidatorPerformanceRequest)(nil), "ethereum.beacon.rpc.v1.ValidatorPerformanceRequest")
	proto.RegisterType((*ValidatorPerformanceResponse)(nil), "ethereum.beacon.rpc.v1.ValidatorPerformanceResponse")
	proto.RegisterType((*ValidatorActivationRequest)(nil), "ethereum.beacon.rpc.v1.ValidatorActivationRequest")
	proto.RegisterType((*ValidatorActivationResponse)(nil), "ethereum.beacon.rpc.v1.ValidatorActivationResponse")
	proto.RegisterType((*ValidatorActivationResponse_Status)(nil), "ethereum.beacon.rpc.v1.ValidatorActivationResponse.Status")
	proto.RegisterType((*ExitedValidatorsRequest)(nil), "ethereum.beacon.rpc.v1.ExitedValidatorsRequest")
	proto.RegisterType((*ExitedValidatorsResponse)(nil), "ethereum.beacon.rpc.v1.ExitedValidatorsResponse")
	proto.RegisterType((*ChainStartResponse)(nil), "ethereum.beacon.rpc.v1.ChainStartResponse")
	proto.RegisterType((*ValidatorIndexRequest)(nil), "ethereum.beacon.rpc.v1.ValidatorIndexRequest")
	proto.RegisterType((*ValidatorIndexResponse)(nil), "ethereum.beacon.rpc.v1.ValidatorIndexResponse")
	proto.RegisterType((*CommitteeAssignmentsRequest)(nil), "ethereum.beacon.rpc.v1.CommitteeAssignmentsRequest")
	proto.RegisterType((*CommitteeAssignmentResponse)(nil), "ethereum.beacon.rpc.v1.CommitteeAssignmentResponse")
	proto.RegisterType((*CommitteeAssignmentResponse_CommitteeAssignment)(nil), "ethereum.beacon.rpc.v1.CommitteeAssignmentResponse.CommitteeAssignment")
	proto.RegisterType((*ValidatorStatusResponse)(nil), "ethereum.beacon.rpc.v1.ValidatorStatusResponse")
	proto.RegisterType((*DomainRequest)(nil), "ethereum.beacon.rpc.v1.DomainRequest")
	proto.RegisterType((*DomainResponse)(nil), "ethereum.beacon.rpc.v1.DomainResponse")
	proto.RegisterType((*BlockTreeResponse)(nil), "ethereum.beacon.rpc.v1.BlockTreeResponse")
	proto.RegisterType((*BlockTreeResponse_TreeNode)(nil), "ethereum.beacon.rpc.v1.BlockTreeResponse.TreeNode")
	proto.RegisterType((*TreeBlockSlotRequest)(nil), "ethereum.beacon.rpc.v1.TreeBlockSlotRequest")
}

func init() { proto.RegisterFile("proto/beacon/rpc/v1/services.proto", fileDescriptor_9eb4e94b85965285) }

var fileDescriptor_9eb4e94b85965285 = []byte{
	// 1820 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x58, 0xdf, 0x6f, 0x1b, 0xc7,
	0xf1, 0xcf, 0x51, 0x3f, 0x2c, 0x8f, 0x28, 0x89, 0xde, 0xc8, 0xb2, 0x4c, 0xdb, 0xf0, 0x7d, 0xcf,
	0x4e, 0x22, 0x0b, 0xd1, 0x51, 0xa6, 0x03, 0xe3, 0x1b, 0x05, 0x41, 0x4a, 0x49, 0xb4, 0xcc, 0x46,
	0xa0, 0x94, 0x23, 0x6d, 0xb7, 0x68, 0x81, 0xcb, 0xf2, 0xb8, 0xa6, 0xb6, 0xe6, 0xdd, 0x9e, 0x6f,
	0x97, 0x8c, 0xd9, 0x87, 0x16, 0xed, 0x6b, 0xdf, 0xdc, 0x3f, 0x20, 0xff, 0x44, 0x81, 0x02, 0x7d,
	0xe8, 0x6b, 0x81, 0xbe, 0xf4, 0xa1, 0x8f, 0x05, 0xf2, 0x14, 0xa0, 0xff, 0x46, 0xb1, 0x7b, 0x7b,
	0xc7, 0x13, 0x7f, 0x48, 0x54, 0x9e, 0x78, 0x3b, 0x33, 0x9f, 0x99, 0xd9, 0xd9, 0xd9, 0x99, 0x59,
	0x82, 0x15, 0x46, 0x4c, 0xb0, 0x52, 0x8b, 0x60, 0x8f, 0x05, 0xa5, 0x28, 0xf4, 0x4a, 0xfd, 0xc7,
	0x25, 0x4e, 0xa2, 0x3e, 0xf5, 0x08, 0xb7, 0x15, 0x13, 0x6d, 0x10, 0x71, 0x46, 0x22, 0xd2, 0xf3,
	0xed, 0x58, 0xcc, 0x8e, 0x42, 0xcf, 0xee, 0x3f, 0x2e, 0xde, 0xe9, 0x30, 0xd6, 0xe9, 0x92, 0x92,
	0x92, 0x6a, 0xf5, 0x5e, 0x97, 0x88, 0x1f, 0x8a, 0x41, 0x0c, 0x2a, 0xde, 0x1f, 0x65, 0x0a, 0xea,
	0x13, 0x2e, 0xb0, 0x1f, 0x26, 0x02, 0xe7, 0x2c, 0x87, 0xe5, 0x50, 0x5a, 0x16, 0x83, 0x30, 0x31,
	0x5b, 0xbc, 0xab, 0x35, 0xe0, 0x90, 0x96, 0x70, 0x10, 0x30, 0x81, 0x05, 0x65, 0x41, 0xc2, 0xfd,
	0x54, 0xfd, 0x78, 0x3b, 0x1d, 0x12, 0xec, 0xf0, 0xef, 0x70, 0xa7, 0x43, 0xa2, 0x12, 0x0b, 0x95,
	0xc4, 0xb8, 0xb4, 0x75, 0x04, 0xf9, 0xfd, 0x2e, 0xf3, 0xde, 0x38, 0xe4, 0x6d, 0x8f, 0x70, 0x81,
	0x10, 0xcc, 0xf3, 0x2e, 0x13, 0x9b, 0x86, 0x69, 0x6c, 0xcd, 0x3b, 0xea, 0x1b, 0x3d, 0x80, 0x95,
	0x08, 0x07, 0x6d, 0xcc, 0xdc, 0x88, 0xf4, 0x09, 0xee, 0x6e, 0xe6, 0x4c, 0x63, 0x2b, 0xef, 0xe4,
	0x63, 0xa2, 0xa3, 0x68, 0xd6, 0x2e, 0xac, 0x9d, 0x46, 0x2c, 0x64, 0x9c, 0x38, 0x84, 0x87, 0x2c,
	0xe0, 0x04, 0xdd, 0x03, 0x68, 0x49, 0xdd, 0x6e, 0xc4, 0xb4, 0xc6, 0xbc, 0x73, 0x5d, 0x51, 0x1c,
	0xc6, 0x84, 0xd5, 0x07, 0x54, 0x11, 0x42, 0x6e, 0x5d, 0x3a, 0x94, 0x38, 0x70, 0x0f, 0x20, 0xec,
	0xb5, 0xba, 0xd4, 0x73, 0xdf, 0x90, 0x41, 0x02, 0x8a, 0x29, 0x5f, 0x93, 0x01, 0xba, 0x05, 0xd7,
	0x42, 0xe6, 0xb9, 0x2d, 0x2a, 0xb4, 0x17, 0x8b, 0x21, 0xf3, 0xf6, 0xe9, 0xd0, 0xf1, 0xb9, 0x8c,
	0xe3, 0xeb, 0xb0, 0xc0, 0xcf, 0x70, 0xd4, 0xde, 0x9c, 0x57, 0xc4, 0x78, 0x61, 0x3d, 0x84, 0xd5,
	0xd8, 0x6e, 0xea, 0x28, 0x82, 0xf9, 0x8c, 0x8b, 0xea, 0xdb, 0x3a, 0x85, 0x3b, 0x2f, 0x71, 0x97,
	0xb6, 0xb1, 0x60, 0xd1, 0x29, 0x89, 0x5e, 0xb3, 0xc8, 0xc7, 0x81, 0x47, 0x2e, 0x8a, 0xd3, 0x79,
	0xd7, 0x73, 0x23, 0xae, 0x5b, 0x3f, 0x1a, 0x70, 0x77, 0xb2, 0x4a, 0xed, 0xc6, 0x26, 0x5c, 0x6b,
	0xe1, 0xae, 0x24, 0x69, 0xb5, 0xc9, 0x12, 0x3d, 0x82, 0x82, 0x60, 0x02, 0x77, 0xdd, 0x7e, 0x82,
	0xe7, 0x4a, 0xff, 0xbc, 0xb3, 0xa6, 0xe8, 0xa9, 0x5a, 0x8e, 0x9e, 0xc2, 0xad, 0x58, 0x14, 0x7b,
	0x82, 0xf6, 0x49, 0x16, 0x11, 0x87, 0xe6, 0xa6, 0x62, 0x57, 0x14, 0x37, 0x83, 0x3b, 0x02, 0x13,
	0xf7, 0x49, 0x84, 0x3b, 0x64, 0x0c, 0xe9, 0x26, 0x5e, 0xc9, 0x30, 0xe6, 0x9c, 0x7b, 0x5a, 0x6e,
	0x44, 0xc5, 0x7e, 0x2c, 0x64, 0x7d, 0x09, 0xc5, 0x94, 0xa6, 0x44, 0xce, 0x1d, 0xef, 0x7d, 0x58,
	0x1e, 0xc6, 0x88, 0x6f, 0x1a, 0xe6, 0xdc, 0x56, 0xde, 0x81, 0x34, 0x48, 0xdc, 0xfa, 0x3e, 0x97,
	0x09, 0x7c, 0x16, 0xaf, 0x83, 0xf4, 0x14, 0x6e, 0xe2, 0x98, 0x4a, 0xda, 0xee, 0x98, 0xaa, 0xfd,
	0xdc, 0xa6, 0xe1, 0x7c, 0x98, 0x0a, 0x9c, 0xa6, 0x7a, 0xd1, 0x4b, 0x58, 0x92, 0x99, 0xd6, 0xe3,
	0x44, 0x86, 0x6e, 0x6e, 0x6b, 0xb9, 0xbc, 0x67, 0x4f, 0xbe, 0xbe, 0xf6, 0x05, 0xe6, 0xed, 0x86,
	0xd2, 0xe1, 0xa4, 0xba, 0x8a, 0x21, 0x2c, 0xc6, 0xb4, 0xcb, 0x32, 0xf7, 0x08, 0x16, 0x63, 0x90,
	0x3a, 0xb9, 0xe5, 0x72, 0xe9, 0x52, 0xf3, 0xda, 0x96, 0x36, 0xed, 0x68, 0xb8, 0xb5, 0x07, 0xb7,
	0xaa, 0xef, 0xa8, 0x20, 0xed, 0xe1, 0xe9, 0xcd, 0x1c, 0xdd, 0x2f, 0x60, 0x73, 0x1c, 0xab, 0x23,
	0x7b, 0x29, 0xf8, 0x1b, 0x40, 0x07, 0x67, 0x98, 0x06, 0x0d, 0x81, 0x23, 0x91, 0xcd, 0x5a, 0x2e,
	0x09, 0xa4, 0xad, 0xf6, 0xbc, 0xe4, 0x24, 0x4b, 0xf4, 0x7f, 0x90, 0xef, 0x90, 0x80, 0x70, 0xca,
	0x5d, 0x59, 0xe3, 0x74, 0xc6, 0x2e, 0x6b, 0x5a, 0x93, 0xfa, 0xc4, 0x7a, 0x0a, 0x37, 0x53, 0x4f,
	0x6a, 0x41, 0x9b, 0xbc, 0x9b, 0xad, 0x0c, 0x58, 0x36, 0x6c, 0x8c, 0xe2, 0xb4, 0x3b, 0xeb, 0xb0,
	0x40, 0x25, 0x41, 0x5f, 0xa1, 0x78, 0x61, 0xb9, 0x70, 0xe7, 0x80, 0xf9, 0x3e, 0x15, 0x82, 0x90,
	0x0a, 0xe7, 0xb4, 0x13, 0xf8, 0x24, 0x10, 0xd9, 0xb8, 0x91, 0x90, 0x79, 0x67, 0xae, 0x72, 0x5d,
	0x43, 0x41, 0x91, 0xd4, 0x66, 0x47, 0x63, 0x93, 0x1b, 0x8b, 0xcd, 0x7f, 0x73, 0x13, 0x2d, 0xa4,
	0x6e, 0x75, 0x00, 0x70, 0x4a, 0x55, 0xb1, 0x5d, 0x2e, 0x1f, 0x4d, 0xcb, 0x80, 0x0b, 0x14, 0x4d,
	0xe4, 0x65, 0x54, 0x17, 0x7f, 0x30, 0xe0, 0xc3, 0x09, 0x32, 0xe8, 0x2e, 0x5c, 0xf7, 0x12, 0xb2,
	0xb2, 0x3f, 0xef, 0x0c, 0x09, 0xc3, 0x4a, 0x99, 0xcb, 0x54, 0xca, 0x89, 0x35, 0xf5, 0x3e, 0x2c,
	0x53, 0xee, 0x86, 0x71, 0xa9, 0x8f, 0x54, 0x49, 0x58, 0x72, 0x80, 0x72, 0x5d, 0xfc, 0xa3, 0x91,
	0x93, 0x5b, 0x18, 0xbd, 0x06, 0x5f, 0xa5, 0xd7, 0x60, 0xd1, 0x34, 0xb6, 0x56, 0xcb, 0x9f, 0xcc,
	0x7a, 0x0d, 0x92, 0xf4, 0xff, 0x6b, 0x0e, 0x6e, 0x4d, 0xb9, 0x22, 0x19, 0xe5, 0xc6, 0x4f, 0x52,
	0x8e, 0x3e, 0x87, 0xdb, 0x44, 0x9c, 0x3d, 0x76, 0xdb, 0x24, 0x64, 0x9c, 0x0a, 0x37, 0xee, 0x5f,
	0x41, 0xcf, 0x6f, 0x91, 0x48, 0xc7, 0x46, 0x36, 0xfd, 0xc7, 0x87, 0x31, 0x5f, 0xb5, 0xce, 0xba,
	0xe2, 0xa2, 0xcf, 0x60, 0x23, 0x41, 0xd1, 0xc0, 0xeb, 0xf6, 0x38, 0x65, 0x81, 0x9b, 0x09, 0xdf,
	0xba, 0xe6, 0xd6, 0x12, 0x66, 0x43, 0x86, 0xf3, 0x11, 0x14, 0x70, 0x5a, 0x65, 0x5c, 0x95, 0x71,
	0xba, 0x5b, 0xad, 0x0d, 0xe9, 0x55, 0x49, 0x46, 0x5f, 0xc1, 0x5d, 0xa5, 0x40, 0x0a, 0xd2, 0xc0,
	0xcd, 0xc0, 0xde, 0xf6, 0x48, 0x8f, 0xa8, 0x50, 0xcf, 0x3b, 0xb7, 0x13, 0x99, 0x5a, 0x30, 0x2c,
	0x5f, 0xdf, 0x48, 0x01, 0xeb, 0x23, 0x58, 0x39, 0x64, 0x3e, 0xa6, 0x69, 0x31, 0x5e, 0x87, 0x85,
	0xd8, 0xa2, 0xbe, 0x2b, 0x6a, 0x61, 0x7d, 0x01, 0xab, 0x89, 0x98, 0x0e, 0xeb, 0x23, 0x28, 0xc8,
	0x3c, 0xc2, 0xa2, 0x17, 0x11, 0xb7, 0xad, 0x78, 0x1a, 0xb2, 0x96, 0xd2, 0x63, 0x88, 0xf5, 0x3e,
	0x07, 0x37, 0x54, 0x54, 0x9a, 0x11, 0x19, 0x76, 0xb6, 0x67, 0x30, 0x2f, 0x22, 0x9d, 0x77, 0xcb,
	0xe5, 0xf2, 0xb4, 0x53, 0x19, 0x03, 0xda, 0x72, 0x51, 0x67, 0x6d, 0xe2, 0x28, 0x7c, 0xf1, 0x2f,
	0x06, 0x2c, 0x25, 0x24, 0xf4, 0x39, 0x2c, 0xa8, 0xe3, 0x51, 0xae, 0x2c, 0x97, 0x1f, 0x8c, 0x69,
	0x0d, 0xcb, 0xa1, 0xd2, 0xaa, 0x56, 0xf1, 0x94, 0x13, 0x23, 0x46, 0x26, 0x93, 0xdc, 0xc8, 0x64,
	0x82, 0x76, 0x00, 0x85, 0x38, 0x12, 0xd4, 0xa3, 0xa1, 0x6a, 0x33, 0x7d, 0x26, 0x48, 0xd2, 0x3e,
	0x6f, 0x64, 0x39, 0x2f, 0x25, 0x43, 0x5e, 0x09, 0xdd, 0x9d, 0x95, 0x5c, 0x7c, 0x7c, 0x10, 0x37,
	0x66, 0x49, 0xb1, 0x8e, 0x61, 0x5d, 0x7a, 0xad, 0x5c, 0x90, 0xa7, 0x9e, 0xc4, 0xff, 0x0e, 0x5c,
	0x97, 0x09, 0xe2, 0xbe, 0x8e, 0x98, 0xaf, 0x03, 0xba, 0x24, 0x09, 0xcf, 0x22, 0xe6, 0xcb, 0x49,
	0x47, 0x31, 0x05, 0xd3, 0x89, 0xb7, 0x28, 0x97, 0x4d, 0xb6, 0xfd, 0xff, 0xb0, 0x92, 0xa6, 0xaf,
	0xc3, 0xba, 0x04, 0x2d, 0xc3, 0xb5, 0x17, 0xf5, 0xaf, 0xeb, 0x27, 0xaf, 0xea, 0x85, 0x0f, 0x50,
	0x1e, 0x96, 0x2a, 0xcd, 0x66, 0xb5, 0xd1, 0xac, 0x3a, 0x05, 0x43, 0xae, 0x4e, 0x9d, 0x93, 0xd3,
	0x93, 0x46, 0xd5, 0x29, 0xe4, 0xb6, 0xff, 0x64, 0xc0, 0xda, 0x48, 0xe6, 0x23, 0x04, 0xab, 0x1a,
	0xec, 0x36, 0x9a, 0x95, 0xe6, 0x8b, 0x46, 0xe1, 0x03, 0x49, 0x3b, 0xad, 0xd6, 0x0f, 0x6b, 0xf5,
	0x23, 0xb7, 0x72, 0xd0, 0xac, 0xbd, 0xac, 0x16, 0x0c, 0x04, 0xb0, 0xa8, 0xbf, 0x73, 0x92, 0x5f,
	0xab, 0xd7, 0x9a, 0xb5, 0x4a, 0xb3, 0x7a, 0xe8, 0x56, 0x7f, 0x51, 0x6b, 0x16, 0xe6, 0x50, 0x01,
	0xf2, 0xaf, 0x6a, 0xcd, 0xe7, 0x87, 0x4e, 0xe5, 0x55, 0x65, 0xff, 0xb8, 0x5a, 0x98, 0x97, 0x08,
	0xc9, 0xab, 0x1e, 0x16, 0x16, 0x24, 0x22, 0xfe, 0x76, 0x1b, 0xc7, 0x95, 0xc6, 0xf3, 0xea, 0x61,
	0x61, 0xb1, 0xfc, 0x8f, 0x39, 0x58, 0x89, 0xcf, 0xa6, 0x11, 0x8f, 0xd5, 0xe8, 0x97, 0x70, 0xe3,
	0x15, 0xa6, 0xe2, 0x19, 0x8b, 0x86, 0x7d, 0x06, 0x6d, 0xd8, 0xf1, 0xb8, 0x6b, 0x27, 0x03, 0xb3,
	0x5d, 0x95, 0xd3, 0x74, 0x71, 0x7b, 0x6a, 0xf5, 0x1c, 0xeb, 0x51, 0xbb, 0x06, 0x3a, 0x86, 0x95,
	0x03, 0x1c, 0xb0, 0x80, 0x7a, 0xb8, 0xfb, 0x9c, 0xe0, 0xf6, 0x54, 0xb5, 0xb3, 0xa4, 0x11, 0xfa,
	0xde, 0x80, 0xeb, 0x69, 0xb2, 0x4e, 0x55, 0xf5, 0x68, 0xe6, 0x3c, 0xb7, 0x4e, 0xde, 0x57, 0x76,
	0x91, 0xfd, 0x8c, 0x08, 0xef, 0x8c, 0x70, 0x53, 0x65, 0xa2, 0x29, 0x33, 0xde, 0xe4, 0x34, 0xf0,
	0x88, 0xd9, 0xc5, 0x5c, 0x98, 0xaf, 0x69, 0x80, 0xbb, 0xf4, 0xb7, 0xa4, 0x1d, 0xf3, 0xed, 0x3f,
	0xfe, 0xfb, 0xc7, 0x3f, 0xe7, 0x36, 0xd0, 0xba, 0x7c, 0x1e, 0xe8, 0xc7, 0x82, 0x62, 0x48, 0x1c,
	0x7a, 0x03, 0x85, 0xd4, 0xca, 0xfe, 0x40, 0x26, 0x1d, 0x47, 0x9f, 0x4e, 0xf3, 0x67, 0x52, 0x72,
	0x5e, 0xc1, 0xfb, 0xf2, 0x0f, 0x06, 0xac, 0xc5, 0x23, 0x35, 0x89, 0x92, 0xb3, 0xa4, 0x80, 0xb4,
	0xa6, 0xcc, 0x90, 0x8f, 0xa6, 0x1e, 0xda, 0xf8, 0x4b, 0xa0, 0xf8, 0xc9, 0xb4, 0x93, 0xc8, 0xc8,
	0x1e, 0x62, 0x81, 0xd1, 0xb7, 0x70, 0xa3, 0xd1, 0x6b, 0xf9, 0xf4, 0x9c, 0xa5, 0x07, 0x33, 0xa0,
	0x8b, 0x1f, 0x5f, 0xec, 0x4e, 0xba, 0xc1, 0x7f, 0x1a, 0xe9, 0xeb, 0x26, 0x1a, 0x26, 0x6b, 0x5e,
	0x7b, 0x1a, 0xe7, 0xc4, 0xc3, 0x0b, 0xe3, 0x95, 0x6c, 0x6a, 0xa6, 0xf4, 0xfa, 0x35, 0xe4, 0xb5,
	0xb5, 0x78, 0x3d, 0x0b, 0xa8, 0x38, 0xb5, 0xd7, 0x8d, 0x3c, 0xcb, 0xca, 0xff, 0x5a, 0x84, 0xc2,
	0xb0, 0x0a, 0xe8, 0xdd, 0xfc, 0x0a, 0x20, 0xae, 0xe0, 0x2a, 0xa2, 0x1f, 0x4d, 0xd3, 0x75, 0xae,
	0x7f, 0x4c, 0x0f, 0xdf, 0x48, 0xff, 0xf8, 0x5d, 0x7a, 0xaf, 0x87, 0x2d, 0x09, 0x95, 0xaf, 0x34,
	0x7e, 0xc7, 0x06, 0x9f, 0xfc, 0x84, 0x91, 0x7d, 0xd7, 0x40, 0x0c, 0x56, 0xcf, 0x4f, 0x8b, 0x68,
	0xe7, 0x52, 0x45, 0xd9, 0x69, 0xb4, 0x68, 0xcf, 0x2a, 0xae, 0x37, 0xfc, 0xfb, 0xc9, 0x33, 0xd8,
	0x93, 0x2b, 0x0c, 0x7c, 0xfc, 0xd2, 0x3d, 0x5f, 0x34, 0x6e, 0xbe, 0x1d, 0x2f, 0xf4, 0x57, 0xdc,
	0xf2, 0x55, 0x9f, 0x27, 0xe8, 0x0f, 0x06, 0xac, 0x4f, 0x7a, 0xde, 0xa2, 0xcb, 0x0f, 0x6d, 0xfc,
	0x7d, 0x5d, 0xfc, 0xec, 0x6a, 0x20, 0xed, 0x43, 0x0f, 0x0a, 0xa3, 0xcf, 0x1b, 0x34, 0x75, 0x23,
	0x53, 0x1e, 0x51, 0xc5, 0xdd, 0xd9, 0x01, 0xb1, 0xd9, 0xfd, 0xbf, 0xcf, 0xbd, 0xaf, 0xfc, 0x6d,
	0x0e, 0xfd, 0xc7, 0x80, 0x85, 0xd3, 0x68, 0xc0, 0x7d, 0xf4, 0xf0, 0xe7, 0x8d, 0x93, 0xba, 0xe9,
	0x9c, 0x1e, 0x98, 0xc9, 0x3f, 0x46, 0x66, 0x18, 0xb1, 0x3e, 0x6d, 0xcb, 0xe2, 0x3d, 0x30, 0x95,
	0x90, 0x6d, 0x1d, 0xc0, 0xaa, 0xfa, 0xc2, 0x82, 0x7a, 0xe6, 0x31, 0x6e, 0x71, 0x74, 0xfb, 0x4c,
	0x88, 0x90, 0xef, 0x95, 0x4a, 0x61, 0x42, 0xef, 0xe2, 0x16, 0xb7, 0x3d, 0xe6, 0x17, 0x37, 0x04,
	0xc1, 0xfe, 0xcf, 0xc6, 0xe8, 0xdb, 0xdf, 0xc2, 0xfd, 0xa3, 0xfa, 0x0b, 0xf3, 0x88, 0x04, 0x24,
	0xc2, 0x5d, 0x33, 0x7e, 0xf1, 0x9a, 0xc7, 0xd4, 0x23, 0x01, 0x27, 0x66, 0xff, 0x89, 0xbd, 0x8b,
	0xbe, 0x4c, 0xb4, 0x76, 0xa8, 0x38, 0xeb, 0xb5, 0x24, 0xec, 0xbc, 0x81, 0x78, 0x25, 0xbb, 0x47,
	0xab, 0xe4, 0x63, 0x59, 0xc5, 0x4b, 0xc7, 0xb5, 0x83, 0x6a, 0xbd, 0x51, 0xb5, 0xfd, 0x76, 0x79,
	0x61, 0xd7, 0xde, 0xb5, 0x77, 0x8b, 0x6b, 0x38, 0xa4, 0x76, 0x18, 0x0d, 0x94, 0xe5, 0x80, 0x88,
	0x6d, 0x23, 0x57, 0x2e, 0xe0, 0x30, 0xec, 0x52, 0x4f, 0xdd, 0xb7, 0xd2, 0x6f, 0x38, 0x0b, 0xca,
	0xb7, 0xb3, 0x94, 0x4e, 0x14, 0x7a, 0x3b, 0xdf, 0x91, 0xd6, 0x8e, 0x20, 0xef, 0xc4, 0x14, 0xd6,
	0x05, 0x28, 0xc9, 0xda, 0x1b, 0x33, 0xb1, 0x37, 0xdd, 0x44, 0xf4, 0x54, 0x16, 0xce, 0x01, 0xf7,
	0xcd, 0x23, 0xb5, 0x53, 0xf4, 0xf1, 0x6c, 0x3b, 0x6f, 0x2d, 0xaa, 0xce, 0xfd, 0xe4, 0x7f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x76, 0x24, 0x68, 0x3d, 0xf5, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BeaconServiceClient is the client API for BeaconService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeaconServiceClient interface {
	WaitForChainStart(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconService_WaitForChainStartClient, error)
	CanonicalHead(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*v1.BeaconBlock, error)
	BlockTree(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BlockTreeResponse, error)
	BlockTreeBySlots(ctx context.Context, in *TreeBlockSlotRequest, opts ...grpc.CallOption) (*BlockTreeResponse, error)
}

type beaconServiceClient struct {
	cc *grpc.ClientConn
}

func NewBeaconServiceClient(cc *grpc.ClientConn) BeaconServiceClient {
	return &beaconServiceClient{cc}
}

func (c *beaconServiceClient) WaitForChainStart(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconService_WaitForChainStartClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BeaconService_serviceDesc.Streams[0], "/ethereum.beacon.rpc.v1.BeaconService/WaitForChainStart", opts...)
	if err != nil {
		return nil, err
	}
	x := &beaconServiceWaitForChainStartClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BeaconService_WaitForChainStartClient interface {
	Recv() (*ChainStartResponse, error)
	grpc.ClientStream
}

type beaconServiceWaitForChainStartClient struct {
	grpc.ClientStream
}

func (x *beaconServiceWaitForChainStartClient) Recv() (*ChainStartResponse, error) {
	m := new(ChainStartResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *beaconServiceClient) CanonicalHead(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*v1.BeaconBlock, error) {
	out := new(v1.BeaconBlock)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.BeaconService/CanonicalHead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconServiceClient) BlockTree(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*BlockTreeResponse, error) {
	out := new(BlockTreeResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.BeaconService/BlockTree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *beaconServiceClient) BlockTreeBySlots(ctx context.Context, in *TreeBlockSlotRequest, opts ...grpc.CallOption) (*BlockTreeResponse, error) {
	out := new(BlockTreeResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.BeaconService/BlockTreeBySlots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BeaconServiceServer is the server API for BeaconService service.
type BeaconServiceServer interface {
	WaitForChainStart(*empty.Empty, BeaconService_WaitForChainStartServer) error
	CanonicalHead(context.Context, *empty.Empty) (*v1.BeaconBlock, error)
	BlockTree(context.Context, *empty.Empty) (*BlockTreeResponse, error)
	BlockTreeBySlots(context.Context, *TreeBlockSlotRequest) (*BlockTreeResponse, error)
}

func RegisterBeaconServiceServer(s *grpc.Server, srv BeaconServiceServer) {
	s.RegisterService(&_BeaconService_serviceDesc, srv)
}

func _BeaconService_WaitForChainStart_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BeaconServiceServer).WaitForChainStart(m, &beaconServiceWaitForChainStartServer{stream})
}

type BeaconService_WaitForChainStartServer interface {
	Send(*ChainStartResponse) error
	grpc.ServerStream
}

type beaconServiceWaitForChainStartServer struct {
	grpc.ServerStream
}

func (x *beaconServiceWaitForChainStartServer) Send(m *ChainStartResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BeaconService_CanonicalHead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).CanonicalHead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.BeaconService/CanonicalHead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).CanonicalHead(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconService_BlockTree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).BlockTree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.BeaconService/BlockTree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).BlockTree(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _BeaconService_BlockTreeBySlots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TreeBlockSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).BlockTreeBySlots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.BeaconService/BlockTreeBySlots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).BlockTreeBySlots(ctx, req.(*TreeBlockSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BeaconService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.BeaconService",
	HandlerType: (*BeaconServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CanonicalHead",
			Handler:    _BeaconService_CanonicalHead_Handler,
		},
		{
			MethodName: "BlockTree",
			Handler:    _BeaconService_BlockTree_Handler,
		},
		{
			MethodName: "BlockTreeBySlots",
			Handler:    _BeaconService_BlockTreeBySlots_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WaitForChainStart",
			Handler:       _BeaconService_WaitForChainStart_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}

// AttesterServiceClient is the client API for AttesterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttesterServiceClient interface {
	RequestAttestation(ctx context.Context, in *AttestationRequest, opts ...grpc.CallOption) (*v1.AttestationData, error)
	SubmitAttestation(ctx context.Context, in *v1.Attestation, opts ...grpc.CallOption) (*AttestResponse, error)
}

type attesterServiceClient struct {
	cc *grpc.ClientConn
}

func NewAttesterServiceClient(cc *grpc.ClientConn) AttesterServiceClient {
	return &attesterServiceClient{cc}
}

func (c *attesterServiceClient) RequestAttestation(ctx context.Context, in *AttestationRequest, opts ...grpc.CallOption) (*v1.AttestationData, error) {
	out := new(v1.AttestationData)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.AttesterService/RequestAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attesterServiceClient) SubmitAttestation(ctx context.Context, in *v1.Attestation, opts ...grpc.CallOption) (*AttestResponse, error) {
	out := new(AttestResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.AttesterService/SubmitAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttesterServiceServer is the server API for AttesterService service.
type AttesterServiceServer interface {
	RequestAttestation(context.Context, *AttestationRequest) (*v1.AttestationData, error)
	SubmitAttestation(context.Context, *v1.Attestation) (*AttestResponse, error)
}

func RegisterAttesterServiceServer(s *grpc.Server, srv AttesterServiceServer) {
	s.RegisterService(&_AttesterService_serviceDesc, srv)
}

func _AttesterService_RequestAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttestationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttesterServiceServer).RequestAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.AttesterService/RequestAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttesterServiceServer).RequestAttestation(ctx, req.(*AttestationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AttesterService_SubmitAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.Attestation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttesterServiceServer).SubmitAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.AttesterService/SubmitAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttesterServiceServer).SubmitAttestation(ctx, req.(*v1.Attestation))
	}
	return interceptor(ctx, in, info, handler)
}

var _AttesterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.AttesterService",
	HandlerType: (*AttesterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestAttestation",
			Handler:    _AttesterService_RequestAttestation_Handler,
		},
		{
			MethodName: "SubmitAttestation",
			Handler:    _AttesterService_SubmitAttestation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}

// ProposerServiceClient is the client API for ProposerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProposerServiceClient interface {
	RequestBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*v1.BeaconBlock, error)
	ProposeBlock(ctx context.Context, in *v1.BeaconBlock, opts ...grpc.CallOption) (*ProposeResponse, error)
}

type proposerServiceClient struct {
	cc *grpc.ClientConn
}

func NewProposerServiceClient(cc *grpc.ClientConn) ProposerServiceClient {
	return &proposerServiceClient{cc}
}

func (c *proposerServiceClient) RequestBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*v1.BeaconBlock, error) {
	out := new(v1.BeaconBlock)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ProposerService/RequestBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *proposerServiceClient) ProposeBlock(ctx context.Context, in *v1.BeaconBlock, opts ...grpc.CallOption) (*ProposeResponse, error) {
	out := new(ProposeResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ProposerService/ProposeBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProposerServiceServer is the server API for ProposerService service.
type ProposerServiceServer interface {
	RequestBlock(context.Context, *BlockRequest) (*v1.BeaconBlock, error)
	ProposeBlock(context.Context, *v1.BeaconBlock) (*ProposeResponse, error)
}

func RegisterProposerServiceServer(s *grpc.Server, srv ProposerServiceServer) {
	s.RegisterService(&_ProposerService_serviceDesc, srv)
}

func _ProposerService_RequestBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposerServiceServer).RequestBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ProposerService/RequestBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposerServiceServer).RequestBlock(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProposerService_ProposeBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.BeaconBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposerServiceServer).ProposeBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ProposerService/ProposeBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposerServiceServer).ProposeBlock(ctx, req.(*v1.BeaconBlock))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProposerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.ProposerService",
	HandlerType: (*ProposerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RequestBlock",
			Handler:    _ProposerService_RequestBlock_Handler,
		},
		{
			MethodName: "ProposeBlock",
			Handler:    _ProposerService_ProposeBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}

// ValidatorServiceClient is the client API for ValidatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ValidatorServiceClient interface {
	DomainData(ctx context.Context, in *DomainRequest, opts ...grpc.CallOption) (*DomainResponse, error)
	WaitForActivation(ctx context.Context, in *ValidatorActivationRequest, opts ...grpc.CallOption) (ValidatorService_WaitForActivationClient, error)
	ValidatorIndex(ctx context.Context, in *ValidatorIndexRequest, opts ...grpc.CallOption) (*ValidatorIndexResponse, error)
	CommitteeAssignment(ctx context.Context, in *CommitteeAssignmentsRequest, opts ...grpc.CallOption) (*CommitteeAssignmentResponse, error)
	ValidatorStatus(ctx context.Context, in *ValidatorIndexRequest, opts ...grpc.CallOption) (*ValidatorStatusResponse, error)
	ValidatorPerformance(ctx context.Context, in *ValidatorPerformanceRequest, opts ...grpc.CallOption) (*ValidatorPerformanceResponse, error)
	ExitedValidators(ctx context.Context, in *ExitedValidatorsRequest, opts ...grpc.CallOption) (*ExitedValidatorsResponse, error)
}

type validatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewValidatorServiceClient(cc *grpc.ClientConn) ValidatorServiceClient {
	return &validatorServiceClient{cc}
}

func (c *validatorServiceClient) DomainData(ctx context.Context, in *DomainRequest, opts ...grpc.CallOption) (*DomainResponse, error) {
	out := new(DomainResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ValidatorService/DomainData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorServiceClient) WaitForActivation(ctx context.Context, in *ValidatorActivationRequest, opts ...grpc.CallOption) (ValidatorService_WaitForActivationClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ValidatorService_serviceDesc.Streams[0], "/ethereum.beacon.rpc.v1.ValidatorService/WaitForActivation", opts...)
	if err != nil {
		return nil, err
	}
	x := &validatorServiceWaitForActivationClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ValidatorService_WaitForActivationClient interface {
	Recv() (*ValidatorActivationResponse, error)
	grpc.ClientStream
}

type validatorServiceWaitForActivationClient struct {
	grpc.ClientStream
}

func (x *validatorServiceWaitForActivationClient) Recv() (*ValidatorActivationResponse, error) {
	m := new(ValidatorActivationResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *validatorServiceClient) ValidatorIndex(ctx context.Context, in *ValidatorIndexRequest, opts ...grpc.CallOption) (*ValidatorIndexResponse, error) {
	out := new(ValidatorIndexResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ValidatorService/ValidatorIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorServiceClient) CommitteeAssignment(ctx context.Context, in *CommitteeAssignmentsRequest, opts ...grpc.CallOption) (*CommitteeAssignmentResponse, error) {
	out := new(CommitteeAssignmentResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ValidatorService/CommitteeAssignment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorServiceClient) ValidatorStatus(ctx context.Context, in *ValidatorIndexRequest, opts ...grpc.CallOption) (*ValidatorStatusResponse, error) {
	out := new(ValidatorStatusResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ValidatorService/ValidatorStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorServiceClient) ValidatorPerformance(ctx context.Context, in *ValidatorPerformanceRequest, opts ...grpc.CallOption) (*ValidatorPerformanceResponse, error) {
	out := new(ValidatorPerformanceResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ValidatorService/ValidatorPerformance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *validatorServiceClient) ExitedValidators(ctx context.Context, in *ExitedValidatorsRequest, opts ...grpc.CallOption) (*ExitedValidatorsResponse, error) {
	out := new(ExitedValidatorsResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ValidatorService/ExitedValidators", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ValidatorServiceServer is the server API for ValidatorService service.
type ValidatorServiceServer interface {
	DomainData(context.Context, *DomainRequest) (*DomainResponse, error)
	WaitForActivation(*ValidatorActivationRequest, ValidatorService_WaitForActivationServer) error
	ValidatorIndex(context.Context, *ValidatorIndexRequest) (*ValidatorIndexResponse, error)
	CommitteeAssignment(context.Context, *CommitteeAssignmentsRequest) (*CommitteeAssignmentResponse, error)
	ValidatorStatus(context.Context, *ValidatorIndexRequest) (*ValidatorStatusResponse, error)
	ValidatorPerformance(context.Context, *ValidatorPerformanceRequest) (*ValidatorPerformanceResponse, error)
	ExitedValidators(context.Context, *ExitedValidatorsRequest) (*ExitedValidatorsResponse, error)
}

func RegisterValidatorServiceServer(s *grpc.Server, srv ValidatorServiceServer) {
	s.RegisterService(&_ValidatorService_serviceDesc, srv)
}

func _ValidatorService_DomainData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DomainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorServiceServer).DomainData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ValidatorService/DomainData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorServiceServer).DomainData(ctx, req.(*DomainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorService_WaitForActivation_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ValidatorActivationRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ValidatorServiceServer).WaitForActivation(m, &validatorServiceWaitForActivationServer{stream})
}

type ValidatorService_WaitForActivationServer interface {
	Send(*ValidatorActivationResponse) error
	grpc.ServerStream
}

type validatorServiceWaitForActivationServer struct {
	grpc.ServerStream
}

func (x *validatorServiceWaitForActivationServer) Send(m *ValidatorActivationResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ValidatorService_ValidatorIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidatorIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorServiceServer).ValidatorIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ValidatorService/ValidatorIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorServiceServer).ValidatorIndex(ctx, req.(*ValidatorIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorService_CommitteeAssignment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitteeAssignmentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorServiceServer).CommitteeAssignment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ValidatorService/CommitteeAssignment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorServiceServer).CommitteeAssignment(ctx, req.(*CommitteeAssignmentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorService_ValidatorStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidatorIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorServiceServer).ValidatorStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ValidatorService/ValidatorStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorServiceServer).ValidatorStatus(ctx, req.(*ValidatorIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorService_ValidatorPerformance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidatorPerformanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorServiceServer).ValidatorPerformance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ValidatorService/ValidatorPerformance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorServiceServer).ValidatorPerformance(ctx, req.(*ValidatorPerformanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ValidatorService_ExitedValidators_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExitedValidatorsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ValidatorServiceServer).ExitedValidators(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ValidatorService/ExitedValidators",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ValidatorServiceServer).ExitedValidators(ctx, req.(*ExitedValidatorsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ValidatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.ValidatorService",
	HandlerType: (*ValidatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DomainData",
			Handler:    _ValidatorService_DomainData_Handler,
		},
		{
			MethodName: "ValidatorIndex",
			Handler:    _ValidatorService_ValidatorIndex_Handler,
		},
		{
			MethodName: "CommitteeAssignment",
			Handler:    _ValidatorService_CommitteeAssignment_Handler,
		},
		{
			MethodName: "ValidatorStatus",
			Handler:    _ValidatorService_ValidatorStatus_Handler,
		},
		{
			MethodName: "ValidatorPerformance",
			Handler:    _ValidatorService_ValidatorPerformance_Handler,
		},
		{
			MethodName: "ExitedValidators",
			Handler:    _ValidatorService_ExitedValidators_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WaitForActivation",
			Handler:       _ValidatorService_WaitForActivation_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}
