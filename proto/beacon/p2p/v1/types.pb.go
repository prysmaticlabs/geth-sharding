// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/beacon/p2p/v1/types.proto

package ethereum_beacon_p2p_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import common "github.com/prysmaticlabs/prysm/proto/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Possible validator status code:
// https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#constants
type ValidatorRecord_ValiatorStateCode int32

const (
	ValidatorRecord_pending_activation     ValidatorRecord_ValiatorStateCode = 0
	ValidatorRecord_active                 ValidatorRecord_ValiatorStateCode = 1
	ValidatorRecord_exited_without_penalty ValidatorRecord_ValiatorStateCode = 2
	ValidatorRecord_exited_with_penalty    ValidatorRecord_ValiatorStateCode = 3
)

var ValidatorRecord_ValiatorStateCode_name = map[int32]string{
	0: "pending_activation",
	1: "active",
	2: "exited_without_penalty",
	3: "exited_with_penalty",
}
var ValidatorRecord_ValiatorStateCode_value = map[string]int32{
	"pending_activation":     0,
	"active":                 1,
	"exited_without_penalty": 2,
	"exited_with_penalty":    3,
}

func (x ValidatorRecord_ValiatorStateCode) String() string {
	return proto.EnumName(ValidatorRecord_ValiatorStateCode_name, int32(x))
}
func (ValidatorRecord_ValiatorStateCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{6, 0}
}

type BeaconState struct {
	// Validator registry [1-1000]
	ValidatorRegistry                    []*ValidatorRecord `protobuf:"bytes,1,rep,name=validator_registry,json=validatorRegistry,proto3" json:"validator_registry,omitempty"`
	ValidatorRegistryLastChangeSlot      uint64             `protobuf:"varint,2,opt,name=validator_registry_last_change_slot,json=validatorRegistryLastChangeSlot,proto3" json:"validator_registry_last_change_slot,omitempty"`
	ValidatorRegistryExitCount           uint64             `protobuf:"varint,3,opt,name=validator_registry_exit_count,json=validatorRegistryExitCount,proto3" json:"validator_registry_exit_count,omitempty"`
	ValidatorRegistryDeltaChainTipHash32 []byte             `protobuf:"bytes,4,opt,name=validator_registry_delta_chain_tip_hash32,json=validatorRegistryDeltaChainTipHash32,proto3" json:"validator_registry_delta_chain_tip_hash32,omitempty"`
	// Randomness and committees [1001-2000]
	RandaoMixHash32                  []byte                     `protobuf:"bytes,1001,opt,name=randao_mix_hash32,json=randaoMixHash32,proto3" json:"randao_mix_hash32,omitempty"`
	NextSeedHash32                   []byte                     `protobuf:"bytes,1002,opt,name=next_seed_hash32,json=nextSeedHash32,proto3" json:"next_seed_hash32,omitempty"`
	ShardAndCommitteesForSlots       []*ShardAndCommitteeArray  `protobuf:"bytes,1003,rep,name=shard_and_committees_for_slots,json=shardAndCommitteesForSlots,proto3" json:"shard_and_committees_for_slots,omitempty"`
	PersistentCommittees             []*common.Uint32List       `protobuf:"bytes,1004,rep,name=persistent_committees,json=persistentCommittees,proto3" json:"persistent_committees,omitempty"`
	PersistentCommitteeReassignments []*ShardReassignmentRecord `protobuf:"bytes,1005,rep,name=persistent_committee_reassignments,json=persistentCommitteeReassignments,proto3" json:"persistent_committee_reassignments,omitempty"`
	// Finality [2001-3000]
	PreviousJustifiedSlot uint64 `protobuf:"varint,2001,opt,name=previous_justified_slot,json=previousJustifiedSlot,proto3" json:"previous_justified_slot,omitempty"`
	JustifiedSlot         uint64 `protobuf:"varint,2002,opt,name=justified_slot,json=justifiedSlot,proto3" json:"justified_slot,omitempty"`
	JustifiedSlotBitfield uint64 `protobuf:"varint,2003,opt,name=justified_slot_bitfield,json=justifiedSlotBitfield,proto3" json:"justified_slot_bitfield,omitempty"`
	FinalizedSlot         uint64 `protobuf:"varint,2004,opt,name=finalized_slot,json=finalizedSlot,proto3" json:"finalized_slot,omitempty"`
	// Recent state [3001-4000]
	LatestCrosslinks            []*CrosslinkRecord          `protobuf:"bytes,3001,rep,name=latest_crosslinks,json=latestCrosslinks,proto3" json:"latest_crosslinks,omitempty"`
	LastStateRecalculationSlot  uint64                      `protobuf:"varint,3002,opt,name=last_state_recalculation_slot,json=lastStateRecalculationSlot,proto3" json:"last_state_recalculation_slot,omitempty"`
	LatestBlockHash32S          [][]byte                    `protobuf:"bytes,3003,rep,name=latest_block_hash32s,json=latestBlockHash32s,proto3" json:"latest_block_hash32s,omitempty"`
	LatestPenalizedExitBalances []uint64                    `protobuf:"varint,3004,rep,packed,name=latest_penalized_exit_balances,json=latestPenalizedExitBalances,proto3" json:"latest_penalized_exit_balances,omitempty"`
	LatestAttestations          []*PendingAttestationRecord `protobuf:"bytes,3005,rep,name=latest_attestations,json=latestAttestations,proto3" json:"latest_attestations,omitempty"`
	// PoW receipt root [4001-5000]
	ProcessedPowReceiptRootHash32 [][]byte                         `protobuf:"bytes,4001,rep,name=processed_pow_receipt_root_hash32,json=processedPowReceiptRootHash32,proto3" json:"processed_pow_receipt_root_hash32,omitempty"`
	CandidatePowReceiptRoots      []*CandidatePoWReceiptRootRecord `protobuf:"bytes,4002,rep,name=candidate_pow_receipt_roots,json=candidatePowReceiptRoots,proto3" json:"candidate_pow_receipt_roots,omitempty"`
	// Miscellaneous [5001-6000]
	GenesisTime uint64    `protobuf:"varint,5001,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	ForkData    *ForkData `protobuf:"bytes,5002,opt,name=fork_data,json=forkData,proto3" json:"fork_data,omitempty"`
	// Deprecated fields
	// All fields mustbe annotated with [deprecated=true];
	RandaoMix                 []byte                   `protobuf:"bytes,10003,opt,name=randao_mix,json=randaoMix,proto3" json:"randao_mix,omitempty"`                                                             // Deprecated: Do not use.
	LastFinalizedSlot         uint64                   `protobuf:"varint,10005,opt,name=last_finalized_slot,json=lastFinalizedSlot,proto3" json:"last_finalized_slot,omitempty"`                                  // Deprecated: Do not use.
	LastJustifiedSlot         uint64                   `protobuf:"varint,10006,opt,name=last_justified_slot,json=lastJustifiedSlot,proto3" json:"last_justified_slot,omitempty"`                                  // Deprecated: Do not use.
	JustifiedStreak           uint64                   `protobuf:"varint,10007,opt,name=justified_streak,json=justifiedStreak,proto3" json:"justified_streak,omitempty"`                                          // Deprecated: Do not use.
	NextShufflingSeed         []byte                   `protobuf:"bytes,10008,opt,name=next_shuffling_seed,json=nextShufflingSeed,proto3" json:"next_shuffling_seed,omitempty"`                                   // Deprecated: Do not use.
	DepositsPenalizedInPeriod []uint64                 `protobuf:"varint,10009,rep,packed,name=deposits_penalized_in_period,json=depositsPenalizedInPeriod,proto3" json:"deposits_penalized_in_period,omitempty"` // Deprecated: Do not use.
	PendingAttestations       []*AggregatedAttestation `protobuf:"bytes,10018,rep,name=pending_attestations,json=pendingAttestations,proto3" json:"pending_attestations,omitempty"`                               // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral      struct{}                 `json:"-"`
	XXX_unrecognized          []byte                   `json:"-"`
	XXX_sizecache             int32                    `json:"-"`
}

func (m *BeaconState) Reset()         { *m = BeaconState{} }
func (m *BeaconState) String() string { return proto.CompactTextString(m) }
func (*BeaconState) ProtoMessage()    {}
func (*BeaconState) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{0}
}
func (m *BeaconState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeaconState.Unmarshal(m, b)
}
func (m *BeaconState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeaconState.Marshal(b, m, deterministic)
}
func (dst *BeaconState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeaconState.Merge(dst, src)
}
func (m *BeaconState) XXX_Size() int {
	return xxx_messageInfo_BeaconState.Size(m)
}
func (m *BeaconState) XXX_DiscardUnknown() {
	xxx_messageInfo_BeaconState.DiscardUnknown(m)
}

var xxx_messageInfo_BeaconState proto.InternalMessageInfo

func (m *BeaconState) GetValidatorRegistry() []*ValidatorRecord {
	if m != nil {
		return m.ValidatorRegistry
	}
	return nil
}

func (m *BeaconState) GetValidatorRegistryLastChangeSlot() uint64 {
	if m != nil {
		return m.ValidatorRegistryLastChangeSlot
	}
	return 0
}

func (m *BeaconState) GetValidatorRegistryExitCount() uint64 {
	if m != nil {
		return m.ValidatorRegistryExitCount
	}
	return 0
}

func (m *BeaconState) GetValidatorRegistryDeltaChainTipHash32() []byte {
	if m != nil {
		return m.ValidatorRegistryDeltaChainTipHash32
	}
	return nil
}

func (m *BeaconState) GetRandaoMixHash32() []byte {
	if m != nil {
		return m.RandaoMixHash32
	}
	return nil
}

func (m *BeaconState) GetNextSeedHash32() []byte {
	if m != nil {
		return m.NextSeedHash32
	}
	return nil
}

func (m *BeaconState) GetShardAndCommitteesForSlots() []*ShardAndCommitteeArray {
	if m != nil {
		return m.ShardAndCommitteesForSlots
	}
	return nil
}

func (m *BeaconState) GetPersistentCommittees() []*common.Uint32List {
	if m != nil {
		return m.PersistentCommittees
	}
	return nil
}

func (m *BeaconState) GetPersistentCommitteeReassignments() []*ShardReassignmentRecord {
	if m != nil {
		return m.PersistentCommitteeReassignments
	}
	return nil
}

func (m *BeaconState) GetPreviousJustifiedSlot() uint64 {
	if m != nil {
		return m.PreviousJustifiedSlot
	}
	return 0
}

func (m *BeaconState) GetJustifiedSlot() uint64 {
	if m != nil {
		return m.JustifiedSlot
	}
	return 0
}

func (m *BeaconState) GetJustifiedSlotBitfield() uint64 {
	if m != nil {
		return m.JustifiedSlotBitfield
	}
	return 0
}

func (m *BeaconState) GetFinalizedSlot() uint64 {
	if m != nil {
		return m.FinalizedSlot
	}
	return 0
}

func (m *BeaconState) GetLatestCrosslinks() []*CrosslinkRecord {
	if m != nil {
		return m.LatestCrosslinks
	}
	return nil
}

func (m *BeaconState) GetLastStateRecalculationSlot() uint64 {
	if m != nil {
		return m.LastStateRecalculationSlot
	}
	return 0
}

func (m *BeaconState) GetLatestBlockHash32S() [][]byte {
	if m != nil {
		return m.LatestBlockHash32S
	}
	return nil
}

func (m *BeaconState) GetLatestPenalizedExitBalances() []uint64 {
	if m != nil {
		return m.LatestPenalizedExitBalances
	}
	return nil
}

func (m *BeaconState) GetLatestAttestations() []*PendingAttestationRecord {
	if m != nil {
		return m.LatestAttestations
	}
	return nil
}

func (m *BeaconState) GetProcessedPowReceiptRootHash32() [][]byte {
	if m != nil {
		return m.ProcessedPowReceiptRootHash32
	}
	return nil
}

func (m *BeaconState) GetCandidatePowReceiptRoots() []*CandidatePoWReceiptRootRecord {
	if m != nil {
		return m.CandidatePowReceiptRoots
	}
	return nil
}

func (m *BeaconState) GetGenesisTime() uint64 {
	if m != nil {
		return m.GenesisTime
	}
	return 0
}

func (m *BeaconState) GetForkData() *ForkData {
	if m != nil {
		return m.ForkData
	}
	return nil
}

// Deprecated: Do not use.
func (m *BeaconState) GetRandaoMix() []byte {
	if m != nil {
		return m.RandaoMix
	}
	return nil
}

// Deprecated: Do not use.
func (m *BeaconState) GetLastFinalizedSlot() uint64 {
	if m != nil {
		return m.LastFinalizedSlot
	}
	return 0
}

// Deprecated: Do not use.
func (m *BeaconState) GetLastJustifiedSlot() uint64 {
	if m != nil {
		return m.LastJustifiedSlot
	}
	return 0
}

// Deprecated: Do not use.
func (m *BeaconState) GetJustifiedStreak() uint64 {
	if m != nil {
		return m.JustifiedStreak
	}
	return 0
}

// Deprecated: Do not use.
func (m *BeaconState) GetNextShufflingSeed() []byte {
	if m != nil {
		return m.NextShufflingSeed
	}
	return nil
}

// Deprecated: Do not use.
func (m *BeaconState) GetDepositsPenalizedInPeriod() []uint64 {
	if m != nil {
		return m.DepositsPenalizedInPeriod
	}
	return nil
}

// Deprecated: Do not use.
func (m *BeaconState) GetPendingAttestations() []*AggregatedAttestation {
	if m != nil {
		return m.PendingAttestations
	}
	return nil
}

type ForkData struct {
	PreForkVersion       uint64   `protobuf:"varint,1,opt,name=pre_fork_version,json=preForkVersion,proto3" json:"pre_fork_version,omitempty"`
	PostForkVersion      uint64   `protobuf:"varint,2,opt,name=post_fork_version,json=postForkVersion,proto3" json:"post_fork_version,omitempty"`
	ForkSlot             uint64   `protobuf:"varint,3,opt,name=fork_slot,json=forkSlot,proto3" json:"fork_slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForkData) Reset()         { *m = ForkData{} }
func (m *ForkData) String() string { return proto.CompactTextString(m) }
func (*ForkData) ProtoMessage()    {}
func (*ForkData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{1}
}
func (m *ForkData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForkData.Unmarshal(m, b)
}
func (m *ForkData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForkData.Marshal(b, m, deterministic)
}
func (dst *ForkData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForkData.Merge(dst, src)
}
func (m *ForkData) XXX_Size() int {
	return xxx_messageInfo_ForkData.Size(m)
}
func (m *ForkData) XXX_DiscardUnknown() {
	xxx_messageInfo_ForkData.DiscardUnknown(m)
}

var xxx_messageInfo_ForkData proto.InternalMessageInfo

func (m *ForkData) GetPreForkVersion() uint64 {
	if m != nil {
		return m.PreForkVersion
	}
	return 0
}

func (m *ForkData) GetPostForkVersion() uint64 {
	if m != nil {
		return m.PostForkVersion
	}
	return 0
}

func (m *ForkData) GetForkSlot() uint64 {
	if m != nil {
		return m.ForkSlot
	}
	return 0
}

type CandidatePoWReceiptRootRecord struct {
	CandidatePowReceiptRootHash32 []byte   `protobuf:"bytes,1,opt,name=candidate_pow_receipt_root_hash32,json=candidatePowReceiptRootHash32,proto3" json:"candidate_pow_receipt_root_hash32,omitempty"`
	Votes                         uint64   `protobuf:"varint,2,opt,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *CandidatePoWReceiptRootRecord) Reset()         { *m = CandidatePoWReceiptRootRecord{} }
func (m *CandidatePoWReceiptRootRecord) String() string { return proto.CompactTextString(m) }
func (*CandidatePoWReceiptRootRecord) ProtoMessage()    {}
func (*CandidatePoWReceiptRootRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{2}
}
func (m *CandidatePoWReceiptRootRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandidatePoWReceiptRootRecord.Unmarshal(m, b)
}
func (m *CandidatePoWReceiptRootRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandidatePoWReceiptRootRecord.Marshal(b, m, deterministic)
}
func (dst *CandidatePoWReceiptRootRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandidatePoWReceiptRootRecord.Merge(dst, src)
}
func (m *CandidatePoWReceiptRootRecord) XXX_Size() int {
	return xxx_messageInfo_CandidatePoWReceiptRootRecord.Size(m)
}
func (m *CandidatePoWReceiptRootRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CandidatePoWReceiptRootRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CandidatePoWReceiptRootRecord proto.InternalMessageInfo

func (m *CandidatePoWReceiptRootRecord) GetCandidatePowReceiptRootHash32() []byte {
	if m != nil {
		return m.CandidatePowReceiptRootHash32
	}
	return nil
}

func (m *CandidatePoWReceiptRootRecord) GetVotes() uint64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

type PendingAttestationRecord struct {
	Data                  *AttestationData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ParticipationBitfield []byte           `protobuf:"bytes,2,opt,name=participation_bitfield,json=participationBitfield,proto3" json:"participation_bitfield,omitempty"`
	CustodyBitfield       []byte           `protobuf:"bytes,3,opt,name=custody_bitfield,json=custodyBitfield,proto3" json:"custody_bitfield,omitempty"`
	SlotIncluded          uint64           `protobuf:"varint,4,opt,name=slot_included,json=slotIncluded,proto3" json:"slot_included,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *PendingAttestationRecord) Reset()         { *m = PendingAttestationRecord{} }
func (m *PendingAttestationRecord) String() string { return proto.CompactTextString(m) }
func (*PendingAttestationRecord) ProtoMessage()    {}
func (*PendingAttestationRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{3}
}
func (m *PendingAttestationRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PendingAttestationRecord.Unmarshal(m, b)
}
func (m *PendingAttestationRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PendingAttestationRecord.Marshal(b, m, deterministic)
}
func (dst *PendingAttestationRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PendingAttestationRecord.Merge(dst, src)
}
func (m *PendingAttestationRecord) XXX_Size() int {
	return xxx_messageInfo_PendingAttestationRecord.Size(m)
}
func (m *PendingAttestationRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_PendingAttestationRecord.DiscardUnknown(m)
}

var xxx_messageInfo_PendingAttestationRecord proto.InternalMessageInfo

func (m *PendingAttestationRecord) GetData() *AttestationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *PendingAttestationRecord) GetParticipationBitfield() []byte {
	if m != nil {
		return m.ParticipationBitfield
	}
	return nil
}

func (m *PendingAttestationRecord) GetCustodyBitfield() []byte {
	if m != nil {
		return m.CustodyBitfield
	}
	return nil
}

func (m *PendingAttestationRecord) GetSlotIncluded() uint64 {
	if m != nil {
		return m.SlotIncluded
	}
	return 0
}

type Attestation struct {
	Data                  *AttestationData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	ParticipationBitfield []byte           `protobuf:"bytes,2,opt,name=participation_bitfield,json=participationBitfield,proto3" json:"participation_bitfield,omitempty"`
	CustodyBitfield       []byte           `protobuf:"bytes,3,opt,name=custody_bitfield,json=custodyBitfield,proto3" json:"custody_bitfield,omitempty"`
	AggregateSignature    []byte           `protobuf:"bytes,4,opt,name=aggregate_signature,json=aggregateSignature,proto3" json:"aggregate_signature,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}         `json:"-"`
	XXX_unrecognized      []byte           `json:"-"`
	XXX_sizecache         int32            `json:"-"`
}

func (m *Attestation) Reset()         { *m = Attestation{} }
func (m *Attestation) String() string { return proto.CompactTextString(m) }
func (*Attestation) ProtoMessage()    {}
func (*Attestation) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{4}
}
func (m *Attestation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attestation.Unmarshal(m, b)
}
func (m *Attestation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attestation.Marshal(b, m, deterministic)
}
func (dst *Attestation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attestation.Merge(dst, src)
}
func (m *Attestation) XXX_Size() int {
	return xxx_messageInfo_Attestation.Size(m)
}
func (m *Attestation) XXX_DiscardUnknown() {
	xxx_messageInfo_Attestation.DiscardUnknown(m)
}

var xxx_messageInfo_Attestation proto.InternalMessageInfo

func (m *Attestation) GetData() *AttestationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Attestation) GetParticipationBitfield() []byte {
	if m != nil {
		return m.ParticipationBitfield
	}
	return nil
}

func (m *Attestation) GetCustodyBitfield() []byte {
	if m != nil {
		return m.CustodyBitfield
	}
	return nil
}

func (m *Attestation) GetAggregateSignature() []byte {
	if m != nil {
		return m.AggregateSignature
	}
	return nil
}

type AttestationData struct {
	Slot                  uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Shard                 uint64   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	BeaconBlockHash32     []byte   `protobuf:"bytes,3,opt,name=beacon_block_hash32,json=beaconBlockHash32,proto3" json:"beacon_block_hash32,omitempty"`
	EpochBoundaryHash32   []byte   `protobuf:"bytes,4,opt,name=epoch_boundary_hash32,json=epochBoundaryHash32,proto3" json:"epoch_boundary_hash32,omitempty"`
	ShardBlockHash32      []byte   `protobuf:"bytes,5,opt,name=shard_block_hash32,json=shardBlockHash32,proto3" json:"shard_block_hash32,omitempty"`
	LatestCrosslinkHash32 []byte   `protobuf:"bytes,6,opt,name=latest_crosslink_hash32,json=latestCrosslinkHash32,proto3" json:"latest_crosslink_hash32,omitempty"`
	JustifiedSlot         uint64   `protobuf:"varint,7,opt,name=justified_slot,json=justifiedSlot,proto3" json:"justified_slot,omitempty"`
	JustifiedBlockHash32  []byte   `protobuf:"bytes,8,opt,name=justified_block_hash32,json=justifiedBlockHash32,proto3" json:"justified_block_hash32,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *AttestationData) Reset()         { *m = AttestationData{} }
func (m *AttestationData) String() string { return proto.CompactTextString(m) }
func (*AttestationData) ProtoMessage()    {}
func (*AttestationData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{5}
}
func (m *AttestationData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationData.Unmarshal(m, b)
}
func (m *AttestationData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationData.Marshal(b, m, deterministic)
}
func (dst *AttestationData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationData.Merge(dst, src)
}
func (m *AttestationData) XXX_Size() int {
	return xxx_messageInfo_AttestationData.Size(m)
}
func (m *AttestationData) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationData.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationData proto.InternalMessageInfo

func (m *AttestationData) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *AttestationData) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *AttestationData) GetBeaconBlockHash32() []byte {
	if m != nil {
		return m.BeaconBlockHash32
	}
	return nil
}

func (m *AttestationData) GetEpochBoundaryHash32() []byte {
	if m != nil {
		return m.EpochBoundaryHash32
	}
	return nil
}

func (m *AttestationData) GetShardBlockHash32() []byte {
	if m != nil {
		return m.ShardBlockHash32
	}
	return nil
}

func (m *AttestationData) GetLatestCrosslinkHash32() []byte {
	if m != nil {
		return m.LatestCrosslinkHash32
	}
	return nil
}

func (m *AttestationData) GetJustifiedSlot() uint64 {
	if m != nil {
		return m.JustifiedSlot
	}
	return 0
}

func (m *AttestationData) GetJustifiedBlockHash32() []byte {
	if m != nil {
		return m.JustifiedBlockHash32
	}
	return nil
}

type ValidatorRecord struct {
	Pubkey []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// TODO(781): The usage of withdrawal_credentials is not defined in spec. Not used in Prysm yet.
	WithdrawalCredentials  []byte `protobuf:"bytes,2,opt,name=withdrawal_credentials,json=withdrawalCredentials,proto3" json:"withdrawal_credentials,omitempty"`
	RandaoCommitmentHash32 []byte `protobuf:"bytes,3,opt,name=randao_commitment_hash32,json=randaoCommitmentHash32,proto3" json:"randao_commitment_hash32,omitempty"`
	RandaoSkips            uint64 `protobuf:"varint,4,opt,name=randao_skips,json=randaoSkips,proto3" json:"randao_skips,omitempty"`
	// Balance in Gwei
	Balance                uint64                            `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	StatusCode             ValidatorRecord_ValiatorStateCode `protobuf:"varint,6,opt,name=status_code,json=statusCode,proto3,enum=ethereum.beacon.p2p.v1.ValidatorRecord_ValiatorStateCode" json:"status_code,omitempty"`
	LatestStatusChangeSlot uint64                            `protobuf:"varint,7,opt,name=latest_status_change_slot,json=latestStatusChangeSlot,proto3" json:"latest_status_change_slot,omitempty"`
	ExitCount              uint64                            `protobuf:"varint,8,opt,name=exit_count,json=exitCount,proto3" json:"exit_count,omitempty"`
	Status                 uint64                            `protobuf:"varint,9,opt,name=status,proto3" json:"status,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral   struct{}                          `json:"-"`
	XXX_unrecognized       []byte                            `json:"-"`
	XXX_sizecache          int32                             `json:"-"`
}

func (m *ValidatorRecord) Reset()         { *m = ValidatorRecord{} }
func (m *ValidatorRecord) String() string { return proto.CompactTextString(m) }
func (*ValidatorRecord) ProtoMessage()    {}
func (*ValidatorRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{6}
}
func (m *ValidatorRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorRecord.Unmarshal(m, b)
}
func (m *ValidatorRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorRecord.Marshal(b, m, deterministic)
}
func (dst *ValidatorRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorRecord.Merge(dst, src)
}
func (m *ValidatorRecord) XXX_Size() int {
	return xxx_messageInfo_ValidatorRecord.Size(m)
}
func (m *ValidatorRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorRecord proto.InternalMessageInfo

func (m *ValidatorRecord) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *ValidatorRecord) GetWithdrawalCredentials() []byte {
	if m != nil {
		return m.WithdrawalCredentials
	}
	return nil
}

func (m *ValidatorRecord) GetRandaoCommitmentHash32() []byte {
	if m != nil {
		return m.RandaoCommitmentHash32
	}
	return nil
}

func (m *ValidatorRecord) GetRandaoSkips() uint64 {
	if m != nil {
		return m.RandaoSkips
	}
	return 0
}

func (m *ValidatorRecord) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *ValidatorRecord) GetStatusCode() ValidatorRecord_ValiatorStateCode {
	if m != nil {
		return m.StatusCode
	}
	return ValidatorRecord_pending_activation
}

func (m *ValidatorRecord) GetLatestStatusChangeSlot() uint64 {
	if m != nil {
		return m.LatestStatusChangeSlot
	}
	return 0
}

func (m *ValidatorRecord) GetExitCount() uint64 {
	if m != nil {
		return m.ExitCount
	}
	return 0
}

// Deprecated: Do not use.
func (m *ValidatorRecord) GetStatus() uint64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ShardReassignmentRecord struct {
	ValidatorIndex       uint32   `protobuf:"varint,1,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	Shard                uint64   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	Slot                 uint64   `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardReassignmentRecord) Reset()         { *m = ShardReassignmentRecord{} }
func (m *ShardReassignmentRecord) String() string { return proto.CompactTextString(m) }
func (*ShardReassignmentRecord) ProtoMessage()    {}
func (*ShardReassignmentRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{7}
}
func (m *ShardReassignmentRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardReassignmentRecord.Unmarshal(m, b)
}
func (m *ShardReassignmentRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardReassignmentRecord.Marshal(b, m, deterministic)
}
func (dst *ShardReassignmentRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardReassignmentRecord.Merge(dst, src)
}
func (m *ShardReassignmentRecord) XXX_Size() int {
	return xxx_messageInfo_ShardReassignmentRecord.Size(m)
}
func (m *ShardReassignmentRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardReassignmentRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ShardReassignmentRecord proto.InternalMessageInfo

func (m *ShardReassignmentRecord) GetValidatorIndex() uint32 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *ShardReassignmentRecord) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *ShardReassignmentRecord) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

// AggregatedAttestation is deprecated entirely by AttestationRecord.
type AggregatedAttestation struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`                                                           // Deprecated: Do not use.
	Shard                uint64   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`                                                         // Deprecated: Do not use.
	JustifiedSlot        uint64   `protobuf:"varint,3,opt,name=justified_slot,json=justifiedSlot,proto3" json:"justified_slot,omitempty"`                    // Deprecated: Do not use.
	JustifiedBlockHash   []byte   `protobuf:"bytes,4,opt,name=justified_block_hash,json=justifiedBlockHash,proto3" json:"justified_block_hash,omitempty"`    // Deprecated: Do not use.
	ShardBlockHash       []byte   `protobuf:"bytes,5,opt,name=shard_block_hash,json=shardBlockHash,proto3" json:"shard_block_hash,omitempty"`                // Deprecated: Do not use.
	AttesterBitfield     []byte   `protobuf:"bytes,6,opt,name=attester_bitfield,json=attesterBitfield,proto3" json:"attester_bitfield,omitempty"`            // Deprecated: Do not use.
	ObliqueParentHashes  [][]byte `protobuf:"bytes,7,rep,name=oblique_parent_hashes,json=obliqueParentHashes,proto3" json:"oblique_parent_hashes,omitempty"` // Deprecated: Do not use.
	AggregateSig         []uint64 `protobuf:"varint,8,rep,packed,name=aggregate_sig,json=aggregateSig,proto3" json:"aggregate_sig,omitempty"`                // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatedAttestation) Reset()         { *m = AggregatedAttestation{} }
func (m *AggregatedAttestation) String() string { return proto.CompactTextString(m) }
func (*AggregatedAttestation) ProtoMessage()    {}
func (*AggregatedAttestation) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{8}
}
func (m *AggregatedAttestation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedAttestation.Unmarshal(m, b)
}
func (m *AggregatedAttestation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedAttestation.Marshal(b, m, deterministic)
}
func (dst *AggregatedAttestation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedAttestation.Merge(dst, src)
}
func (m *AggregatedAttestation) XXX_Size() int {
	return xxx_messageInfo_AggregatedAttestation.Size(m)
}
func (m *AggregatedAttestation) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedAttestation.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedAttestation proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetJustifiedSlot() uint64 {
	if m != nil {
		return m.JustifiedSlot
	}
	return 0
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetJustifiedBlockHash() []byte {
	if m != nil {
		return m.JustifiedBlockHash
	}
	return nil
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetShardBlockHash() []byte {
	if m != nil {
		return m.ShardBlockHash
	}
	return nil
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetAttesterBitfield() []byte {
	if m != nil {
		return m.AttesterBitfield
	}
	return nil
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetObliqueParentHashes() [][]byte {
	if m != nil {
		return m.ObliqueParentHashes
	}
	return nil
}

// Deprecated: Do not use.
func (m *AggregatedAttestation) GetAggregateSig() []uint64 {
	if m != nil {
		return m.AggregateSig
	}
	return nil
}

type SpecialRecord struct {
	Kind                 uint32   `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"` // Deprecated: Do not use.
	Data                 [][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`  // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecialRecord) Reset()         { *m = SpecialRecord{} }
func (m *SpecialRecord) String() string { return proto.CompactTextString(m) }
func (*SpecialRecord) ProtoMessage()    {}
func (*SpecialRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{9}
}
func (m *SpecialRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialRecord.Unmarshal(m, b)
}
func (m *SpecialRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialRecord.Marshal(b, m, deterministic)
}
func (dst *SpecialRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialRecord.Merge(dst, src)
}
func (m *SpecialRecord) XXX_Size() int {
	return xxx_messageInfo_SpecialRecord.Size(m)
}
func (m *SpecialRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialRecord proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *SpecialRecord) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

// Deprecated: Do not use.
func (m *SpecialRecord) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CrosslinkRecord struct {
	Slot             uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	ShardBlockHash32 []byte `protobuf:"bytes,2,opt,name=shard_block_hash32,json=shardBlockHash32,proto3" json:"shard_block_hash32,omitempty"`
	// Deprecated fields
	// All fields must be annotated with [deprecated=true];
	ShardBlockHash       []byte   `protobuf:"bytes,1001,opt,name=shard_block_hash,json=shardBlockHash,proto3" json:"shard_block_hash,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrosslinkRecord) Reset()         { *m = CrosslinkRecord{} }
func (m *CrosslinkRecord) String() string { return proto.CompactTextString(m) }
func (*CrosslinkRecord) ProtoMessage()    {}
func (*CrosslinkRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{10}
}
func (m *CrosslinkRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrosslinkRecord.Unmarshal(m, b)
}
func (m *CrosslinkRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrosslinkRecord.Marshal(b, m, deterministic)
}
func (dst *CrosslinkRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrosslinkRecord.Merge(dst, src)
}
func (m *CrosslinkRecord) XXX_Size() int {
	return xxx_messageInfo_CrosslinkRecord.Size(m)
}
func (m *CrosslinkRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CrosslinkRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CrosslinkRecord proto.InternalMessageInfo

func (m *CrosslinkRecord) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *CrosslinkRecord) GetShardBlockHash32() []byte {
	if m != nil {
		return m.ShardBlockHash32
	}
	return nil
}

// Deprecated: Do not use.
func (m *CrosslinkRecord) GetShardBlockHash() []byte {
	if m != nil {
		return m.ShardBlockHash
	}
	return nil
}

type ShardAndCommitteeArray struct {
	ArrayShardAndCommittee []*ShardAndCommittee `protobuf:"bytes,1,rep,name=array_shard_and_committee,json=arrayShardAndCommittee,proto3" json:"array_shard_and_committee,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *ShardAndCommitteeArray) Reset()         { *m = ShardAndCommitteeArray{} }
func (m *ShardAndCommitteeArray) String() string { return proto.CompactTextString(m) }
func (*ShardAndCommitteeArray) ProtoMessage()    {}
func (*ShardAndCommitteeArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{11}
}
func (m *ShardAndCommitteeArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardAndCommitteeArray.Unmarshal(m, b)
}
func (m *ShardAndCommitteeArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardAndCommitteeArray.Marshal(b, m, deterministic)
}
func (dst *ShardAndCommitteeArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardAndCommitteeArray.Merge(dst, src)
}
func (m *ShardAndCommitteeArray) XXX_Size() int {
	return xxx_messageInfo_ShardAndCommitteeArray.Size(m)
}
func (m *ShardAndCommitteeArray) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardAndCommitteeArray.DiscardUnknown(m)
}

var xxx_messageInfo_ShardAndCommitteeArray proto.InternalMessageInfo

func (m *ShardAndCommitteeArray) GetArrayShardAndCommittee() []*ShardAndCommittee {
	if m != nil {
		return m.ArrayShardAndCommittee
	}
	return nil
}

type ShardAndCommittee struct {
	Shard                uint64   `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	Committee            []uint32 `protobuf:"varint,2,rep,packed,name=committee,proto3" json:"committee,omitempty"`
	TotalValidatorCount  uint64   `protobuf:"varint,3,opt,name=total_validator_count,json=totalValidatorCount,proto3" json:"total_validator_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardAndCommittee) Reset()         { *m = ShardAndCommittee{} }
func (m *ShardAndCommittee) String() string { return proto.CompactTextString(m) }
func (*ShardAndCommittee) ProtoMessage()    {}
func (*ShardAndCommittee) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{12}
}
func (m *ShardAndCommittee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardAndCommittee.Unmarshal(m, b)
}
func (m *ShardAndCommittee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardAndCommittee.Marshal(b, m, deterministic)
}
func (dst *ShardAndCommittee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardAndCommittee.Merge(dst, src)
}
func (m *ShardAndCommittee) XXX_Size() int {
	return xxx_messageInfo_ShardAndCommittee.Size(m)
}
func (m *ShardAndCommittee) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardAndCommittee.DiscardUnknown(m)
}

var xxx_messageInfo_ShardAndCommittee proto.InternalMessageInfo

func (m *ShardAndCommittee) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *ShardAndCommittee) GetCommittee() []uint32 {
	if m != nil {
		return m.Committee
	}
	return nil
}

func (m *ShardAndCommittee) GetTotalValidatorCount() uint64 {
	if m != nil {
		return m.TotalValidatorCount
	}
	return 0
}

type BeaconBlock struct {
	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	// Ancestor hashes represent a skip list of ancestor beacon block hashes.
	// i'th item is the most recent ancestor whose slot is a multiple of 2^i
	// for i in the range of 0 to 31.
	AncestorHash32S               [][]byte `protobuf:"bytes,2,rep,name=ancestor_hash32s,json=ancestorHash32s,proto3" json:"ancestor_hash32s,omitempty"`
	StateRootHash32               []byte   `protobuf:"bytes,3,opt,name=state_root_hash32,json=stateRootHash32,proto3" json:"state_root_hash32,omitempty"`
	RandaoRevealHash32            []byte   `protobuf:"bytes,4,opt,name=randao_reveal_hash32,json=randaoRevealHash32,proto3" json:"randao_reveal_hash32,omitempty"`
	CandidatePowReceiptRootHash32 []byte   `protobuf:"bytes,5,opt,name=candidate_pow_receipt_root_hash32,json=candidatePowReceiptRootHash32,proto3" json:"candidate_pow_receipt_root_hash32,omitempty"`
	Signature                     [][]byte `protobuf:"bytes,6,rep,name=signature,proto3" json:"signature,omitempty"`
	// Block Body
	Body *BeaconBlockBody `protobuf:"bytes,7,opt,name=body,proto3" json:"body,omitempty"`
	// Deprecated fields
	// All fields must be annotated with [deprecated=true];
	Timestamp            *timestamp.Timestamp     `protobuf:"bytes,1006,opt,name=timestamp,proto3" json:"timestamp,omitempty"`       // Deprecated: Do not use.
	Attestations         []*AggregatedAttestation `protobuf:"bytes,1007,rep,name=attestations,proto3" json:"attestations,omitempty"` // Deprecated: Do not use.
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *BeaconBlock) Reset()         { *m = BeaconBlock{} }
func (m *BeaconBlock) String() string { return proto.CompactTextString(m) }
func (*BeaconBlock) ProtoMessage()    {}
func (*BeaconBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{13}
}
func (m *BeaconBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeaconBlock.Unmarshal(m, b)
}
func (m *BeaconBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeaconBlock.Marshal(b, m, deterministic)
}
func (dst *BeaconBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeaconBlock.Merge(dst, src)
}
func (m *BeaconBlock) XXX_Size() int {
	return xxx_messageInfo_BeaconBlock.Size(m)
}
func (m *BeaconBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_BeaconBlock.DiscardUnknown(m)
}

var xxx_messageInfo_BeaconBlock proto.InternalMessageInfo

func (m *BeaconBlock) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *BeaconBlock) GetAncestorHash32S() [][]byte {
	if m != nil {
		return m.AncestorHash32S
	}
	return nil
}

func (m *BeaconBlock) GetStateRootHash32() []byte {
	if m != nil {
		return m.StateRootHash32
	}
	return nil
}

func (m *BeaconBlock) GetRandaoRevealHash32() []byte {
	if m != nil {
		return m.RandaoRevealHash32
	}
	return nil
}

func (m *BeaconBlock) GetCandidatePowReceiptRootHash32() []byte {
	if m != nil {
		return m.CandidatePowReceiptRootHash32
	}
	return nil
}

func (m *BeaconBlock) GetSignature() [][]byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BeaconBlock) GetBody() *BeaconBlockBody {
	if m != nil {
		return m.Body
	}
	return nil
}

// Deprecated: Do not use.
func (m *BeaconBlock) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

// Deprecated: Do not use.
func (m *BeaconBlock) GetAttestations() []*AggregatedAttestation {
	if m != nil {
		return m.Attestations
	}
	return nil
}

type BeaconBlockBody struct {
	Attestations         []*Attestation      `protobuf:"bytes,1,rep,name=attestations,proto3" json:"attestations,omitempty"`
	ProposerSlashings    []*ProposerSlashing `protobuf:"bytes,2,rep,name=proposer_slashings,json=proposerSlashings,proto3" json:"proposer_slashings,omitempty"`
	CasperSlashings      []*CasperSlashing   `protobuf:"bytes,3,rep,name=casper_slashings,json=casperSlashings,proto3" json:"casper_slashings,omitempty"`
	Deposits             []*Deposit          `protobuf:"bytes,4,rep,name=deposits,proto3" json:"deposits,omitempty"`
	Exits                []*Exit             `protobuf:"bytes,5,rep,name=exits,proto3" json:"exits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *BeaconBlockBody) Reset()         { *m = BeaconBlockBody{} }
func (m *BeaconBlockBody) String() string { return proto.CompactTextString(m) }
func (*BeaconBlockBody) ProtoMessage()    {}
func (*BeaconBlockBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{14}
}
func (m *BeaconBlockBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeaconBlockBody.Unmarshal(m, b)
}
func (m *BeaconBlockBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeaconBlockBody.Marshal(b, m, deterministic)
}
func (dst *BeaconBlockBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeaconBlockBody.Merge(dst, src)
}
func (m *BeaconBlockBody) XXX_Size() int {
	return xxx_messageInfo_BeaconBlockBody.Size(m)
}
func (m *BeaconBlockBody) XXX_DiscardUnknown() {
	xxx_messageInfo_BeaconBlockBody.DiscardUnknown(m)
}

var xxx_messageInfo_BeaconBlockBody proto.InternalMessageInfo

func (m *BeaconBlockBody) GetAttestations() []*Attestation {
	if m != nil {
		return m.Attestations
	}
	return nil
}

func (m *BeaconBlockBody) GetProposerSlashings() []*ProposerSlashing {
	if m != nil {
		return m.ProposerSlashings
	}
	return nil
}

func (m *BeaconBlockBody) GetCasperSlashings() []*CasperSlashing {
	if m != nil {
		return m.CasperSlashings
	}
	return nil
}

func (m *BeaconBlockBody) GetDeposits() []*Deposit {
	if m != nil {
		return m.Deposits
	}
	return nil
}

func (m *BeaconBlockBody) GetExits() []*Exit {
	if m != nil {
		return m.Exits
	}
	return nil
}

type DepositParameters struct {
	Pubkey            []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	ProofOfPossession []byte `protobuf:"bytes,2,opt,name=proof_of_possession,json=proofOfPossession,proto3" json:"proof_of_possession,omitempty"`
	// TODO(781): The usage of withdrawal_credentials is not defined in spec. Not used in Prysm yet.
	WithdrawalCredentialsHash32 []byte   `protobuf:"bytes,3,opt,name=withdrawal_credentials_hash32,json=withdrawalCredentialsHash32,proto3" json:"withdrawal_credentials_hash32,omitempty"`
	RandaoCommitmentHash32      []byte   `protobuf:"bytes,4,opt,name=randao_commitment_hash32,json=randaoCommitmentHash32,proto3" json:"randao_commitment_hash32,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *DepositParameters) Reset()         { *m = DepositParameters{} }
func (m *DepositParameters) String() string { return proto.CompactTextString(m) }
func (*DepositParameters) ProtoMessage()    {}
func (*DepositParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{15}
}
func (m *DepositParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositParameters.Unmarshal(m, b)
}
func (m *DepositParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositParameters.Marshal(b, m, deterministic)
}
func (dst *DepositParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositParameters.Merge(dst, src)
}
func (m *DepositParameters) XXX_Size() int {
	return xxx_messageInfo_DepositParameters.Size(m)
}
func (m *DepositParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositParameters.DiscardUnknown(m)
}

var xxx_messageInfo_DepositParameters proto.InternalMessageInfo

func (m *DepositParameters) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *DepositParameters) GetProofOfPossession() []byte {
	if m != nil {
		return m.ProofOfPossession
	}
	return nil
}

func (m *DepositParameters) GetWithdrawalCredentialsHash32() []byte {
	if m != nil {
		return m.WithdrawalCredentialsHash32
	}
	return nil
}

func (m *DepositParameters) GetRandaoCommitmentHash32() []byte {
	if m != nil {
		return m.RandaoCommitmentHash32
	}
	return nil
}

type ProposalSignedData struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Shard                uint64   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	BlockHash32          []byte   `protobuf:"bytes,3,opt,name=block_hash32,json=blockHash32,proto3" json:"block_hash32,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposalSignedData) Reset()         { *m = ProposalSignedData{} }
func (m *ProposalSignedData) String() string { return proto.CompactTextString(m) }
func (*ProposalSignedData) ProtoMessage()    {}
func (*ProposalSignedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{16}
}
func (m *ProposalSignedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposalSignedData.Unmarshal(m, b)
}
func (m *ProposalSignedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposalSignedData.Marshal(b, m, deterministic)
}
func (dst *ProposalSignedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposalSignedData.Merge(dst, src)
}
func (m *ProposalSignedData) XXX_Size() int {
	return xxx_messageInfo_ProposalSignedData.Size(m)
}
func (m *ProposalSignedData) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposalSignedData.DiscardUnknown(m)
}

var xxx_messageInfo_ProposalSignedData proto.InternalMessageInfo

func (m *ProposalSignedData) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *ProposalSignedData) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *ProposalSignedData) GetBlockHash32() []byte {
	if m != nil {
		return m.BlockHash32
	}
	return nil
}

type SlashableVoteData struct {
	AggregateSignaturePoc_0Indices []*common.Uint32List `protobuf:"bytes,1,rep,name=aggregate_signature_poc_0_indices,json=aggregateSignaturePoc0Indices,proto3" json:"aggregate_signature_poc_0_indices,omitempty"`
	AggregateSignaturePoc_1Indices []*common.Uint32List `protobuf:"bytes,2,rep,name=aggregate_signature_poc_1_indices,json=aggregateSignaturePoc1Indices,proto3" json:"aggregate_signature_poc_1_indices,omitempty"`
	Data                           *AttestationData     `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	AggregateSignature             []byte               `protobuf:"bytes,4,opt,name=aggregate_signature,json=aggregateSignature,proto3" json:"aggregate_signature,omitempty"`
	XXX_NoUnkeyedLiteral           struct{}             `json:"-"`
	XXX_unrecognized               []byte               `json:"-"`
	XXX_sizecache                  int32                `json:"-"`
}

func (m *SlashableVoteData) Reset()         { *m = SlashableVoteData{} }
func (m *SlashableVoteData) String() string { return proto.CompactTextString(m) }
func (*SlashableVoteData) ProtoMessage()    {}
func (*SlashableVoteData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{17}
}
func (m *SlashableVoteData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlashableVoteData.Unmarshal(m, b)
}
func (m *SlashableVoteData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlashableVoteData.Marshal(b, m, deterministic)
}
func (dst *SlashableVoteData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlashableVoteData.Merge(dst, src)
}
func (m *SlashableVoteData) XXX_Size() int {
	return xxx_messageInfo_SlashableVoteData.Size(m)
}
func (m *SlashableVoteData) XXX_DiscardUnknown() {
	xxx_messageInfo_SlashableVoteData.DiscardUnknown(m)
}

var xxx_messageInfo_SlashableVoteData proto.InternalMessageInfo

func (m *SlashableVoteData) GetAggregateSignaturePoc_0Indices() []*common.Uint32List {
	if m != nil {
		return m.AggregateSignaturePoc_0Indices
	}
	return nil
}

func (m *SlashableVoteData) GetAggregateSignaturePoc_1Indices() []*common.Uint32List {
	if m != nil {
		return m.AggregateSignaturePoc_1Indices
	}
	return nil
}

func (m *SlashableVoteData) GetData() *AttestationData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SlashableVoteData) GetAggregateSignature() []byte {
	if m != nil {
		return m.AggregateSignature
	}
	return nil
}

type DepositData struct {
	DepositParameters    *DepositParameters `protobuf:"bytes,1,opt,name=deposit_parameters,json=depositParameters,proto3" json:"deposit_parameters,omitempty"`
	Value                uint64             `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            uint64             `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DepositData) Reset()         { *m = DepositData{} }
func (m *DepositData) String() string { return proto.CompactTextString(m) }
func (*DepositData) ProtoMessage()    {}
func (*DepositData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{18}
}
func (m *DepositData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DepositData.Unmarshal(m, b)
}
func (m *DepositData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DepositData.Marshal(b, m, deterministic)
}
func (dst *DepositData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DepositData.Merge(dst, src)
}
func (m *DepositData) XXX_Size() int {
	return xxx_messageInfo_DepositData.Size(m)
}
func (m *DepositData) XXX_DiscardUnknown() {
	xxx_messageInfo_DepositData.DiscardUnknown(m)
}

var xxx_messageInfo_DepositData proto.InternalMessageInfo

func (m *DepositData) GetDepositParameters() *DepositParameters {
	if m != nil {
		return m.DepositParameters
	}
	return nil
}

func (m *DepositData) GetValue() uint64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *DepositData) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ProposerSlashing struct {
	ProposerIndex        uint32              `protobuf:"varint,1,opt,name=proposer_index,json=proposerIndex,proto3" json:"proposer_index,omitempty"`
	ProposalData_1       *ProposalSignedData `protobuf:"bytes,2,opt,name=proposal_data_1,json=proposalData1,proto3" json:"proposal_data_1,omitempty"`
	ProposalSignature_1  []byte              `protobuf:"bytes,3,opt,name=proposal_signature_1,json=proposalSignature1,proto3" json:"proposal_signature_1,omitempty"`
	ProposalData_2       *ProposalSignedData `protobuf:"bytes,4,opt,name=proposal_data_2,json=proposalData2,proto3" json:"proposal_data_2,omitempty"`
	ProposalSignature_2  []byte              `protobuf:"bytes,5,opt,name=proposal_signature_2,json=proposalSignature2,proto3" json:"proposal_signature_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProposerSlashing) Reset()         { *m = ProposerSlashing{} }
func (m *ProposerSlashing) String() string { return proto.CompactTextString(m) }
func (*ProposerSlashing) ProtoMessage()    {}
func (*ProposerSlashing) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{19}
}
func (m *ProposerSlashing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposerSlashing.Unmarshal(m, b)
}
func (m *ProposerSlashing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposerSlashing.Marshal(b, m, deterministic)
}
func (dst *ProposerSlashing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposerSlashing.Merge(dst, src)
}
func (m *ProposerSlashing) XXX_Size() int {
	return xxx_messageInfo_ProposerSlashing.Size(m)
}
func (m *ProposerSlashing) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposerSlashing.DiscardUnknown(m)
}

var xxx_messageInfo_ProposerSlashing proto.InternalMessageInfo

func (m *ProposerSlashing) GetProposerIndex() uint32 {
	if m != nil {
		return m.ProposerIndex
	}
	return 0
}

func (m *ProposerSlashing) GetProposalData_1() *ProposalSignedData {
	if m != nil {
		return m.ProposalData_1
	}
	return nil
}

func (m *ProposerSlashing) GetProposalSignature_1() []byte {
	if m != nil {
		return m.ProposalSignature_1
	}
	return nil
}

func (m *ProposerSlashing) GetProposalData_2() *ProposalSignedData {
	if m != nil {
		return m.ProposalData_2
	}
	return nil
}

func (m *ProposerSlashing) GetProposalSignature_2() []byte {
	if m != nil {
		return m.ProposalSignature_2
	}
	return nil
}

type CasperSlashing struct {
	Votes_1              *SlashableVoteData `protobuf:"bytes,1,opt,name=votes_1,json=votes1,proto3" json:"votes_1,omitempty"`
	Votes_2              *SlashableVoteData `protobuf:"bytes,2,opt,name=votes_2,json=votes2,proto3" json:"votes_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CasperSlashing) Reset()         { *m = CasperSlashing{} }
func (m *CasperSlashing) String() string { return proto.CompactTextString(m) }
func (*CasperSlashing) ProtoMessage()    {}
func (*CasperSlashing) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{20}
}
func (m *CasperSlashing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CasperSlashing.Unmarshal(m, b)
}
func (m *CasperSlashing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CasperSlashing.Marshal(b, m, deterministic)
}
func (dst *CasperSlashing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CasperSlashing.Merge(dst, src)
}
func (m *CasperSlashing) XXX_Size() int {
	return xxx_messageInfo_CasperSlashing.Size(m)
}
func (m *CasperSlashing) XXX_DiscardUnknown() {
	xxx_messageInfo_CasperSlashing.DiscardUnknown(m)
}

var xxx_messageInfo_CasperSlashing proto.InternalMessageInfo

func (m *CasperSlashing) GetVotes_1() *SlashableVoteData {
	if m != nil {
		return m.Votes_1
	}
	return nil
}

func (m *CasperSlashing) GetVotes_2() *SlashableVoteData {
	if m != nil {
		return m.Votes_2
	}
	return nil
}

type Deposit struct {
	MerkleBranchHash32S  [][]byte     `protobuf:"bytes,1,rep,name=merkle_branch_hash32s,json=merkleBranchHash32s,proto3" json:"merkle_branch_hash32s,omitempty"`
	MerkleTreeIndex      uint64       `protobuf:"varint,2,opt,name=merkle_tree_index,json=merkleTreeIndex,proto3" json:"merkle_tree_index,omitempty"`
	DepositData          *DepositData `protobuf:"bytes,3,opt,name=deposit_data,json=depositData,proto3" json:"deposit_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Deposit) Reset()         { *m = Deposit{} }
func (m *Deposit) String() string { return proto.CompactTextString(m) }
func (*Deposit) ProtoMessage()    {}
func (*Deposit) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{21}
}
func (m *Deposit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Deposit.Unmarshal(m, b)
}
func (m *Deposit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Deposit.Marshal(b, m, deterministic)
}
func (dst *Deposit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Deposit.Merge(dst, src)
}
func (m *Deposit) XXX_Size() int {
	return xxx_messageInfo_Deposit.Size(m)
}
func (m *Deposit) XXX_DiscardUnknown() {
	xxx_messageInfo_Deposit.DiscardUnknown(m)
}

var xxx_messageInfo_Deposit proto.InternalMessageInfo

func (m *Deposit) GetMerkleBranchHash32S() [][]byte {
	if m != nil {
		return m.MerkleBranchHash32S
	}
	return nil
}

func (m *Deposit) GetMerkleTreeIndex() uint64 {
	if m != nil {
		return m.MerkleTreeIndex
	}
	return 0
}

func (m *Deposit) GetDepositData() *DepositData {
	if m != nil {
		return m.DepositData
	}
	return nil
}

type Exit struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	ValidatorIndex       uint64   `protobuf:"varint,2,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exit) Reset()         { *m = Exit{} }
func (m *Exit) String() string { return proto.CompactTextString(m) }
func (*Exit) ProtoMessage()    {}
func (*Exit) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_39896d48a609e7a6, []int{22}
}
func (m *Exit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exit.Unmarshal(m, b)
}
func (m *Exit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exit.Marshal(b, m, deterministic)
}
func (dst *Exit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exit.Merge(dst, src)
}
func (m *Exit) XXX_Size() int {
	return xxx_messageInfo_Exit.Size(m)
}
func (m *Exit) XXX_DiscardUnknown() {
	xxx_messageInfo_Exit.DiscardUnknown(m)
}

var xxx_messageInfo_Exit proto.InternalMessageInfo

func (m *Exit) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *Exit) GetValidatorIndex() uint64 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *Exit) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func init() {
	proto.RegisterType((*BeaconState)(nil), "ethereum.beacon.p2p.v1.BeaconState")
	proto.RegisterType((*ForkData)(nil), "ethereum.beacon.p2p.v1.ForkData")
	proto.RegisterType((*CandidatePoWReceiptRootRecord)(nil), "ethereum.beacon.p2p.v1.CandidatePoWReceiptRootRecord")
	proto.RegisterType((*PendingAttestationRecord)(nil), "ethereum.beacon.p2p.v1.PendingAttestationRecord")
	proto.RegisterType((*Attestation)(nil), "ethereum.beacon.p2p.v1.Attestation")
	proto.RegisterType((*AttestationData)(nil), "ethereum.beacon.p2p.v1.AttestationData")
	proto.RegisterType((*ValidatorRecord)(nil), "ethereum.beacon.p2p.v1.ValidatorRecord")
	proto.RegisterType((*ShardReassignmentRecord)(nil), "ethereum.beacon.p2p.v1.ShardReassignmentRecord")
	proto.RegisterType((*AggregatedAttestation)(nil), "ethereum.beacon.p2p.v1.AggregatedAttestation")
	proto.RegisterType((*SpecialRecord)(nil), "ethereum.beacon.p2p.v1.SpecialRecord")
	proto.RegisterType((*CrosslinkRecord)(nil), "ethereum.beacon.p2p.v1.CrosslinkRecord")
	proto.RegisterType((*ShardAndCommitteeArray)(nil), "ethereum.beacon.p2p.v1.ShardAndCommitteeArray")
	proto.RegisterType((*ShardAndCommittee)(nil), "ethereum.beacon.p2p.v1.ShardAndCommittee")
	proto.RegisterType((*BeaconBlock)(nil), "ethereum.beacon.p2p.v1.BeaconBlock")
	proto.RegisterType((*BeaconBlockBody)(nil), "ethereum.beacon.p2p.v1.BeaconBlockBody")
	proto.RegisterType((*DepositParameters)(nil), "ethereum.beacon.p2p.v1.DepositParameters")
	proto.RegisterType((*ProposalSignedData)(nil), "ethereum.beacon.p2p.v1.ProposalSignedData")
	proto.RegisterType((*SlashableVoteData)(nil), "ethereum.beacon.p2p.v1.SlashableVoteData")
	proto.RegisterType((*DepositData)(nil), "ethereum.beacon.p2p.v1.DepositData")
	proto.RegisterType((*ProposerSlashing)(nil), "ethereum.beacon.p2p.v1.ProposerSlashing")
	proto.RegisterType((*CasperSlashing)(nil), "ethereum.beacon.p2p.v1.CasperSlashing")
	proto.RegisterType((*Deposit)(nil), "ethereum.beacon.p2p.v1.Deposit")
	proto.RegisterType((*Exit)(nil), "ethereum.beacon.p2p.v1.Exit")
	proto.RegisterEnum("ethereum.beacon.p2p.v1.ValidatorRecord_ValiatorStateCode", ValidatorRecord_ValiatorStateCode_name, ValidatorRecord_ValiatorStateCode_value)
}

func init() {
	proto.RegisterFile("proto/beacon/p2p/v1/types.proto", fileDescriptor_types_39896d48a609e7a6)
}

var fileDescriptor_types_39896d48a609e7a6 = []byte{
	// 2453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xc9, 0x73, 0x24, 0x47,
	0xd5, 0xff, 0xba, 0xd5, 0xa3, 0xe5, 0xb5, 0xa4, 0xee, 0x4e, 0x6d, 0x65, 0x69, 0x64, 0xcd, 0xd4,
	0x7c, 0x78, 0x46, 0xc6, 0x6e, 0x8d, 0x7a, 0xb0, 0x8d, 0xc3, 0x01, 0xc4, 0x48, 0xe3, 0xc1, 0x43,
	0x18, 0x23, 0x97, 0xc6, 0x63, 0x82, 0x4b, 0x45, 0x76, 0x55, 0x76, 0xab, 0xac, 0x52, 0x65, 0x51,
	0x99, 0xad, 0x91, 0x20, 0x30, 0x11, 0xdc, 0xe0, 0x4a, 0x80, 0x4d, 0x70, 0xc2, 0xff, 0x01, 0x47,
	0xb6, 0x23, 0x67, 0x82, 0xe5, 0xc2, 0x01, 0x0e, 0x1c, 0x88, 0xc0, 0x2c, 0x3e, 0x72, 0x25, 0xf2,
	0x65, 0xd6, 0xd6, 0x8b, 0x66, 0xe1, 0xc2, 0x49, 0xca, 0xb7, 0x77, 0xe6, 0xef, 0x6d, 0x05, 0x5b,
	0x71, 0xc2, 0x25, 0xdf, 0xe9, 0x32, 0xea, 0xf1, 0x68, 0x27, 0xee, 0xc4, 0x3b, 0xa7, 0xbb, 0x3b,
	0xf2, 0x3c, 0x66, 0xa2, 0x8d, 0x1c, 0xb2, 0xca, 0xe4, 0x11, 0x4b, 0xd8, 0xe0, 0xa4, 0xad, 0x65,
	0xda, 0x71, 0x27, 0x6e, 0x9f, 0xee, 0xae, 0x6f, 0xf5, 0x39, 0xef, 0x87, 0x6c, 0x07, 0xa5, 0xba,
	0x83, 0xde, 0x8e, 0x0c, 0x4e, 0x98, 0x90, 0xf4, 0x24, 0xd6, 0x8a, 0xeb, 0x1b, 0xda, 0xb2, 0xc7,
	0x4f, 0x4e, 0x78, 0xb4, 0x73, 0xc2, 0x84, 0xa0, 0xfd, 0xd4, 0xaa, 0xfd, 0x49, 0x03, 0xea, 0x7b,
	0x68, 0xef, 0x50, 0x52, 0xc9, 0xc8, 0x03, 0x20, 0xa7, 0x34, 0x0c, 0x7c, 0x2a, 0x79, 0xe2, 0x26,
	0xac, 0x1f, 0x08, 0x99, 0x9c, 0x5b, 0x95, 0x2b, 0x53, 0x37, 0xea, 0x9d, 0xeb, 0xed, 0xf1, 0x21,
	0xb4, 0x1f, 0xa4, 0x1a, 0x0e, 0xf3, 0x78, 0xe2, 0x3b, 0xad, 0xd3, 0x9c, 0xa0, 0x2d, 0x90, 0x37,
	0xe1, 0xda, 0xa8, 0x5d, 0x37, 0xa4, 0x42, 0xba, 0xde, 0x11, 0x8d, 0xfa, 0xcc, 0x15, 0x21, 0x97,
	0x56, 0xf5, 0x4a, 0xe5, 0x46, 0xcd, 0xd9, 0x1a, 0xd1, 0x7f, 0x93, 0x0a, 0xb9, 0x8f, 0x72, 0x87,
	0x21, 0x97, 0xe4, 0x36, 0x6c, 0x8e, 0xb1, 0xc6, 0xce, 0x02, 0xe9, 0x7a, 0x7c, 0x10, 0x49, 0x6b,
	0x0a, 0xed, 0xac, 0x8f, 0xd8, 0x79, 0xfd, 0x2c, 0x90, 0xfb, 0x4a, 0x82, 0xbc, 0x0b, 0xdb, 0x63,
	0x4c, 0xf8, 0x2c, 0x94, 0x54, 0x45, 0x14, 0x44, 0xae, 0x0c, 0x62, 0xf7, 0x88, 0x8a, 0xa3, 0x5b,
	0x1d, 0xab, 0x76, 0xa5, 0x72, 0x63, 0xde, 0xf9, 0xff, 0x11, 0x73, 0x77, 0x94, 0xf8, 0xbe, 0x92,
	0xbe, 0x1f, 0xc4, 0x6f, 0xa0, 0x2c, 0xf9, 0x34, 0xb4, 0x12, 0x1a, 0xf9, 0x94, 0xbb, 0x27, 0xc1,
	0x59, 0x6a, 0xe0, 0x6f, 0x33, 0x68, 0xa1, 0xa1, 0x39, 0x5f, 0x0e, 0xce, 0x8c, 0xf0, 0x36, 0x34,
	0x23, 0x76, 0x26, 0x5d, 0xc1, 0x98, 0x9f, 0xca, 0x7e, 0xac, 0x65, 0x17, 0x15, 0xe3, 0x90, 0x31,
	0xdf, 0x88, 0x0a, 0x78, 0x56, 0x1c, 0xd1, 0xc4, 0x77, 0x69, 0xe4, 0xbb, 0xea, 0x31, 0x03, 0x29,
	0x19, 0x13, 0x6e, 0x8f, 0x27, 0x78, 0x77, 0xc2, 0xfa, 0xfb, 0x0c, 0x3e, 0x53, 0x7b, 0xd2, 0x33,
	0x1d, 0x2a, 0xf5, 0xdb, 0x91, 0xbf, 0x9f, 0x2a, 0xdf, 0x4e, 0x12, 0x7a, 0xee, 0xac, 0x8b, 0x61,
	0xba, 0xb8, 0xcb, 0x13, 0x75, 0xcf, 0x82, 0xbc, 0x0d, 0x2b, 0x31, 0x4b, 0x44, 0x20, 0x24, 0x8b,
	0x64, 0xc1, 0xab, 0xf5, 0x0f, 0xed, 0x6b, 0x23, 0xf7, 0xa5, 0xf1, 0xd5, 0x7e, 0x27, 0x88, 0xe4,
	0xad, 0xce, 0x9b, 0x81, 0x90, 0xce, 0x72, 0xae, 0x9a, 0x9b, 0x26, 0xef, 0x83, 0x3d, 0xce, 0xa4,
	0x9b, 0x30, 0x2a, 0x44, 0xd0, 0x8f, 0x4e, 0x58, 0x24, 0x85, 0xf5, 0x4f, 0x6d, 0x7f, 0xe7, 0xc2,
	0xdf, 0xe2, 0x14, 0x54, 0x0c, 0xf4, 0xae, 0x8c, 0xf1, 0x59, 0x14, 0x13, 0xe4, 0x15, 0x58, 0x8b,
	0x13, 0x76, 0x1a, 0xf0, 0x81, 0x70, 0xdf, 0x1b, 0x08, 0x19, 0xf4, 0x02, 0xe6, 0x6b, 0xf4, 0xfd,
	0xb6, 0x81, 0xb0, 0x59, 0x49, 0xf9, 0x5f, 0x4a, 0xd9, 0x08, 0xba, 0xe7, 0x60, 0x71, 0x48, 0xfe,
	0x77, 0x5a, 0x7e, 0xe1, 0xbd, 0x92, 0xdc, 0x2b, 0xb0, 0x56, 0x96, 0x73, 0xbb, 0x81, 0xec, 0x05,
	0x2c, 0xf4, 0xad, 0xdf, 0x1b, 0x07, 0x25, 0x85, 0x3d, 0xc3, 0x55, 0x0e, 0x7a, 0x41, 0x44, 0xc3,
	0xe0, 0x1b, 0xa9, 0x83, 0x3f, 0x18, 0x07, 0x19, 0x19, 0x1d, 0xbc, 0x03, 0xad, 0x90, 0x4a, 0xa6,
	0x52, 0x27, 0xe1, 0x42, 0x84, 0x41, 0x74, 0x2c, 0xac, 0x9f, 0xad, 0x5d, 0x9c, 0xa3, 0xfb, 0xa9,
	0xa8, 0xb9, 0xa8, 0xa6, 0x36, 0x91, 0x91, 0x05, 0xd9, 0x83, 0x4d, 0xcc, 0x47, 0xa1, 0x0a, 0x81,
	0x9b, 0x30, 0x8f, 0x86, 0xde, 0x20, 0xa4, 0x32, 0xe0, 0x91, 0x8e, 0xe6, 0xe7, 0x6b, 0x3a, 0xab,
	0x94, 0x14, 0x56, 0x0b, 0xa7, 0x28, 0x83, 0xa1, 0xed, 0xc2, 0xb2, 0x09, 0xad, 0x1b, 0x72, 0xef,
	0xd8, 0x40, 0x5a, 0x58, 0xbf, 0x50, 0xd1, 0xcd, 0x3b, 0x44, 0x33, 0xf7, 0x14, 0x4f, 0xc3, 0x5a,
	0x90, 0x3b, 0xf0, 0xac, 0x51, 0x89, 0x59, 0xfa, 0xe3, 0x31, 0x93, 0xbb, 0x34, 0xa4, 0x91, 0xc7,
	0x84, 0xf5, 0x4b, 0xa5, 0x5c, 0x73, 0x36, 0xb4, 0xd8, 0x41, 0x2a, 0xa5, 0x72, 0x79, 0xcf, 0xc8,
	0x90, 0x2e, 0x2c, 0x19, 0x2b, 0x54, 0xaa, 0x3f, 0x18, 0x92, 0xb0, 0x7e, 0xa5, 0x6f, 0xe5, 0xe6,
	0xa4, 0x5b, 0x39, 0x60, 0x91, 0x1f, 0x44, 0xfd, 0xdb, 0xb9, 0x8e, 0xb9, 0x1e, 0x13, 0x69, 0x81,
	0x21, 0xc8, 0x3d, 0xb8, 0x1a, 0x27, 0xdc, 0x63, 0x42, 0x30, 0xdf, 0x8d, 0xf9, 0x43, 0x75, 0x47,
	0x2c, 0x88, 0xa5, 0x9b, 0x70, 0x2e, 0xd3, 0xec, 0xfd, 0xc9, 0x16, 0xfe, 0xd2, 0xcd, 0x4c, 0xf2,
	0x80, 0x3f, 0x74, 0xb4, 0x9c, 0xc3, 0xb9, 0x34, 0xc9, 0x3c, 0x80, 0x0d, 0x8f, 0x46, 0xbe, 0xaa,
	0x26, 0x6c, 0xc4, 0x94, 0xb0, 0x3e, 0xda, 0xc2, 0xb0, 0x5f, 0x9a, 0xf8, 0x98, 0xa9, 0xee, 0x01,
	0x7f, 0xb7, 0x60, 0xdc, 0xc4, 0x6e, 0x79, 0x39, 0xbb, 0xe8, 0x5b, 0x10, 0x1b, 0xe6, 0xfb, 0x2c,
	0x62, 0x22, 0x10, 0xae, 0xea, 0x12, 0xd6, 0x77, 0xaf, 0xe3, 0x8b, 0xd6, 0x0d, 0xf1, 0x7e, 0x70,
	0xc2, 0xc8, 0xe7, 0x61, 0xae, 0xc7, 0x93, 0x63, 0xd7, 0xa7, 0x92, 0x5a, 0xdf, 0x53, 0x02, 0xf5,
	0xce, 0x95, 0x49, 0x81, 0xdc, 0xe5, 0xc9, 0xf1, 0x1d, 0x2a, 0xa9, 0x33, 0xdb, 0x33, 0xff, 0x11,
	0x1b, 0x20, 0xaf, 0x7f, 0xd6, 0xf7, 0xdf, 0x52, 0xc5, 0x6c, 0xaf, 0x6a, 0x55, 0x9c, 0xb9, 0xac,
	0xf8, 0x91, 0x5b, 0xea, 0xb5, 0x84, 0x74, 0x87, 0xe0, 0xfe, 0x03, 0x25, 0x5c, 0x43, 0xe1, 0x96,
	0xe2, 0xdf, 0x2d, 0xc1, 0x3e, 0x55, 0x1a, 0x4a, 0xc2, 0x1f, 0x0e, 0x29, 0x95, 0x93, 0xb6, 0x0d,
	0xcd, 0x82, 0xbc, 0x4c, 0x18, 0x3d, 0xb6, 0x3e, 0xc8, 0x35, 0x1a, 0x79, 0x26, 0x22, 0x4f, 0x39,
	0xd1, 0x05, 0xf9, 0x68, 0xd0, 0xeb, 0x85, 0x41, 0xd4, 0xc7, 0xd2, 0x6c, 0x7d, 0x98, 0xff, 0x8c,
	0x16, 0xd6, 0xe5, 0x94, 0xad, 0x0a, 0x34, 0xb9, 0x03, 0x97, 0x7d, 0x16, 0x73, 0x11, 0x48, 0x51,
	0x00, 0x71, 0x10, 0xb9, 0x31, 0x4b, 0x02, 0xee, 0x5b, 0x3f, 0x7a, 0x4b, 0x01, 0x18, 0xb5, 0x9f,
	0x49, 0x05, 0x33, 0x18, 0xdf, 0x8b, 0x0e, 0x50, 0x8a, 0x30, 0x58, 0x8e, 0x35, 0x1c, 0xcb, 0x18,
	0xfe, 0xe8, 0x2d, 0x04, 0xc3, 0x8b, 0x93, 0xde, 0xe0, 0x76, 0xbf, 0x9f, 0xb0, 0x3e, 0x95, 0xcc,
	0x2f, 0xa0, 0x15, 0x9d, 0x2d, 0xc5, 0x23, 0xf0, 0x16, 0xf6, 0xb7, 0x60, 0x36, 0x7d, 0x35, 0x72,
	0x03, 0x9a, 0x71, 0xc2, 0x5c, 0x7c, 0xef, 0x53, 0x55, 0x38, 0x79, 0x64, 0x55, 0x10, 0x12, 0x8b,
	0x71, 0xc2, 0x94, 0xd8, 0x03, 0x4d, 0x25, 0xcf, 0x43, 0x2b, 0xe6, 0xea, 0xc5, 0x8a, 0xa2, 0xba,
	0x5b, 0x37, 0x14, 0xa3, 0x28, 0xbb, 0x61, 0x10, 0x84, 0xcf, 0xa3, 0x3b, 0x31, 0xc2, 0x43, 0x3d,
	0x88, 0xfd, 0x6d, 0xd8, 0xbc, 0x10, 0xbd, 0xe4, 0x0d, 0xb8, 0x3a, 0x39, 0x35, 0xd2, 0x2c, 0xab,
	0x60, 0x8b, 0xdc, 0x9c, 0x00, 0x74, 0x93, 0x64, 0xcb, 0x70, 0xe9, 0x94, 0x4b, 0x26, 0x4c, 0x9c,
	0xfa, 0x60, 0xff, 0xb9, 0x02, 0xd6, 0xa4, 0xb4, 0x27, 0xaf, 0x41, 0x0d, 0x71, 0x5f, 0x41, 0xd8,
	0x4f, 0x2c, 0xa6, 0x05, 0x45, 0x44, 0x3f, 0x2a, 0x91, 0x97, 0x60, 0x35, 0xa6, 0x89, 0x0c, 0xbc,
	0x20, 0xd6, 0x55, 0x33, 0xab, 0xfb, 0x55, 0x0c, 0x77, 0xa5, 0xc4, 0xcd, 0xca, 0xfe, 0x36, 0x34,
	0xbd, 0x81, 0x90, 0xdc, 0x3f, 0xcf, 0x15, 0xa6, 0xf4, 0xb8, 0x60, 0xe8, 0x99, 0xe8, 0x35, 0x58,
	0xc0, 0x86, 0x12, 0x44, 0x5e, 0x38, 0xf0, 0x99, 0x8f, 0x83, 0x49, 0xcd, 0x99, 0x57, 0xc4, 0x7b,
	0x86, 0x66, 0xff, 0xa9, 0x02, 0xf5, 0x42, 0x80, 0xff, 0xeb, 0xbf, 0x69, 0x07, 0x96, 0x68, 0x8a,
	0x60, 0x57, 0xb5, 0x69, 0x2a, 0x07, 0x09, 0x33, 0x23, 0x17, 0xc9, 0x58, 0x87, 0x29, 0xc7, 0xfe,
	0x4b, 0x15, 0x1a, 0x43, 0xc1, 0x12, 0x02, 0x35, 0x44, 0x9b, 0x06, 0x2f, 0xfe, 0xaf, 0x9e, 0x1f,
	0x27, 0x9b, 0xf4, 0xf9, 0xf1, 0x40, 0xda, 0xb0, 0xa4, 0x7f, 0x77, 0xa9, 0x43, 0x99, 0xe0, 0x5a,
	0x9a, 0x55, 0xe8, 0x4f, 0xa4, 0x03, 0x2b, 0x2c, 0xe6, 0xde, 0x91, 0xdb, 0xe5, 0x83, 0xc8, 0xa7,
	0xc9, 0x79, 0x79, 0x26, 0x5c, 0x42, 0xe6, 0x9e, 0xe1, 0x19, 0x9d, 0x17, 0x80, 0xe8, 0x51, 0xad,
	0xe4, 0xe2, 0x12, 0x2a, 0x34, 0x91, 0x53, 0xf4, 0xf0, 0x32, 0xac, 0x0d, 0xb7, 0xf3, 0x54, 0x65,
	0x5a, 0xdf, 0xf1, 0x50, 0xab, 0x36, 0x7a, 0x9f, 0x1a, 0x99, 0x47, 0x66, 0xc6, 0x8d, 0x23, 0x9f,
	0x81, 0xd5, 0x5c, 0xac, 0x14, 0xd0, 0x2c, 0x5a, 0x5f, 0xce, 0xb8, 0x85, 0xa0, 0xec, 0x0f, 0x6a,
	0xd0, 0x18, 0x1a, 0xeb, 0xc9, 0x2a, 0x4c, 0xc7, 0x83, 0xee, 0x31, 0x3b, 0x37, 0xe9, 0x67, 0x4e,
	0x0a, 0x23, 0x0f, 0x03, 0x79, 0xe4, 0x27, 0xf4, 0x21, 0x0d, 0x5d, 0x2f, 0x61, 0x3e, 0x8b, 0x64,
	0x40, 0x43, 0x91, 0x62, 0x24, 0xe7, 0xee, 0xe7, 0x4c, 0xf2, 0x59, 0xb0, 0x4c, 0xa3, 0xd0, 0x43,
	0xa0, 0x1a, 0xcf, 0xca, 0xcf, 0xb1, 0xaa, 0xf9, 0xfb, 0x19, 0xdb, 0xfc, 0xf2, 0xab, 0x30, 0x6f,
	0x34, 0xc5, 0x71, 0x10, 0x0b, 0x93, 0x05, 0x75, 0x4d, 0x3b, 0x54, 0x24, 0x62, 0xc1, 0x8c, 0x99,
	0x1f, 0xf0, 0xde, 0x6b, 0x4e, 0x7a, 0x24, 0x5f, 0x83, 0xba, 0x42, 0xce, 0x40, 0xb8, 0x1e, 0xf7,
	0x19, 0x5e, 0xf1, 0x62, 0xe7, 0xd5, 0xc7, 0x5c, 0x6d, 0xf0, 0xac, 0x8e, 0x38, 0xff, 0xec, 0x73,
	0x9f, 0x39, 0xa0, 0xad, 0xa9, 0xff, 0xc9, 0xab, 0xf0, 0x8c, 0x79, 0xca, 0xd4, 0x45, 0x61, 0xb7,
	0xd1, 0xaf, 0xb3, 0xaa, 0x05, 0x0e, 0xb5, 0x52, 0xbe, 0xd2, 0x6c, 0x02, 0x14, 0xf6, 0x97, 0x59,
	0x94, 0x9d, 0x63, 0xd9, 0xba, 0xb2, 0x0e, 0xd3, 0xda, 0xa4, 0x35, 0x97, 0x35, 0x2f, 0x43, 0xb1,
	0x43, 0x68, 0x8d, 0x84, 0x45, 0x56, 0x81, 0x64, 0xdd, 0xc4, 0x93, 0xc1, 0x29, 0xe6, 0x4a, 0xf3,
	0xff, 0x08, 0xc0, 0x34, 0x9e, 0x59, 0xb3, 0x42, 0xd6, 0x61, 0x55, 0x79, 0x60, 0xbe, 0xab, 0x5e,
	0x88, 0x0f, 0xcc, 0x08, 0x26, 0xcf, 0x9b, 0x55, 0xb2, 0x06, 0x4b, 0x05, 0x5e, 0xc6, 0x98, 0xb2,
	0x43, 0x58, 0x9b, 0x30, 0x7c, 0x93, 0xeb, 0xd0, 0xc8, 0x77, 0xaa, 0x20, 0xf2, 0xd9, 0x19, 0x22,
	0x65, 0xc1, 0x59, 0xcc, 0xc8, 0xf7, 0x14, 0x75, 0x42, 0x6a, 0xa6, 0x49, 0x3c, 0x95, 0x27, 0xb1,
	0xfd, 0x71, 0x15, 0x56, 0xc6, 0x36, 0x38, 0xb2, 0x5a, 0x4c, 0x79, 0xbc, 0x0f, 0x9d, 0xf6, 0x56,
	0xc9, 0x36, 0x32, 0x8c, 0xfd, 0xed, 0x91, 0x84, 0x99, 0xca, 0x44, 0x46, 0x92, 0x66, 0x79, 0x5c,
	0xd2, 0xe8, 0xa4, 0x47, 0x05, 0x32, 0x9a, 0x36, 0xe4, 0x05, 0x68, 0x0e, 0xe7, 0xbd, 0xce, 0x7a,
	0xd4, 0x58, 0x2c, 0x67, 0x3e, 0xd9, 0x81, 0x96, 0xee, 0xf3, 0x2c, 0xc9, 0x8b, 0xe4, 0x74, 0x26,
	0xde, 0x4c, 0x99, 0x59, 0xa5, 0x7c, 0x19, 0x56, 0x78, 0x37, 0x0c, 0xbe, 0x3e, 0x60, 0x6e, 0x4c,
	0x93, 0x34, 0x5b, 0x98, 0xb0, 0xd4, 0xae, 0xa4, 0x95, 0x96, 0x8c, 0xc0, 0x01, 0xf2, 0xdf, 0x40,
	0x36, 0xb9, 0x0e, 0x0b, 0xa5, 0x0a, 0x6b, 0xcd, 0x66, 0xe3, 0xc8, 0x7c, 0xb1, 0xbe, 0xda, 0x5f,
	0x80, 0x85, 0xc3, 0x98, 0x79, 0x01, 0x0d, 0xb3, 0x8c, 0xaf, 0x1d, 0x07, 0x91, 0xaf, 0x5f, 0x51,
	0xdf, 0xb1, 0x3a, 0x2b, 0x3a, 0xb6, 0x94, 0x6a, 0xe6, 0x18, 0xcf, 0xf6, 0x77, 0x2a, 0xd0, 0x18,
	0x5a, 0x34, 0xc6, 0x96, 0xe6, 0xf1, 0x05, 0xb2, 0x3a, 0xa1, 0x40, 0xbe, 0x38, 0xe6, 0x5a, 0xf5,
	0x42, 0x3d, 0xee, 0x5e, 0xed, 0xf7, 0x61, 0x75, 0xfc, 0xa6, 0x4b, 0x7c, 0x78, 0x86, 0xaa, 0x7f,
	0xdc, 0x31, 0x8b, 0xb4, 0xf9, 0xc6, 0xb1, 0xfd, 0xd8, 0xcb, 0xb3, 0xb3, 0x8a, 0xb6, 0x46, 0xe8,
	0xf6, 0x37, 0xa1, 0x35, 0x42, 0xcc, 0x11, 0x5f, 0x29, 0x22, 0xfe, 0x32, 0xcc, 0xe5, 0x01, 0xa8,
	0xcb, 0x5c, 0x70, 0x72, 0x82, 0x6a, 0x3d, 0x92, 0x4b, 0x1a, 0xba, 0x79, 0x52, 0x15, 0xbf, 0x6e,
	0x2c, 0x21, 0x33, 0x2b, 0x50, 0x58, 0x27, 0xec, 0xbf, 0x4e, 0xa5, 0xdf, 0x73, 0xf0, 0x42, 0xc6,
	0xde, 0xfe, 0x36, 0x34, 0x71, 0x69, 0x52, 0x06, 0xd3, 0x05, 0x0d, 0x5f, 0xd2, 0x69, 0xa4, 0xf4,
	0x74, 0x39, 0x7b, 0x1e, 0x5a, 0x66, 0x1d, 0x2c, 0x0c, 0x5f, 0xa6, 0x91, 0x23, 0xa3, 0x30, 0x6e,
	0xdd, 0x84, 0x65, 0x53, 0x95, 0x13, 0x76, 0xca, 0x68, 0x58, 0x6e, 0x94, 0x44, 0xf3, 0x1c, 0x64,
	0x19, 0x8d, 0xc7, 0x1a, 0xf5, 0x2e, 0x3d, 0xce, 0xa8, 0x77, 0x19, 0xe6, 0xf2, 0xd1, 0x61, 0x1a,
	0x7f, 0x4b, 0x4e, 0x50, 0x13, 0x50, 0x97, 0xfb, 0xe7, 0x58, 0x81, 0x2f, 0x98, 0x80, 0x0a, 0xf7,
	0xb6, 0xc7, 0xfd, 0x73, 0x07, 0x95, 0xc8, 0xe7, 0x60, 0x2e, 0xfb, 0xa2, 0x66, 0xfd, 0x4b, 0x9b,
	0x58, 0x6f, 0xeb, 0x8f, 0x6e, 0xed, 0xf4, 0xa3, 0x5b, 0xfb, 0x7e, 0x2a, 0xa2, 0x57, 0x9d, 0x4c,
	0x83, 0x3c, 0x80, 0xf9, 0xd2, 0x34, 0xff, 0xc9, 0xcc, 0xd3, 0x4e, 0xf3, 0x25, 0x3b, 0xf6, 0xbf,
	0xab, 0xd0, 0x18, 0x0a, 0x98, 0x7c, 0x71, 0xc8, 0x97, 0x86, 0xf4, 0xb5, 0xc7, 0x98, 0xf8, 0xca,
	0xc6, 0xc9, 0xbb, 0x40, 0xe2, 0x84, 0xc7, 0x5c, 0xb0, 0xc4, 0x15, 0x21, 0x15, 0x47, 0x41, 0xd4,
	0xd7, 0x18, 0xa9, 0x77, 0x6e, 0x4c, 0xdc, 0xa5, 0x8d, 0xc6, 0xa1, 0x51, 0x70, 0x5a, 0xf1, 0x10,
	0x45, 0x90, 0xb7, 0xa1, 0xe9, 0x51, 0x11, 0x97, 0xcc, 0x4e, 0xa1, 0xd9, 0xe7, 0x26, 0xef, 0xba,
	0x4a, 0x3e, 0x33, 0xda, 0xf0, 0x4a, 0x67, 0x41, 0x5e, 0x83, 0xd9, 0x74, 0xa7, 0xb2, 0x6a, 0x68,
	0x6a, 0x6b, 0x92, 0xa9, 0x3b, 0x5a, 0xce, 0xc9, 0x14, 0x48, 0x07, 0x2e, 0xa9, 0x2e, 0x27, 0xac,
	0x4b, 0xa8, 0x79, 0x79, 0x92, 0xe6, 0xeb, 0x67, 0x81, 0x74, 0xb4, 0xa8, 0xfd, 0xc7, 0x0a, 0xb4,
	0x8c, 0xa5, 0x03, 0x9a, 0xd0, 0x13, 0x26, 0x59, 0x22, 0x26, 0x0e, 0x47, 0x6d, 0x58, 0x8a, 0x13,
	0xce, 0x7b, 0x2e, 0xef, 0xb9, 0x31, 0x17, 0x82, 0x89, 0x6c, 0x75, 0x9a, 0xc7, 0x1b, 0xe2, 0xbd,
	0xaf, 0xf4, 0x0e, 0x32, 0x06, 0xd9, 0x83, 0xcd, 0xf1, 0xc3, 0x54, 0x39, 0xfb, 0x36, 0xc6, 0xce,
	0x54, 0x26, 0x1b, 0x2e, 0x9a, 0xac, 0x6a, 0x17, 0x4d, 0x56, 0x36, 0x05, 0xa2, 0x9f, 0x91, 0x86,
	0x6a, 0xe0, 0x66, 0xfe, 0x13, 0x4e, 0xd7, 0x57, 0x61, 0x7e, 0xcc, 0x58, 0x5d, 0xef, 0x16, 0x26,
	0xcb, 0xdf, 0x54, 0xa1, 0x85, 0xaf, 0x47, 0xbb, 0x21, 0x7b, 0xc0, 0x25, 0x43, 0x17, 0x0c, 0xae,
	0x8e, 0xd9, 0x02, 0xdc, 0x98, 0x7b, 0xee, 0x4d, 0x35, 0x4a, 0x04, 0x1e, 0x4b, 0xf1, 0x7c, 0xe1,
	0x37, 0xc7, 0xcd, 0xd1, 0x85, 0xe1, 0x80, 0x7b, 0x37, 0xef, 0x69, 0x0b, 0x17, 0xb9, 0xd9, 0xcd,
	0xdc, 0x54, 0x9f, 0xd6, 0xcd, 0x6e, 0xea, 0x26, 0x5d, 0xb9, 0xa6, 0x9e, 0x66, 0xe5, 0x7a, 0xe2,
	0x85, 0xe8, 0xc7, 0x15, 0xa8, 0x1b, 0x40, 0xe2, 0x5d, 0x7e, 0x15, 0x88, 0x01, 0xb8, 0x9a, 0x13,
	0x0c, 0x40, 0xcd, 0xfa, 0xb7, 0xfd, 0x88, 0xdc, 0xc8, 0x11, 0xed, 0xb4, 0xfc, 0x11, 0x90, 0xab,
	0x8d, 0x9a, 0x86, 0x03, 0x96, 0x6d, 0xd4, 0xea, 0xa0, 0x8a, 0x6f, 0x5e, 0x21, 0x75, 0x6f, 0xca,
	0x09, 0xf6, 0xaf, 0xab, 0xd0, 0x1c, 0x2e, 0x0d, 0x6a, 0x77, 0xc9, 0x0a, 0x4c, 0x71, 0x50, 0x5c,
	0x48, 0xa9, 0x7a, 0x4e, 0x74, 0xa0, 0x11, 0x1b, 0x38, 0xe2, 0xf7, 0x28, 0x77, 0x17, 0x3d, 0xd7,
	0x3b, 0xcf, 0x5f, 0x5c, 0x84, 0x8a, 0xe8, 0x4d, 0x6d, 0xd2, 0x50, 0x9d, 0x76, 0x55, 0x9b, 0xca,
	0x6c, 0xe6, 0x08, 0xd8, 0x35, 0x50, 0x25, 0x71, 0xc1, 0x00, 0xb2, 0x76, 0x47, 0xa3, 0xd0, 0x59,
	0xf4, 0x5f, 0x44, 0xd1, 0x99, 0x10, 0x45, 0xda, 0xed, 0x46, 0xa3, 0xe8, 0xd8, 0x1f, 0x56, 0x60,
	0xb1, 0x5c, 0x0b, 0xc9, 0x1e, 0xcc, 0xe0, 0x37, 0x0d, 0x77, 0xf7, 0x51, 0xaf, 0x3b, 0x92, 0x70,
	0xce, 0x34, 0x6a, 0xee, 0xe6, 0x36, 0x3a, 0xe6, 0x6a, 0x9f, 0xd8, 0x46, 0xc7, 0xfe, 0x69, 0x05,
	0x66, 0x0c, 0x7e, 0xd4, 0xd0, 0x72, 0xc2, 0x92, 0xe3, 0x90, 0xb9, 0xdd, 0x84, 0x46, 0xde, 0x51,
	0x36, 0x61, 0x54, 0xb0, 0x2b, 0x2f, 0x69, 0xe6, 0x1e, 0xf2, 0x0a, 0x53, 0x86, 0xd1, 0x91, 0x09,
	0x63, 0x06, 0x10, 0xe6, 0xe3, 0x92, 0x66, 0xdc, 0x4f, 0x18, 0xd3, 0x90, 0xb8, 0x0b, 0xf3, 0x29,
	0xb8, 0x0b, 0x29, 0x76, 0xed, 0x11, 0xb0, 0xc6, 0x70, 0xeb, 0x7e, 0x7e, 0xb0, 0x29, 0xd4, 0x54,
	0x51, 0x1f, 0x5b, 0xdb, 0xc6, 0xec, 0x31, 0x3a, 0x9a, 0xe1, 0x3d, 0xa6, 0x34, 0x76, 0x68, 0x00,
	0xe5, 0x84, 0xee, 0x34, 0x4e, 0x07, 0xb7, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff, 0xaa, 0xee, 0x50,
	0xc3, 0xdb, 0x1b, 0x00, 0x00,
}
