// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/beacon/rpc/v1/services.proto

package ethereum_beacon_rpc_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import v1 "github.com/prysmaticlabs/prysm/proto/beacon/p2p/v1"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ShuffleRequest struct {
	CrystallizedStateHash []byte   `protobuf:"bytes,1,opt,name=crystallized_state_hash,json=crystallizedStateHash,proto3" json:"crystallized_state_hash,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *ShuffleRequest) Reset()         { *m = ShuffleRequest{} }
func (m *ShuffleRequest) String() string { return proto.CompactTextString(m) }
func (*ShuffleRequest) ProtoMessage()    {}
func (*ShuffleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_d88107a8226af8b2, []int{0}
}
func (m *ShuffleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShuffleRequest.Unmarshal(m, b)
}
func (m *ShuffleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShuffleRequest.Marshal(b, m, deterministic)
}
func (dst *ShuffleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShuffleRequest.Merge(dst, src)
}
func (m *ShuffleRequest) XXX_Size() int {
	return xxx_messageInfo_ShuffleRequest.Size(m)
}
func (m *ShuffleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShuffleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShuffleRequest proto.InternalMessageInfo

func (m *ShuffleRequest) GetCrystallizedStateHash() []byte {
	if m != nil {
		return m.CrystallizedStateHash
	}
	return nil
}

type ShuffleResponse struct {
	ShuffledValidatorIndices []uint64 `protobuf:"varint,1,rep,packed,name=shuffled_validator_indices,json=shuffledValidatorIndices,proto3" json:"shuffled_validator_indices,omitempty"`
	CutoffIndices            []uint64 `protobuf:"varint,2,rep,packed,name=cutoff_indices,json=cutoffIndices,proto3" json:"cutoff_indices,omitempty"`
	AssignedAttestationSlots []uint64 `protobuf:"varint,3,rep,packed,name=assigned_attestation_slots,json=assignedAttestationSlots,proto3" json:"assigned_attestation_slots,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *ShuffleResponse) Reset()         { *m = ShuffleResponse{} }
func (m *ShuffleResponse) String() string { return proto.CompactTextString(m) }
func (*ShuffleResponse) ProtoMessage()    {}
func (*ShuffleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_d88107a8226af8b2, []int{1}
}
func (m *ShuffleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShuffleResponse.Unmarshal(m, b)
}
func (m *ShuffleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShuffleResponse.Marshal(b, m, deterministic)
}
func (dst *ShuffleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShuffleResponse.Merge(dst, src)
}
func (m *ShuffleResponse) XXX_Size() int {
	return xxx_messageInfo_ShuffleResponse.Size(m)
}
func (m *ShuffleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShuffleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShuffleResponse proto.InternalMessageInfo

func (m *ShuffleResponse) GetShuffledValidatorIndices() []uint64 {
	if m != nil {
		return m.ShuffledValidatorIndices
	}
	return nil
}

func (m *ShuffleResponse) GetCutoffIndices() []uint64 {
	if m != nil {
		return m.CutoffIndices
	}
	return nil
}

func (m *ShuffleResponse) GetAssignedAttestationSlots() []uint64 {
	if m != nil {
		return m.AssignedAttestationSlots
	}
	return nil
}

type ProposeRequest struct {
	ParentHash              []byte               `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	SlotNumber              uint64               `protobuf:"varint,2,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
	RandaoReveal            []byte               `protobuf:"bytes,3,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty"`
	AttestationBitmask      []byte               `protobuf:"bytes,4,opt,name=attestation_bitmask,json=attestationBitmask,proto3" json:"attestation_bitmask,omitempty"`
	AttestationAggregateSig []uint32             `protobuf:"varint,5,rep,packed,name=attestation_aggregate_sig,json=attestationAggregateSig,proto3" json:"attestation_aggregate_sig,omitempty"`
	Timestamp               *timestamp.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral    struct{}             `json:"-"`
	XXX_unrecognized        []byte               `json:"-"`
	XXX_sizecache           int32                `json:"-"`
}

func (m *ProposeRequest) Reset()         { *m = ProposeRequest{} }
func (m *ProposeRequest) String() string { return proto.CompactTextString(m) }
func (*ProposeRequest) ProtoMessage()    {}
func (*ProposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_d88107a8226af8b2, []int{2}
}
func (m *ProposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeRequest.Unmarshal(m, b)
}
func (m *ProposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeRequest.Marshal(b, m, deterministic)
}
func (dst *ProposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeRequest.Merge(dst, src)
}
func (m *ProposeRequest) XXX_Size() int {
	return xxx_messageInfo_ProposeRequest.Size(m)
}
func (m *ProposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeRequest proto.InternalMessageInfo

func (m *ProposeRequest) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *ProposeRequest) GetSlotNumber() uint64 {
	if m != nil {
		return m.SlotNumber
	}
	return 0
}

func (m *ProposeRequest) GetRandaoReveal() []byte {
	if m != nil {
		return m.RandaoReveal
	}
	return nil
}

func (m *ProposeRequest) GetAttestationBitmask() []byte {
	if m != nil {
		return m.AttestationBitmask
	}
	return nil
}

func (m *ProposeRequest) GetAttestationAggregateSig() []uint32 {
	if m != nil {
		return m.AttestationAggregateSig
	}
	return nil
}

func (m *ProposeRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ProposeResponse struct {
	BlockHash            []byte   `protobuf:"bytes,1,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProposeResponse) Reset()         { *m = ProposeResponse{} }
func (m *ProposeResponse) String() string { return proto.CompactTextString(m) }
func (*ProposeResponse) ProtoMessage()    {}
func (*ProposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_d88107a8226af8b2, []int{3}
}
func (m *ProposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposeResponse.Unmarshal(m, b)
}
func (m *ProposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposeResponse.Marshal(b, m, deterministic)
}
func (dst *ProposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposeResponse.Merge(dst, src)
}
func (m *ProposeResponse) XXX_Size() int {
	return xxx_messageInfo_ProposeResponse.Size(m)
}
func (m *ProposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProposeResponse proto.InternalMessageInfo

func (m *ProposeResponse) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type AttestRequest struct {
	Attestation          *v1.AttestationRecord `protobuf:"bytes,1,opt,name=attestation,proto3" json:"attestation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *AttestRequest) Reset()         { *m = AttestRequest{} }
func (m *AttestRequest) String() string { return proto.CompactTextString(m) }
func (*AttestRequest) ProtoMessage()    {}
func (*AttestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_d88107a8226af8b2, []int{4}
}
func (m *AttestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestRequest.Unmarshal(m, b)
}
func (m *AttestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestRequest.Marshal(b, m, deterministic)
}
func (dst *AttestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestRequest.Merge(dst, src)
}
func (m *AttestRequest) XXX_Size() int {
	return xxx_messageInfo_AttestRequest.Size(m)
}
func (m *AttestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AttestRequest proto.InternalMessageInfo

func (m *AttestRequest) GetAttestation() *v1.AttestationRecord {
	if m != nil {
		return m.Attestation
	}
	return nil
}

type AttestResponse struct {
	AttestationHash      []byte   `protobuf:"bytes,1,opt,name=attestation_hash,json=attestationHash,proto3" json:"attestation_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestResponse) Reset()         { *m = AttestResponse{} }
func (m *AttestResponse) String() string { return proto.CompactTextString(m) }
func (*AttestResponse) ProtoMessage()    {}
func (*AttestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_d88107a8226af8b2, []int{5}
}
func (m *AttestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestResponse.Unmarshal(m, b)
}
func (m *AttestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestResponse.Marshal(b, m, deterministic)
}
func (dst *AttestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestResponse.Merge(dst, src)
}
func (m *AttestResponse) XXX_Size() int {
	return xxx_messageInfo_AttestResponse.Size(m)
}
func (m *AttestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttestResponse proto.InternalMessageInfo

func (m *AttestResponse) GetAttestationHash() []byte {
	if m != nil {
		return m.AttestationHash
	}
	return nil
}

func init() {
	proto.RegisterType((*ShuffleRequest)(nil), "ethereum.beacon.rpc.v1.ShuffleRequest")
	proto.RegisterType((*ShuffleResponse)(nil), "ethereum.beacon.rpc.v1.ShuffleResponse")
	proto.RegisterType((*ProposeRequest)(nil), "ethereum.beacon.rpc.v1.ProposeRequest")
	proto.RegisterType((*ProposeResponse)(nil), "ethereum.beacon.rpc.v1.ProposeResponse")
	proto.RegisterType((*AttestRequest)(nil), "ethereum.beacon.rpc.v1.AttestRequest")
	proto.RegisterType((*AttestResponse)(nil), "ethereum.beacon.rpc.v1.AttestResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BeaconServiceClient is the client API for BeaconService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BeaconServiceClient interface {
	LatestBeaconBlock(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconService_LatestBeaconBlockClient, error)
	LatestCrystallizedState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconService_LatestCrystallizedStateClient, error)
	FetchShuffledValidatorIndices(ctx context.Context, in *ShuffleRequest, opts ...grpc.CallOption) (*ShuffleResponse, error)
}

type beaconServiceClient struct {
	cc *grpc.ClientConn
}

func NewBeaconServiceClient(cc *grpc.ClientConn) BeaconServiceClient {
	return &beaconServiceClient{cc}
}

func (c *beaconServiceClient) LatestBeaconBlock(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconService_LatestBeaconBlockClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BeaconService_serviceDesc.Streams[0], "/ethereum.beacon.rpc.v1.BeaconService/LatestBeaconBlock", opts...)
	if err != nil {
		return nil, err
	}
	x := &beaconServiceLatestBeaconBlockClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BeaconService_LatestBeaconBlockClient interface {
	Recv() (*v1.BeaconBlock, error)
	grpc.ClientStream
}

type beaconServiceLatestBeaconBlockClient struct {
	grpc.ClientStream
}

func (x *beaconServiceLatestBeaconBlockClient) Recv() (*v1.BeaconBlock, error) {
	m := new(v1.BeaconBlock)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *beaconServiceClient) LatestCrystallizedState(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconService_LatestCrystallizedStateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BeaconService_serviceDesc.Streams[1], "/ethereum.beacon.rpc.v1.BeaconService/LatestCrystallizedState", opts...)
	if err != nil {
		return nil, err
	}
	x := &beaconServiceLatestCrystallizedStateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BeaconService_LatestCrystallizedStateClient interface {
	Recv() (*v1.CrystallizedState, error)
	grpc.ClientStream
}

type beaconServiceLatestCrystallizedStateClient struct {
	grpc.ClientStream
}

func (x *beaconServiceLatestCrystallizedStateClient) Recv() (*v1.CrystallizedState, error) {
	m := new(v1.CrystallizedState)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *beaconServiceClient) FetchShuffledValidatorIndices(ctx context.Context, in *ShuffleRequest, opts ...grpc.CallOption) (*ShuffleResponse, error) {
	out := new(ShuffleResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.BeaconService/FetchShuffledValidatorIndices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BeaconServiceServer is the server API for BeaconService service.
type BeaconServiceServer interface {
	LatestBeaconBlock(*empty.Empty, BeaconService_LatestBeaconBlockServer) error
	LatestCrystallizedState(*empty.Empty, BeaconService_LatestCrystallizedStateServer) error
	FetchShuffledValidatorIndices(context.Context, *ShuffleRequest) (*ShuffleResponse, error)
}

func RegisterBeaconServiceServer(s *grpc.Server, srv BeaconServiceServer) {
	s.RegisterService(&_BeaconService_serviceDesc, srv)
}

func _BeaconService_LatestBeaconBlock_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BeaconServiceServer).LatestBeaconBlock(m, &beaconServiceLatestBeaconBlockServer{stream})
}

type BeaconService_LatestBeaconBlockServer interface {
	Send(*v1.BeaconBlock) error
	grpc.ServerStream
}

type beaconServiceLatestBeaconBlockServer struct {
	grpc.ServerStream
}

func (x *beaconServiceLatestBeaconBlockServer) Send(m *v1.BeaconBlock) error {
	return x.ServerStream.SendMsg(m)
}

func _BeaconService_LatestCrystallizedState_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BeaconServiceServer).LatestCrystallizedState(m, &beaconServiceLatestCrystallizedStateServer{stream})
}

type BeaconService_LatestCrystallizedStateServer interface {
	Send(*v1.CrystallizedState) error
	grpc.ServerStream
}

type beaconServiceLatestCrystallizedStateServer struct {
	grpc.ServerStream
}

func (x *beaconServiceLatestCrystallizedStateServer) Send(m *v1.CrystallizedState) error {
	return x.ServerStream.SendMsg(m)
}

func _BeaconService_FetchShuffledValidatorIndices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShuffleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BeaconServiceServer).FetchShuffledValidatorIndices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.BeaconService/FetchShuffledValidatorIndices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BeaconServiceServer).FetchShuffledValidatorIndices(ctx, req.(*ShuffleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BeaconService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.BeaconService",
	HandlerType: (*BeaconServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FetchShuffledValidatorIndices",
			Handler:    _BeaconService_FetchShuffledValidatorIndices_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LatestBeaconBlock",
			Handler:       _BeaconService_LatestBeaconBlock_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "LatestCrystallizedState",
			Handler:       _BeaconService_LatestCrystallizedState_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}

// AttesterServiceClient is the client API for AttesterService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AttesterServiceClient interface {
	AttestHead(ctx context.Context, in *AttestRequest, opts ...grpc.CallOption) (*AttestResponse, error)
}

type attesterServiceClient struct {
	cc *grpc.ClientConn
}

func NewAttesterServiceClient(cc *grpc.ClientConn) AttesterServiceClient {
	return &attesterServiceClient{cc}
}

func (c *attesterServiceClient) AttestHead(ctx context.Context, in *AttestRequest, opts ...grpc.CallOption) (*AttestResponse, error) {
	out := new(AttestResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.AttesterService/AttestHead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AttesterServiceServer is the server API for AttesterService service.
type AttesterServiceServer interface {
	AttestHead(context.Context, *AttestRequest) (*AttestResponse, error)
}

func RegisterAttesterServiceServer(s *grpc.Server, srv AttesterServiceServer) {
	s.RegisterService(&_AttesterService_serviceDesc, srv)
}

func _AttesterService_AttestHead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AttestRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AttesterServiceServer).AttestHead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.AttesterService/AttestHead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AttesterServiceServer).AttestHead(ctx, req.(*AttestRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AttesterService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.AttesterService",
	HandlerType: (*AttesterServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AttestHead",
			Handler:    _AttesterService_AttestHead_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}

// ProposerServiceClient is the client API for ProposerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ProposerServiceClient interface {
	ProposeBlock(ctx context.Context, in *ProposeRequest, opts ...grpc.CallOption) (*ProposeResponse, error)
}

type proposerServiceClient struct {
	cc *grpc.ClientConn
}

func NewProposerServiceClient(cc *grpc.ClientConn) ProposerServiceClient {
	return &proposerServiceClient{cc}
}

func (c *proposerServiceClient) ProposeBlock(ctx context.Context, in *ProposeRequest, opts ...grpc.CallOption) (*ProposeResponse, error) {
	out := new(ProposeResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.ProposerService/ProposeBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProposerServiceServer is the server API for ProposerService service.
type ProposerServiceServer interface {
	ProposeBlock(context.Context, *ProposeRequest) (*ProposeResponse, error)
}

func RegisterProposerServiceServer(s *grpc.Server, srv ProposerServiceServer) {
	s.RegisterService(&_ProposerService_serviceDesc, srv)
}

func _ProposerService_ProposeBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProposerServiceServer).ProposeBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.ProposerService/ProposeBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProposerServiceServer).ProposeBlock(ctx, req.(*ProposeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProposerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.ProposerService",
	HandlerType: (*ProposerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProposeBlock",
			Handler:    _ProposerService_ProposeBlock_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/beacon/rpc/v1/services.proto",
}

func init() {
	proto.RegisterFile("proto/beacon/rpc/v1/services.proto", fileDescriptor_services_d88107a8226af8b2)
}

var fileDescriptor_services_d88107a8226af8b2 = []byte{
	// 637 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0x95, 0x93, 0xde, 0x4a, 0x9d, 0x34, 0xc9, 0xbd, 0x7b, 0x75, 0x5b, 0x5f, 0xa3, 0xaa, 0x51,
	0xaa, 0x96, 0xf4, 0xc5, 0x6e, 0x83, 0x84, 0x10, 0xf4, 0xa5, 0x45, 0xa0, 0x22, 0x10, 0x42, 0x0e,
	0xe2, 0x05, 0x84, 0xb5, 0xb1, 0x27, 0x8e, 0x55, 0xdb, 0x6b, 0x76, 0x37, 0x91, 0xca, 0xc7, 0xf0,
	0x15, 0xf0, 0x7f, 0x68, 0xbd, 0xb1, 0xbb, 0x49, 0xb1, 0xfa, 0xe8, 0x73, 0xce, 0xcc, 0xce, 0x9c,
	0x99, 0x31, 0x0c, 0x0b, 0xce, 0x24, 0xf3, 0xa6, 0x48, 0x43, 0x96, 0x7b, 0xbc, 0x08, 0xbd, 0xe5,
	0xb9, 0x27, 0x90, 0x2f, 0x93, 0x10, 0x85, 0x5b, 0x92, 0x64, 0x0f, 0xe5, 0x1c, 0x39, 0x2e, 0x32,
	0x57, 0xcb, 0x5c, 0x5e, 0x84, 0xee, 0xf2, 0xdc, 0x59, 0x8f, 0x2d, 0xc6, 0x85, 0x8a, 0xcd, 0x50,
	0x08, 0x1a, 0x57, 0xb1, 0xce, 0xa3, 0x98, 0xb1, 0x38, 0x45, 0xaf, 0xfc, 0x9a, 0x2e, 0x66, 0x1e,
	0x66, 0x85, 0xbc, 0x5d, 0x91, 0x87, 0x9b, 0xa4, 0x4c, 0x32, 0x14, 0x92, 0x66, 0x85, 0x16, 0x0c,
	0xaf, 0xa1, 0x37, 0x99, 0x2f, 0x66, 0xb3, 0x14, 0x7d, 0xfc, 0xb6, 0x40, 0x21, 0xc9, 0x53, 0xd8,
	0x0f, 0xf9, 0xad, 0x90, 0x34, 0x4d, 0x93, 0xef, 0x18, 0x05, 0x42, 0x52, 0x89, 0xc1, 0x9c, 0x8a,
	0xb9, 0x6d, 0x0d, 0xac, 0xd1, 0xae, 0xff, 0x9f, 0x49, 0x4f, 0x14, 0x7b, 0x4d, 0xc5, 0x7c, 0xf8,
	0xd3, 0x82, 0x7e, 0x9d, 0x4a, 0x14, 0x2c, 0x17, 0x48, 0x2e, 0xc0, 0x11, 0x1a, 0x8a, 0x82, 0x25,
	0x4d, 0x93, 0x88, 0x4a, 0xc6, 0x83, 0x24, 0x8f, 0x54, 0xef, 0xb6, 0x35, 0x68, 0x8f, 0xb6, 0x7c,
	0xbb, 0x52, 0x7c, 0xaa, 0x04, 0x6f, 0x34, 0x4f, 0x8e, 0xa1, 0x17, 0x2e, 0x24, 0x9b, 0xcd, 0xea,
	0x88, 0x56, 0x19, 0xd1, 0xd5, 0x68, 0x25, 0xbb, 0x00, 0x87, 0x0a, 0x91, 0xc4, 0x39, 0x46, 0x01,
	0x95, 0x52, 0xb5, 0x27, 0x13, 0x96, 0x07, 0x22, 0x65, 0x52, 0xd8, 0x6d, 0xfd, 0x48, 0xa5, 0xb8,
	0xbc, 0x13, 0x4c, 0x14, 0x3f, 0xfc, 0xd1, 0x82, 0xde, 0x07, 0xce, 0x0a, 0x26, 0x6a, 0x07, 0x0e,
	0xa1, 0x53, 0x50, 0x8e, 0xb9, 0x34, 0xbb, 0x06, 0x0d, 0xa9, 0x56, 0x95, 0x40, 0x25, 0x0f, 0xf2,
	0x45, 0x36, 0x45, 0x6e, 0xb7, 0x06, 0xd6, 0x68, 0xcb, 0x07, 0x05, 0xbd, 0x2f, 0x11, 0x72, 0x04,
	0x5d, 0x4e, 0xf3, 0x88, 0xb2, 0x80, 0xe3, 0x12, 0x69, 0x6a, 0xb7, 0xcb, 0x1c, 0xbb, 0x1a, 0xf4,
	0x4b, 0x8c, 0x78, 0xf0, 0xaf, 0x59, 0xee, 0x34, 0x91, 0x19, 0x15, 0x37, 0xf6, 0x56, 0x29, 0x25,
	0x06, 0x75, 0xa5, 0x19, 0xf2, 0x1c, 0xfe, 0x37, 0x03, 0x68, 0x1c, 0x73, 0x8c, 0xd5, 0x70, 0x44,
	0x12, 0xdb, 0x7f, 0x0d, 0xda, 0xa3, 0xae, 0xbf, 0x6f, 0x08, 0x2e, 0x2b, 0x7e, 0x92, 0xc4, 0xe4,
	0x19, 0xec, 0xd4, 0xa3, 0xb7, 0xb7, 0x07, 0xd6, 0xa8, 0x33, 0x76, 0x5c, 0xbd, 0x1c, 0x6e, 0xb5,
	0x1c, 0xee, 0xc7, 0x4a, 0xe1, 0xdf, 0x89, 0x87, 0x67, 0xd0, 0xaf, 0xfd, 0x59, 0x8d, 0xf5, 0x00,
	0x60, 0x9a, 0xb2, 0xf0, 0xc6, 0xf4, 0x67, 0xa7, 0x44, 0xca, 0x4d, 0xf8, 0x02, 0x5d, 0x6d, 0x73,
	0x65, 0xe8, 0x5b, 0xe8, 0x18, 0x75, 0x95, 0x01, 0x9d, 0xf1, 0xa9, 0xbb, 0xb9, 0xf4, 0xc5, 0xb8,
	0x70, 0x97, 0xe7, 0xae, 0x31, 0x22, 0x1f, 0x43, 0xc6, 0x23, 0xdf, 0x8c, 0x1e, 0xbe, 0x80, 0x5e,
	0x95, 0x7d, 0x55, 0xce, 0x29, 0xfc, 0x6d, 0xfa, 0x62, 0x14, 0xd5, 0x37, 0x70, 0x55, 0xda, 0xf8,
	0x57, 0x0b, 0xba, 0x57, 0xe5, 0x6b, 0x13, 0x7d, 0x81, 0xc4, 0x87, 0x7f, 0xde, 0x51, 0x25, 0xd2,
	0xf0, 0x95, 0xea, 0x82, 0xec, 0xdd, 0xb3, 0xe6, 0x95, 0x3a, 0x2a, 0xe7, 0xa8, 0xa9, 0x66, 0x23,
	0xf8, 0xcc, 0x22, 0x5f, 0x61, 0x5f, 0xe7, 0x7c, 0xb9, 0x79, 0x29, 0x8d, 0x99, 0x1b, 0xdd, 0xb8,
	0x97, 0xe2, 0xcc, 0x22, 0x05, 0x1c, 0xbc, 0x46, 0x19, 0xce, 0x27, 0x4d, 0x97, 0x73, 0xe2, 0xfe,
	0xf9, 0x87, 0xe2, 0xae, 0xdf, 0xba, 0xf3, 0xf8, 0x41, 0x9d, 0xb6, 0x78, 0x9c, 0x43, 0x5f, 0x9b,
	0x8e, 0xbc, 0x32, 0xee, 0x33, 0x80, 0x86, 0xae, 0x91, 0x46, 0xe4, 0xb8, 0x29, 0xd3, 0xda, 0x26,
	0x38, 0x27, 0x0f, 0xc9, 0x56, 0xef, 0xf1, 0x7a, 0xe9, 0xea, 0xf7, 0x02, 0xd8, 0x5d, 0x41, 0x7a,
	0x46, 0x8d, 0xa9, 0xd6, 0xaf, 0xb9, 0xb9, 0xc7, 0x8d, 0xad, 0x9e, 0x6e, 0x97, 0x23, 0x79, 0xf2,
	0x3b, 0x00, 0x00, 0xff, 0xff, 0x2d, 0x42, 0x6a, 0x89, 0xb1, 0x05, 0x00, 0x00,
}
