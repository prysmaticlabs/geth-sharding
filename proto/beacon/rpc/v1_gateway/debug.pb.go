// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: proto/beacon/rpc/v1/debug.proto

package ethereum_beacon_rpc_v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/prysmaticlabs/prysm/proto/beacon/p2p/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LoggingLevelRequest_Level int32

const (
	LoggingLevelRequest_INFO  LoggingLevelRequest_Level = 0
	LoggingLevelRequest_DEBUG LoggingLevelRequest_Level = 1
	LoggingLevelRequest_TRACE LoggingLevelRequest_Level = 2
)

// Enum value maps for LoggingLevelRequest_Level.
var (
	LoggingLevelRequest_Level_name = map[int32]string{
		0: "INFO",
		1: "DEBUG",
		2: "TRACE",
	}
	LoggingLevelRequest_Level_value = map[string]int32{
		"INFO":  0,
		"DEBUG": 1,
		"TRACE": 2,
	}
)

func (x LoggingLevelRequest_Level) Enum() *LoggingLevelRequest_Level {
	p := new(LoggingLevelRequest_Level)
	*p = x
	return p
}

func (x LoggingLevelRequest_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoggingLevelRequest_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_beacon_rpc_v1_debug_proto_enumTypes[0].Descriptor()
}

func (LoggingLevelRequest_Level) Type() protoreflect.EnumType {
	return &file_proto_beacon_rpc_v1_debug_proto_enumTypes[0]
}

func (x LoggingLevelRequest_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoggingLevelRequest_Level.Descriptor instead.
func (LoggingLevelRequest_Level) EnumDescriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{3, 0}
}

type BeaconStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to QueryFilter:
	//	*BeaconStateRequest_Slot
	//	*BeaconStateRequest_BlockRoot
	QueryFilter isBeaconStateRequest_QueryFilter `protobuf_oneof:"query_filter"`
}

func (x *BeaconStateRequest) Reset() {
	*x = BeaconStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconStateRequest) ProtoMessage() {}

func (x *BeaconStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconStateRequest.ProtoReflect.Descriptor instead.
func (*BeaconStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{0}
}

func (m *BeaconStateRequest) GetQueryFilter() isBeaconStateRequest_QueryFilter {
	if m != nil {
		return m.QueryFilter
	}
	return nil
}

func (x *BeaconStateRequest) GetSlot() uint64 {
	if x, ok := x.GetQueryFilter().(*BeaconStateRequest_Slot); ok {
		return x.Slot
	}
	return 0
}

func (x *BeaconStateRequest) GetBlockRoot() []byte {
	if x, ok := x.GetQueryFilter().(*BeaconStateRequest_BlockRoot); ok {
		return x.BlockRoot
	}
	return nil
}

type isBeaconStateRequest_QueryFilter interface {
	isBeaconStateRequest_QueryFilter()
}

type BeaconStateRequest_Slot struct {
	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3,oneof"`
}

type BeaconStateRequest_BlockRoot struct {
	BlockRoot []byte `protobuf:"bytes,2,opt,name=block_root,json=blockRoot,proto3,oneof"`
}

func (*BeaconStateRequest_Slot) isBeaconStateRequest_QueryFilter() {}

func (*BeaconStateRequest_BlockRoot) isBeaconStateRequest_QueryFilter() {}

type BlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot []byte `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`
}

func (x *BlockRequest) Reset() {
	*x = BlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequest) ProtoMessage() {}

func (x *BlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequest.ProtoReflect.Descriptor instead.
func (*BlockRequest) Descriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{1}
}

func (x *BlockRequest) GetBlockRoot() []byte {
	if x != nil {
		return x.BlockRoot
	}
	return nil
}

type SSZResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *SSZResponse) Reset() {
	*x = SSZResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSZResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSZResponse) ProtoMessage() {}

func (x *SSZResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSZResponse.ProtoReflect.Descriptor instead.
func (*SSZResponse) Descriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{2}
}

func (x *SSZResponse) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

type LoggingLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level LoggingLevelRequest_Level `protobuf:"varint,1,opt,name=level,proto3,enum=ethereum.beacon.rpc.v1.LoggingLevelRequest_Level" json:"level,omitempty"`
}

func (x *LoggingLevelRequest) Reset() {
	*x = LoggingLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingLevelRequest) ProtoMessage() {}

func (x *LoggingLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingLevelRequest.ProtoReflect.Descriptor instead.
func (*LoggingLevelRequest) Descriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{3}
}

func (x *LoggingLevelRequest) GetLevel() LoggingLevelRequest_Level {
	if x != nil {
		return x.Level
	}
	return LoggingLevelRequest_INFO
}

type ProtoArrayForkChoiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PruneThreshold  uint64            `protobuf:"varint,1,opt,name=prune_threshold,json=pruneThreshold,proto3" json:"prune_threshold,omitempty"`
	JustifiedEpoch  uint64            `protobuf:"varint,2,opt,name=justified_epoch,json=justifiedEpoch,proto3" json:"justified_epoch,omitempty"`
	FinalizedEpoch  uint64            `protobuf:"varint,3,opt,name=finalized_epoch,json=finalizedEpoch,proto3" json:"finalized_epoch,omitempty"`
	ProtoArrayNodes []*ProtoArrayNode `protobuf:"bytes,4,rep,name=proto_array_nodes,json=protoArrayNodes,proto3" json:"proto_array_nodes,omitempty"`
	Indices         map[string]uint64 `protobuf:"bytes,5,rep,name=indices,proto3" json:"indices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoArrayForkChoiceResponse) Reset() {
	*x = ProtoArrayForkChoiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoArrayForkChoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoArrayForkChoiceResponse) ProtoMessage() {}

func (x *ProtoArrayForkChoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoArrayForkChoiceResponse.ProtoReflect.Descriptor instead.
func (*ProtoArrayForkChoiceResponse) Descriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoArrayForkChoiceResponse) GetPruneThreshold() uint64 {
	if x != nil {
		return x.PruneThreshold
	}
	return 0
}

func (x *ProtoArrayForkChoiceResponse) GetJustifiedEpoch() uint64 {
	if x != nil {
		return x.JustifiedEpoch
	}
	return 0
}

func (x *ProtoArrayForkChoiceResponse) GetFinalizedEpoch() uint64 {
	if x != nil {
		return x.FinalizedEpoch
	}
	return 0
}

func (x *ProtoArrayForkChoiceResponse) GetProtoArrayNodes() []*ProtoArrayNode {
	if x != nil {
		return x.ProtoArrayNodes
	}
	return nil
}

func (x *ProtoArrayForkChoiceResponse) GetIndices() map[string]uint64 {
	if x != nil {
		return x.Indices
	}
	return nil
}

type ProtoArrayNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot           uint64 `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Root           []byte `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
	Parent         uint64 `protobuf:"varint,3,opt,name=parent,proto3" json:"parent,omitempty"`
	JustifiedEpoch uint64 `protobuf:"varint,4,opt,name=justified_epoch,json=justifiedEpoch,proto3" json:"justified_epoch,omitempty"`
	FinalizedEpoch uint64 `protobuf:"varint,5,opt,name=finalized_epoch,json=finalizedEpoch,proto3" json:"finalized_epoch,omitempty"`
	Weight         uint64 `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	BestChild      uint64 `protobuf:"varint,7,opt,name=best_child,json=bestChild,proto3" json:"best_child,omitempty"`
	BestDescendant uint64 `protobuf:"varint,8,opt,name=best_descendant,json=bestDescendant,proto3" json:"best_descendant,omitempty"`
}

func (x *ProtoArrayNode) Reset() {
	*x = ProtoArrayNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoArrayNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoArrayNode) ProtoMessage() {}

func (x *ProtoArrayNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_beacon_rpc_v1_debug_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoArrayNode.ProtoReflect.Descriptor instead.
func (*ProtoArrayNode) Descriptor() ([]byte, []int) {
	return file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoArrayNode) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

func (x *ProtoArrayNode) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *ProtoArrayNode) GetParent() uint64 {
	if x != nil {
		return x.Parent
	}
	return 0
}

func (x *ProtoArrayNode) GetJustifiedEpoch() uint64 {
	if x != nil {
		return x.JustifiedEpoch
	}
	return 0
}

func (x *ProtoArrayNode) GetFinalizedEpoch() uint64 {
	if x != nil {
		return x.FinalizedEpoch
	}
	return 0
}

func (x *ProtoArrayNode) GetWeight() uint64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProtoArrayNode) GetBestChild() uint64 {
	if x != nil {
		return x.BestChild
	}
	return 0
}

func (x *ProtoArrayNode) GetBestDescendant() uint64 {
	if x != nil {
		return x.BestDescendant
	}
	return 0
}

var File_proto_beacon_rpc_v1_debug_proto protoreflect.FileDescriptor

var file_proto_beacon_rpc_v1_debug_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x72,
	0x70, 0x63, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x16, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2f, 0x70, 0x32, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x12, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04, 0x73, 0x6c, 0x6f,
	0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f,
	0x6f, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x22, 0x2d, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f,
	0x74, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x53, 0x5a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x13, 0x4c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x47, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x31, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x27, 0x0a, 0x05, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41,
	0x43, 0x45, 0x10, 0x02, 0x22, 0x86, 0x03, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x75, 0x6e, 0x65, 0x5f, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x70, 0x72, 0x75, 0x6e, 0x65, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x12, 0x52, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x12, 0x5b, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x41, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x82, 0x02,
	0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x4e, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x6a, 0x75, 0x73, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6a, 0x75, 0x73, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65,
	0x73, 0x74, 0x5f, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x62, 0x65, 0x73, 0x74, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x65, 0x73,
	0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x61, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x62, 0x65, 0x73, 0x74, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x61,
	0x6e, 0x74, 0x32, 0x97, 0x04, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x84, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x2a, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x53, 0x5a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x78, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x24, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f,
	0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d,
	0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x53, 0x5a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x12, 0x19, 0x2f, 0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x7b, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2b, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63,
	0x6f, 0x6e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x1b, 0x2f,
	0x65, 0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x65, 0x62,
	0x75, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x12, 0x8f, 0x01, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x46, 0x6f, 0x72, 0x6b,
	0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x34,
	0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x62, 0x65, 0x61, 0x63, 0x6f, 0x6e,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x46, 0x6f, 0x72, 0x6b, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x65,
	0x74, 0x68, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x64, 0x65, 0x62, 0x75,
	0x67, 0x2f, 0x66, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_beacon_rpc_v1_debug_proto_rawDescOnce sync.Once
	file_proto_beacon_rpc_v1_debug_proto_rawDescData = file_proto_beacon_rpc_v1_debug_proto_rawDesc
)

func file_proto_beacon_rpc_v1_debug_proto_rawDescGZIP() []byte {
	file_proto_beacon_rpc_v1_debug_proto_rawDescOnce.Do(func() {
		file_proto_beacon_rpc_v1_debug_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_beacon_rpc_v1_debug_proto_rawDescData)
	})
	return file_proto_beacon_rpc_v1_debug_proto_rawDescData
}

var file_proto_beacon_rpc_v1_debug_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_beacon_rpc_v1_debug_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_beacon_rpc_v1_debug_proto_goTypes = []interface{}{
	(LoggingLevelRequest_Level)(0),       // 0: ethereum.beacon.rpc.v1.LoggingLevelRequest.Level
	(*BeaconStateRequest)(nil),           // 1: ethereum.beacon.rpc.v1.BeaconStateRequest
	(*BlockRequest)(nil),                 // 2: ethereum.beacon.rpc.v1.BlockRequest
	(*SSZResponse)(nil),                  // 3: ethereum.beacon.rpc.v1.SSZResponse
	(*LoggingLevelRequest)(nil),          // 4: ethereum.beacon.rpc.v1.LoggingLevelRequest
	(*ProtoArrayForkChoiceResponse)(nil), // 5: ethereum.beacon.rpc.v1.ProtoArrayForkChoiceResponse
	(*ProtoArrayNode)(nil),               // 6: ethereum.beacon.rpc.v1.ProtoArrayNode
	nil,                                  // 7: ethereum.beacon.rpc.v1.ProtoArrayForkChoiceResponse.IndicesEntry
	(*empty.Empty)(nil),                  // 8: google.protobuf.Empty
}
var file_proto_beacon_rpc_v1_debug_proto_depIdxs = []int32{
	0, // 0: ethereum.beacon.rpc.v1.LoggingLevelRequest.level:type_name -> ethereum.beacon.rpc.v1.LoggingLevelRequest.Level
	6, // 1: ethereum.beacon.rpc.v1.ProtoArrayForkChoiceResponse.proto_array_nodes:type_name -> ethereum.beacon.rpc.v1.ProtoArrayNode
	7, // 2: ethereum.beacon.rpc.v1.ProtoArrayForkChoiceResponse.indices:type_name -> ethereum.beacon.rpc.v1.ProtoArrayForkChoiceResponse.IndicesEntry
	1, // 3: ethereum.beacon.rpc.v1.Debug.GetBeaconState:input_type -> ethereum.beacon.rpc.v1.BeaconStateRequest
	2, // 4: ethereum.beacon.rpc.v1.Debug.GetBlock:input_type -> ethereum.beacon.rpc.v1.BlockRequest
	4, // 5: ethereum.beacon.rpc.v1.Debug.SetLoggingLevel:input_type -> ethereum.beacon.rpc.v1.LoggingLevelRequest
	8, // 6: ethereum.beacon.rpc.v1.Debug.GetProtoArrayForkChoice:input_type -> google.protobuf.Empty
	3, // 7: ethereum.beacon.rpc.v1.Debug.GetBeaconState:output_type -> ethereum.beacon.rpc.v1.SSZResponse
	3, // 8: ethereum.beacon.rpc.v1.Debug.GetBlock:output_type -> ethereum.beacon.rpc.v1.SSZResponse
	8, // 9: ethereum.beacon.rpc.v1.Debug.SetLoggingLevel:output_type -> google.protobuf.Empty
	5, // 10: ethereum.beacon.rpc.v1.Debug.GetProtoArrayForkChoice:output_type -> ethereum.beacon.rpc.v1.ProtoArrayForkChoiceResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_beacon_rpc_v1_debug_proto_init() }
func file_proto_beacon_rpc_v1_debug_proto_init() {
	if File_proto_beacon_rpc_v1_debug_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_beacon_rpc_v1_debug_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beacon_rpc_v1_debug_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beacon_rpc_v1_debug_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSZResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beacon_rpc_v1_debug_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beacon_rpc_v1_debug_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoArrayForkChoiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_beacon_rpc_v1_debug_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoArrayNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_beacon_rpc_v1_debug_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*BeaconStateRequest_Slot)(nil),
		(*BeaconStateRequest_BlockRoot)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_beacon_rpc_v1_debug_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_beacon_rpc_v1_debug_proto_goTypes,
		DependencyIndexes: file_proto_beacon_rpc_v1_debug_proto_depIdxs,
		EnumInfos:         file_proto_beacon_rpc_v1_debug_proto_enumTypes,
		MessageInfos:      file_proto_beacon_rpc_v1_debug_proto_msgTypes,
	}.Build()
	File_proto_beacon_rpc_v1_debug_proto = out.File
	file_proto_beacon_rpc_v1_debug_proto_rawDesc = nil
	file_proto_beacon_rpc_v1_debug_proto_goTypes = nil
	file_proto_beacon_rpc_v1_debug_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DebugClient is the client API for Debug service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugClient interface {
	GetBeaconState(ctx context.Context, in *BeaconStateRequest, opts ...grpc.CallOption) (*SSZResponse, error)
	GetBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*SSZResponse, error)
	SetLoggingLevel(ctx context.Context, in *LoggingLevelRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetProtoArrayForkChoice(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ProtoArrayForkChoiceResponse, error)
}

type debugClient struct {
	cc grpc.ClientConnInterface
}

func NewDebugClient(cc grpc.ClientConnInterface) DebugClient {
	return &debugClient{cc}
}

func (c *debugClient) GetBeaconState(ctx context.Context, in *BeaconStateRequest, opts ...grpc.CallOption) (*SSZResponse, error) {
	out := new(SSZResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.Debug/GetBeaconState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugClient) GetBlock(ctx context.Context, in *BlockRequest, opts ...grpc.CallOption) (*SSZResponse, error) {
	out := new(SSZResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.Debug/GetBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugClient) SetLoggingLevel(ctx context.Context, in *LoggingLevelRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.Debug/SetLoggingLevel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *debugClient) GetProtoArrayForkChoice(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ProtoArrayForkChoiceResponse, error) {
	out := new(ProtoArrayForkChoiceResponse)
	err := c.cc.Invoke(ctx, "/ethereum.beacon.rpc.v1.Debug/GetProtoArrayForkChoice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugServer is the server API for Debug service.
type DebugServer interface {
	GetBeaconState(context.Context, *BeaconStateRequest) (*SSZResponse, error)
	GetBlock(context.Context, *BlockRequest) (*SSZResponse, error)
	SetLoggingLevel(context.Context, *LoggingLevelRequest) (*empty.Empty, error)
	GetProtoArrayForkChoice(context.Context, *empty.Empty) (*ProtoArrayForkChoiceResponse, error)
}

// UnimplementedDebugServer can be embedded to have forward compatible implementations.
type UnimplementedDebugServer struct {
}

func (*UnimplementedDebugServer) GetBeaconState(context.Context, *BeaconStateRequest) (*SSZResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBeaconState not implemented")
}
func (*UnimplementedDebugServer) GetBlock(context.Context, *BlockRequest) (*SSZResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlock not implemented")
}
func (*UnimplementedDebugServer) SetLoggingLevel(context.Context, *LoggingLevelRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetLoggingLevel not implemented")
}
func (*UnimplementedDebugServer) GetProtoArrayForkChoice(context.Context, *empty.Empty) (*ProtoArrayForkChoiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProtoArrayForkChoice not implemented")
}

func RegisterDebugServer(s *grpc.Server, srv DebugServer) {
	s.RegisterService(&_Debug_serviceDesc, srv)
}

func _Debug_GetBeaconState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BeaconStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).GetBeaconState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.Debug/GetBeaconState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).GetBeaconState(ctx, req.(*BeaconStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Debug_GetBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).GetBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.Debug/GetBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).GetBlock(ctx, req.(*BlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Debug_SetLoggingLevel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoggingLevelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).SetLoggingLevel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.Debug/SetLoggingLevel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).SetLoggingLevel(ctx, req.(*LoggingLevelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Debug_GetProtoArrayForkChoice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServer).GetProtoArrayForkChoice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.beacon.rpc.v1.Debug/GetProtoArrayForkChoice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServer).GetProtoArrayForkChoice(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Debug_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.beacon.rpc.v1.Debug",
	HandlerType: (*DebugServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBeaconState",
			Handler:    _Debug_GetBeaconState_Handler,
		},
		{
			MethodName: "GetBlock",
			Handler:    _Debug_GetBlock_Handler,
		},
		{
			MethodName: "SetLoggingLevel",
			Handler:    _Debug_SetLoggingLevel_Handler,
		},
		{
			MethodName: "GetProtoArrayForkChoice",
			Handler:    _Debug_GetProtoArrayForkChoice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/beacon/rpc/v1/debug.proto",
}
