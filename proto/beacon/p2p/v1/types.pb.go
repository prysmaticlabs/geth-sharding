// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/beacon/p2p/v1/types.proto

package ethereum_beacon_p2p_v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BeaconState struct {
	ValidatorSetChangeSlot          uint64                     `protobuf:"varint,1,opt,name=validator_set_change_slot,json=validatorSetChangeSlot,proto3" json:"validator_set_change_slot,omitempty"`
	Validators                      []*ValidatorRecord         `protobuf:"bytes,2,rep,name=validators,proto3" json:"validators,omitempty"`
	Crosslinks                      []*CrosslinkRecord         `protobuf:"bytes,3,rep,name=crosslinks,proto3" json:"crosslinks,omitempty"`
	LastStateRecalculationSlot      uint64                     `protobuf:"varint,4,opt,name=last_state_recalculation_slot,json=lastStateRecalculationSlot,proto3" json:"last_state_recalculation_slot,omitempty"`
	LastFinalizedSlot               uint64                     `protobuf:"varint,5,opt,name=last_finalized_slot,json=lastFinalizedSlot,proto3" json:"last_finalized_slot,omitempty"`
	LastJustifiedSlot               uint64                     `protobuf:"varint,6,opt,name=last_justified_slot,json=lastJustifiedSlot,proto3" json:"last_justified_slot,omitempty"`
	JustifiedStreak                 uint64                     `protobuf:"varint,7,opt,name=justified_streak,json=justifiedStreak,proto3" json:"justified_streak,omitempty"`
	ShardAndCommitteesForSlots      []*ShardAndCommitteeArray  `protobuf:"bytes,8,rep,name=shard_and_committees_for_slots,json=shardAndCommitteesForSlots,proto3" json:"shard_and_committees_for_slots,omitempty"`
	PersistentCommittees            []uint32                   `protobuf:"varint,9,rep,packed,name=persistent_committees,json=persistentCommittees,proto3" json:"persistent_committees,omitempty"`
	PersistentCommitteeReassignment []*ShardReassignmentRecord `protobuf:"bytes,10,rep,name=persistent_committee_reassignment,json=persistentCommitteeReassignment,proto3" json:"persistent_committee_reassignment,omitempty"`
	NextShufflingSeed               []byte                     `protobuf:"bytes,11,opt,name=next_shuffling_seed,json=nextShufflingSeed,proto3" json:"next_shuffling_seed,omitempty"`
	DepositsPenalizedInPeriod       []uint64                   `protobuf:"varint,12,rep,packed,name=deposits_penalized_in_period,json=depositsPenalizedInPeriod,proto3" json:"deposits_penalized_in_period,omitempty"`
	ValidatorDeltaHashChain         []byte                     `protobuf:"bytes,13,opt,name=validator_delta_hash_chain,json=validatorDeltaHashChain,proto3" json:"validator_delta_hash_chain,omitempty"`
	CurrentExitSeq                  uint64                     `protobuf:"varint,14,opt,name=current_exit_seq,json=currentExitSeq,proto3" json:"current_exit_seq,omitempty"`
	GenesisTime                     uint64                     `protobuf:"varint,15,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
	KnownPowReceiptRoot             []byte                     `protobuf:"bytes,16,opt,name=known_pow_receipt_root,json=knownPowReceiptRoot,proto3" json:"known_pow_receipt_root,omitempty"`
	CandidatePowReceiptRoot         []byte                     `protobuf:"bytes,17,opt,name=candidate_pow_receipt_root,json=candidatePowReceiptRoot,proto3" json:"candidate_pow_receipt_root,omitempty"`
	CandidatePowReceiptRootVotes    uint64                     `protobuf:"varint,18,opt,name=candidate_pow_receipt_root_votes,json=candidatePowReceiptRootVotes,proto3" json:"candidate_pow_receipt_root_votes,omitempty"`
	PreForkVersion                  uint64                     `protobuf:"varint,19,opt,name=pre_fork_version,json=preForkVersion,proto3" json:"pre_fork_version,omitempty"`
	PostForkVersion                 uint64                     `protobuf:"varint,20,opt,name=post_fork_version,json=postForkVersion,proto3" json:"post_fork_version,omitempty"`
	ForkSlotNumber                  uint64                     `protobuf:"varint,21,opt,name=fork_slot_number,json=forkSlotNumber,proto3" json:"fork_slot_number,omitempty"`
	PendingAttestations             []*AggregatedAttestation   `protobuf:"bytes,22,rep,name=pending_attestations,json=pendingAttestations,proto3" json:"pending_attestations,omitempty"`
	RecentBlockHashes               [][]byte                   `protobuf:"bytes,23,rep,name=recent_block_hashes,json=recentBlockHashes,proto3" json:"recent_block_hashes,omitempty"`
	RandaoMix                       []byte                     `protobuf:"bytes,24,opt,name=randao_mix,json=randaoMix,proto3" json:"randao_mix,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                   `json:"-"`
	XXX_unrecognized                []byte                     `json:"-"`
	XXX_sizecache                   int32                      `json:"-"`
}

func (m *BeaconState) Reset()         { *m = BeaconState{} }
func (m *BeaconState) String() string { return proto.CompactTextString(m) }
func (*BeaconState) ProtoMessage()    {}
func (*BeaconState) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{0}
}
func (m *BeaconState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeaconState.Unmarshal(m, b)
}
func (m *BeaconState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeaconState.Marshal(b, m, deterministic)
}
func (dst *BeaconState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeaconState.Merge(dst, src)
}
func (m *BeaconState) XXX_Size() int {
	return xxx_messageInfo_BeaconState.Size(m)
}
func (m *BeaconState) XXX_DiscardUnknown() {
	xxx_messageInfo_BeaconState.DiscardUnknown(m)
}

var xxx_messageInfo_BeaconState proto.InternalMessageInfo

func (m *BeaconState) GetValidatorSetChangeSlot() uint64 {
	if m != nil {
		return m.ValidatorSetChangeSlot
	}
	return 0
}

func (m *BeaconState) GetValidators() []*ValidatorRecord {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (m *BeaconState) GetCrosslinks() []*CrosslinkRecord {
	if m != nil {
		return m.Crosslinks
	}
	return nil
}

func (m *BeaconState) GetLastStateRecalculationSlot() uint64 {
	if m != nil {
		return m.LastStateRecalculationSlot
	}
	return 0
}

func (m *BeaconState) GetLastFinalizedSlot() uint64 {
	if m != nil {
		return m.LastFinalizedSlot
	}
	return 0
}

func (m *BeaconState) GetLastJustifiedSlot() uint64 {
	if m != nil {
		return m.LastJustifiedSlot
	}
	return 0
}

func (m *BeaconState) GetJustifiedStreak() uint64 {
	if m != nil {
		return m.JustifiedStreak
	}
	return 0
}

func (m *BeaconState) GetShardAndCommitteesForSlots() []*ShardAndCommitteeArray {
	if m != nil {
		return m.ShardAndCommitteesForSlots
	}
	return nil
}

func (m *BeaconState) GetPersistentCommittees() []uint32 {
	if m != nil {
		return m.PersistentCommittees
	}
	return nil
}

func (m *BeaconState) GetPersistentCommitteeReassignment() []*ShardReassignmentRecord {
	if m != nil {
		return m.PersistentCommitteeReassignment
	}
	return nil
}

func (m *BeaconState) GetNextShufflingSeed() []byte {
	if m != nil {
		return m.NextShufflingSeed
	}
	return nil
}

func (m *BeaconState) GetDepositsPenalizedInPeriod() []uint64 {
	if m != nil {
		return m.DepositsPenalizedInPeriod
	}
	return nil
}

func (m *BeaconState) GetValidatorDeltaHashChain() []byte {
	if m != nil {
		return m.ValidatorDeltaHashChain
	}
	return nil
}

func (m *BeaconState) GetCurrentExitSeq() uint64 {
	if m != nil {
		return m.CurrentExitSeq
	}
	return 0
}

func (m *BeaconState) GetGenesisTime() uint64 {
	if m != nil {
		return m.GenesisTime
	}
	return 0
}

func (m *BeaconState) GetKnownPowReceiptRoot() []byte {
	if m != nil {
		return m.KnownPowReceiptRoot
	}
	return nil
}

func (m *BeaconState) GetCandidatePowReceiptRoot() []byte {
	if m != nil {
		return m.CandidatePowReceiptRoot
	}
	return nil
}

func (m *BeaconState) GetCandidatePowReceiptRootVotes() uint64 {
	if m != nil {
		return m.CandidatePowReceiptRootVotes
	}
	return 0
}

func (m *BeaconState) GetPreForkVersion() uint64 {
	if m != nil {
		return m.PreForkVersion
	}
	return 0
}

func (m *BeaconState) GetPostForkVersion() uint64 {
	if m != nil {
		return m.PostForkVersion
	}
	return 0
}

func (m *BeaconState) GetForkSlotNumber() uint64 {
	if m != nil {
		return m.ForkSlotNumber
	}
	return 0
}

func (m *BeaconState) GetPendingAttestations() []*AggregatedAttestation {
	if m != nil {
		return m.PendingAttestations
	}
	return nil
}

func (m *BeaconState) GetRecentBlockHashes() [][]byte {
	if m != nil {
		return m.RecentBlockHashes
	}
	return nil
}

func (m *BeaconState) GetRandaoMix() []byte {
	if m != nil {
		return m.RandaoMix
	}
	return nil
}

type ValidatorRecord struct {
	Pubkey               []byte   `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	WithdrawalShard      uint64   `protobuf:"varint,2,opt,name=withdrawal_shard,json=withdrawalShard,proto3" json:"withdrawal_shard,omitempty"`
	WithdrawalAddress    []byte   `protobuf:"bytes,3,opt,name=withdrawal_address,json=withdrawalAddress,proto3" json:"withdrawal_address,omitempty"`
	RandaoCommitment     []byte   `protobuf:"bytes,4,opt,name=randao_commitment,json=randaoCommitment,proto3" json:"randao_commitment,omitempty"`
	Balance              uint64   `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
	Status               uint64   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	ExitSlot             uint64   `protobuf:"varint,7,opt,name=exit_slot,json=exitSlot,proto3" json:"exit_slot,omitempty"`
	RandaoLastChange     uint64   `protobuf:"varint,8,opt,name=randao_last_change,json=randaoLastChange,proto3" json:"randao_last_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorRecord) Reset()         { *m = ValidatorRecord{} }
func (m *ValidatorRecord) String() string { return proto.CompactTextString(m) }
func (*ValidatorRecord) ProtoMessage()    {}
func (*ValidatorRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{1}
}
func (m *ValidatorRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorRecord.Unmarshal(m, b)
}
func (m *ValidatorRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorRecord.Marshal(b, m, deterministic)
}
func (dst *ValidatorRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorRecord.Merge(dst, src)
}
func (m *ValidatorRecord) XXX_Size() int {
	return xxx_messageInfo_ValidatorRecord.Size(m)
}
func (m *ValidatorRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorRecord proto.InternalMessageInfo

func (m *ValidatorRecord) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *ValidatorRecord) GetWithdrawalShard() uint64 {
	if m != nil {
		return m.WithdrawalShard
	}
	return 0
}

func (m *ValidatorRecord) GetWithdrawalAddress() []byte {
	if m != nil {
		return m.WithdrawalAddress
	}
	return nil
}

func (m *ValidatorRecord) GetRandaoCommitment() []byte {
	if m != nil {
		return m.RandaoCommitment
	}
	return nil
}

func (m *ValidatorRecord) GetBalance() uint64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *ValidatorRecord) GetStatus() uint64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *ValidatorRecord) GetExitSlot() uint64 {
	if m != nil {
		return m.ExitSlot
	}
	return 0
}

func (m *ValidatorRecord) GetRandaoLastChange() uint64 {
	if m != nil {
		return m.RandaoLastChange
	}
	return 0
}

type ShardReassignmentRecord struct {
	ValidatorIndex       uint32   `protobuf:"varint,1,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	Shard                uint64   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	Slot                 uint64   `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardReassignmentRecord) Reset()         { *m = ShardReassignmentRecord{} }
func (m *ShardReassignmentRecord) String() string { return proto.CompactTextString(m) }
func (*ShardReassignmentRecord) ProtoMessage()    {}
func (*ShardReassignmentRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{2}
}
func (m *ShardReassignmentRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardReassignmentRecord.Unmarshal(m, b)
}
func (m *ShardReassignmentRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardReassignmentRecord.Marshal(b, m, deterministic)
}
func (dst *ShardReassignmentRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardReassignmentRecord.Merge(dst, src)
}
func (m *ShardReassignmentRecord) XXX_Size() int {
	return xxx_messageInfo_ShardReassignmentRecord.Size(m)
}
func (m *ShardReassignmentRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardReassignmentRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ShardReassignmentRecord proto.InternalMessageInfo

func (m *ShardReassignmentRecord) GetValidatorIndex() uint32 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

func (m *ShardReassignmentRecord) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *ShardReassignmentRecord) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type AggregatedAttestation struct {
	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
	Shard                uint64   `protobuf:"varint,2,opt,name=shard,proto3" json:"shard,omitempty"`
	JustifiedSlot        uint64   `protobuf:"varint,3,opt,name=justified_slot,json=justifiedSlot,proto3" json:"justified_slot,omitempty"`
	JustifiedBlockHash   []byte   `protobuf:"bytes,4,opt,name=justified_block_hash,json=justifiedBlockHash,proto3" json:"justified_block_hash,omitempty"`
	ShardBlockHash       []byte   `protobuf:"bytes,5,opt,name=shard_block_hash,json=shardBlockHash,proto3" json:"shard_block_hash,omitempty"`
	AttesterBitfield     []byte   `protobuf:"bytes,6,opt,name=attester_bitfield,json=attesterBitfield,proto3" json:"attester_bitfield,omitempty"`
	ObliqueParentHashes  [][]byte `protobuf:"bytes,7,rep,name=oblique_parent_hashes,json=obliqueParentHashes,proto3" json:"oblique_parent_hashes,omitempty"`
	AggregateSig         []uint64 `protobuf:"varint,8,rep,packed,name=aggregate_sig,json=aggregateSig,proto3" json:"aggregate_sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AggregatedAttestation) Reset()         { *m = AggregatedAttestation{} }
func (m *AggregatedAttestation) String() string { return proto.CompactTextString(m) }
func (*AggregatedAttestation) ProtoMessage()    {}
func (*AggregatedAttestation) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{3}
}
func (m *AggregatedAttestation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AggregatedAttestation.Unmarshal(m, b)
}
func (m *AggregatedAttestation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AggregatedAttestation.Marshal(b, m, deterministic)
}
func (dst *AggregatedAttestation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AggregatedAttestation.Merge(dst, src)
}
func (m *AggregatedAttestation) XXX_Size() int {
	return xxx_messageInfo_AggregatedAttestation.Size(m)
}
func (m *AggregatedAttestation) XXX_DiscardUnknown() {
	xxx_messageInfo_AggregatedAttestation.DiscardUnknown(m)
}

var xxx_messageInfo_AggregatedAttestation proto.InternalMessageInfo

func (m *AggregatedAttestation) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *AggregatedAttestation) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *AggregatedAttestation) GetJustifiedSlot() uint64 {
	if m != nil {
		return m.JustifiedSlot
	}
	return 0
}

func (m *AggregatedAttestation) GetJustifiedBlockHash() []byte {
	if m != nil {
		return m.JustifiedBlockHash
	}
	return nil
}

func (m *AggregatedAttestation) GetShardBlockHash() []byte {
	if m != nil {
		return m.ShardBlockHash
	}
	return nil
}

func (m *AggregatedAttestation) GetAttesterBitfield() []byte {
	if m != nil {
		return m.AttesterBitfield
	}
	return nil
}

func (m *AggregatedAttestation) GetObliqueParentHashes() [][]byte {
	if m != nil {
		return m.ObliqueParentHashes
	}
	return nil
}

func (m *AggregatedAttestation) GetAggregateSig() []uint64 {
	if m != nil {
		return m.AggregateSig
	}
	return nil
}

type AttestationSignedData struct {
	ForkVersion          uint64   `protobuf:"varint,1,opt,name=fork_version,json=forkVersion,proto3" json:"fork_version,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	Shard                uint64   `protobuf:"varint,3,opt,name=shard,proto3" json:"shard,omitempty"`
	ParentHashes         [][]byte `protobuf:"bytes,4,rep,name=parent_hashes,json=parentHashes,proto3" json:"parent_hashes,omitempty"`
	ShardBlockHash       []byte   `protobuf:"bytes,5,opt,name=shard_block_hash,json=shardBlockHash,proto3" json:"shard_block_hash,omitempty"`
	JustifiedSlot        uint64   `protobuf:"varint,6,opt,name=justified_slot,json=justifiedSlot,proto3" json:"justified_slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestationSignedData) Reset()         { *m = AttestationSignedData{} }
func (m *AttestationSignedData) String() string { return proto.CompactTextString(m) }
func (*AttestationSignedData) ProtoMessage()    {}
func (*AttestationSignedData) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{4}
}
func (m *AttestationSignedData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationSignedData.Unmarshal(m, b)
}
func (m *AttestationSignedData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationSignedData.Marshal(b, m, deterministic)
}
func (dst *AttestationSignedData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationSignedData.Merge(dst, src)
}
func (m *AttestationSignedData) XXX_Size() int {
	return xxx_messageInfo_AttestationSignedData.Size(m)
}
func (m *AttestationSignedData) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationSignedData.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationSignedData proto.InternalMessageInfo

func (m *AttestationSignedData) GetForkVersion() uint64 {
	if m != nil {
		return m.ForkVersion
	}
	return 0
}

func (m *AttestationSignedData) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *AttestationSignedData) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *AttestationSignedData) GetParentHashes() [][]byte {
	if m != nil {
		return m.ParentHashes
	}
	return nil
}

func (m *AttestationSignedData) GetShardBlockHash() []byte {
	if m != nil {
		return m.ShardBlockHash
	}
	return nil
}

func (m *AttestationSignedData) GetJustifiedSlot() uint64 {
	if m != nil {
		return m.JustifiedSlot
	}
	return 0
}

type AttestationHashes struct {
	AttestationHash      [][]byte `protobuf:"bytes,1,rep,name=attestation_hash,json=attestationHash,proto3" json:"attestation_hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttestationHashes) Reset()         { *m = AttestationHashes{} }
func (m *AttestationHashes) String() string { return proto.CompactTextString(m) }
func (*AttestationHashes) ProtoMessage()    {}
func (*AttestationHashes) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{5}
}
func (m *AttestationHashes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttestationHashes.Unmarshal(m, b)
}
func (m *AttestationHashes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttestationHashes.Marshal(b, m, deterministic)
}
func (dst *AttestationHashes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttestationHashes.Merge(dst, src)
}
func (m *AttestationHashes) XXX_Size() int {
	return xxx_messageInfo_AttestationHashes.Size(m)
}
func (m *AttestationHashes) XXX_DiscardUnknown() {
	xxx_messageInfo_AttestationHashes.DiscardUnknown(m)
}

var xxx_messageInfo_AttestationHashes proto.InternalMessageInfo

func (m *AttestationHashes) GetAttestationHash() [][]byte {
	if m != nil {
		return m.AttestationHash
	}
	return nil
}

type SpecialRecord struct {
	Kind                 uint32   `protobuf:"varint,1,opt,name=kind,proto3" json:"kind,omitempty"`
	Data                 [][]byte `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpecialRecord) Reset()         { *m = SpecialRecord{} }
func (m *SpecialRecord) String() string { return proto.CompactTextString(m) }
func (*SpecialRecord) ProtoMessage()    {}
func (*SpecialRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{6}
}
func (m *SpecialRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecialRecord.Unmarshal(m, b)
}
func (m *SpecialRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecialRecord.Marshal(b, m, deterministic)
}
func (dst *SpecialRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecialRecord.Merge(dst, src)
}
func (m *SpecialRecord) XXX_Size() int {
	return xxx_messageInfo_SpecialRecord.Size(m)
}
func (m *SpecialRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecialRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SpecialRecord proto.InternalMessageInfo

func (m *SpecialRecord) GetKind() uint32 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *SpecialRecord) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type CrosslinkRecord struct {
	ShardBlockHash       []byte   `protobuf:"bytes,1,opt,name=shard_block_hash,json=shardBlockHash,proto3" json:"shard_block_hash,omitempty"`
	Slot                 uint64   `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrosslinkRecord) Reset()         { *m = CrosslinkRecord{} }
func (m *CrosslinkRecord) String() string { return proto.CompactTextString(m) }
func (*CrosslinkRecord) ProtoMessage()    {}
func (*CrosslinkRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{7}
}
func (m *CrosslinkRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrosslinkRecord.Unmarshal(m, b)
}
func (m *CrosslinkRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrosslinkRecord.Marshal(b, m, deterministic)
}
func (dst *CrosslinkRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrosslinkRecord.Merge(dst, src)
}
func (m *CrosslinkRecord) XXX_Size() int {
	return xxx_messageInfo_CrosslinkRecord.Size(m)
}
func (m *CrosslinkRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CrosslinkRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CrosslinkRecord proto.InternalMessageInfo

func (m *CrosslinkRecord) GetShardBlockHash() []byte {
	if m != nil {
		return m.ShardBlockHash
	}
	return nil
}

func (m *CrosslinkRecord) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

type ShardAndCommitteeArray struct {
	ArrayShardAndCommittee []*ShardAndCommittee `protobuf:"bytes,1,rep,name=array_shard_and_committee,json=arrayShardAndCommittee,proto3" json:"array_shard_and_committee,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
	XXX_unrecognized       []byte               `json:"-"`
	XXX_sizecache          int32                `json:"-"`
}

func (m *ShardAndCommitteeArray) Reset()         { *m = ShardAndCommitteeArray{} }
func (m *ShardAndCommitteeArray) String() string { return proto.CompactTextString(m) }
func (*ShardAndCommitteeArray) ProtoMessage()    {}
func (*ShardAndCommitteeArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{8}
}
func (m *ShardAndCommitteeArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardAndCommitteeArray.Unmarshal(m, b)
}
func (m *ShardAndCommitteeArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardAndCommitteeArray.Marshal(b, m, deterministic)
}
func (dst *ShardAndCommitteeArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardAndCommitteeArray.Merge(dst, src)
}
func (m *ShardAndCommitteeArray) XXX_Size() int {
	return xxx_messageInfo_ShardAndCommitteeArray.Size(m)
}
func (m *ShardAndCommitteeArray) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardAndCommitteeArray.DiscardUnknown(m)
}

var xxx_messageInfo_ShardAndCommitteeArray proto.InternalMessageInfo

func (m *ShardAndCommitteeArray) GetArrayShardAndCommittee() []*ShardAndCommittee {
	if m != nil {
		return m.ArrayShardAndCommittee
	}
	return nil
}

type ShardAndCommittee struct {
	Shard                uint64   `protobuf:"varint,1,opt,name=shard,proto3" json:"shard,omitempty"`
	Committee            []uint32 `protobuf:"varint,2,rep,packed,name=committee,proto3" json:"committee,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShardAndCommittee) Reset()         { *m = ShardAndCommittee{} }
func (m *ShardAndCommittee) String() string { return proto.CompactTextString(m) }
func (*ShardAndCommittee) ProtoMessage()    {}
func (*ShardAndCommittee) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{9}
}
func (m *ShardAndCommittee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShardAndCommittee.Unmarshal(m, b)
}
func (m *ShardAndCommittee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShardAndCommittee.Marshal(b, m, deterministic)
}
func (dst *ShardAndCommittee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShardAndCommittee.Merge(dst, src)
}
func (m *ShardAndCommittee) XXX_Size() int {
	return xxx_messageInfo_ShardAndCommittee.Size(m)
}
func (m *ShardAndCommittee) XXX_DiscardUnknown() {
	xxx_messageInfo_ShardAndCommittee.DiscardUnknown(m)
}

var xxx_messageInfo_ShardAndCommittee proto.InternalMessageInfo

func (m *ShardAndCommittee) GetShard() uint64 {
	if m != nil {
		return m.Shard
	}
	return 0
}

func (m *ShardAndCommittee) GetCommittee() []uint32 {
	if m != nil {
		return m.Committee
	}
	return nil
}

type BeaconBlock struct {
	AncestorHashes        [][]byte                 `protobuf:"bytes,1,rep,name=ancestor_hashes,json=ancestorHashes,proto3" json:"ancestor_hashes,omitempty"`
	Slot                  uint64                   `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
	RandaoReveal          []byte                   `protobuf:"bytes,3,opt,name=randao_reveal,json=randaoReveal,proto3" json:"randao_reveal,omitempty"`
	PowChainRef           []byte                   `protobuf:"bytes,4,opt,name=pow_chain_ref,json=powChainRef,proto3" json:"pow_chain_ref,omitempty"`
	ActiveStateRoot       []byte                   `protobuf:"bytes,5,opt,name=active_state_root,json=activeStateRoot,proto3" json:"active_state_root,omitempty"`
	CrystallizedStateRoot []byte                   `protobuf:"bytes,6,opt,name=crystallized_state_root,json=crystallizedStateRoot,proto3" json:"crystallized_state_root,omitempty"`
	Timestamp             *timestamp.Timestamp     `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Attestations          []*AggregatedAttestation `protobuf:"bytes,8,rep,name=attestations,proto3" json:"attestations,omitempty"`
	Specials              []*SpecialRecord         `protobuf:"bytes,9,rep,name=specials,proto3" json:"specials,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                 `json:"-"`
	XXX_unrecognized      []byte                   `json:"-"`
	XXX_sizecache         int32                    `json:"-"`
}

func (m *BeaconBlock) Reset()         { *m = BeaconBlock{} }
func (m *BeaconBlock) String() string { return proto.CompactTextString(m) }
func (*BeaconBlock) ProtoMessage()    {}
func (*BeaconBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{10}
}
func (m *BeaconBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BeaconBlock.Unmarshal(m, b)
}
func (m *BeaconBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BeaconBlock.Marshal(b, m, deterministic)
}
func (dst *BeaconBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BeaconBlock.Merge(dst, src)
}
func (m *BeaconBlock) XXX_Size() int {
	return xxx_messageInfo_BeaconBlock.Size(m)
}
func (m *BeaconBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_BeaconBlock.DiscardUnknown(m)
}

var xxx_messageInfo_BeaconBlock proto.InternalMessageInfo

func (m *BeaconBlock) GetAncestorHashes() [][]byte {
	if m != nil {
		return m.AncestorHashes
	}
	return nil
}

func (m *BeaconBlock) GetSlot() uint64 {
	if m != nil {
		return m.Slot
	}
	return 0
}

func (m *BeaconBlock) GetRandaoReveal() []byte {
	if m != nil {
		return m.RandaoReveal
	}
	return nil
}

func (m *BeaconBlock) GetPowChainRef() []byte {
	if m != nil {
		return m.PowChainRef
	}
	return nil
}

func (m *BeaconBlock) GetActiveStateRoot() []byte {
	if m != nil {
		return m.ActiveStateRoot
	}
	return nil
}

func (m *BeaconBlock) GetCrystallizedStateRoot() []byte {
	if m != nil {
		return m.CrystallizedStateRoot
	}
	return nil
}

func (m *BeaconBlock) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *BeaconBlock) GetAttestations() []*AggregatedAttestation {
	if m != nil {
		return m.Attestations
	}
	return nil
}

func (m *BeaconBlock) GetSpecials() []*SpecialRecord {
	if m != nil {
		return m.Specials
	}
	return nil
}

type CrystallizedState struct {
	LastStateRecalculationSlot uint64                    `protobuf:"varint,1,opt,name=last_state_recalculation_slot,json=lastStateRecalculationSlot,proto3" json:"last_state_recalculation_slot,omitempty"`
	JustifiedStreak            uint64                    `protobuf:"varint,2,opt,name=justified_streak,json=justifiedStreak,proto3" json:"justified_streak,omitempty"`
	LastJustifiedSlot          uint64                    `protobuf:"varint,3,opt,name=last_justified_slot,json=lastJustifiedSlot,proto3" json:"last_justified_slot,omitempty"`
	LastFinalizedSlot          uint64                    `protobuf:"varint,4,opt,name=last_finalized_slot,json=lastFinalizedSlot,proto3" json:"last_finalized_slot,omitempty"`
	ValidatorSetChangeSlot     uint64                    `protobuf:"varint,5,opt,name=validator_set_change_slot,json=validatorSetChangeSlot,proto3" json:"validator_set_change_slot,omitempty"`
	Crosslinks                 []*CrosslinkRecord        `protobuf:"bytes,6,rep,name=crosslinks,proto3" json:"crosslinks,omitempty"`
	Validators                 []*ValidatorRecord        `protobuf:"bytes,7,rep,name=validators,proto3" json:"validators,omitempty"`
	ShardAndCommitteesForSlots []*ShardAndCommitteeArray `protobuf:"bytes,8,rep,name=shard_and_committees_for_slots,json=shardAndCommitteesForSlots,proto3" json:"shard_and_committees_for_slots,omitempty"`
	DepositsPenalizedInPeriod  []uint32                  `protobuf:"varint,9,rep,packed,name=deposits_penalized_in_period,json=depositsPenalizedInPeriod,proto3" json:"deposits_penalized_in_period,omitempty"`
	ValidatorSetDeltaHashChain []byte                    `protobuf:"bytes,10,opt,name=validator_set_delta_hash_chain,json=validatorSetDeltaHashChain,proto3" json:"validator_set_delta_hash_chain,omitempty"`
	PreForkVersion             uint32                    `protobuf:"varint,11,opt,name=pre_fork_version,json=preForkVersion,proto3" json:"pre_fork_version,omitempty"`
	PostForkVersion            uint32                    `protobuf:"varint,12,opt,name=post_fork_version,json=postForkVersion,proto3" json:"post_fork_version,omitempty"`
	ForkSlotNumber             uint64                    `protobuf:"varint,13,opt,name=fork_slot_number,json=forkSlotNumber,proto3" json:"fork_slot_number,omitempty"`
	XXX_NoUnkeyedLiteral       struct{}                  `json:"-"`
	XXX_unrecognized           []byte                    `json:"-"`
	XXX_sizecache              int32                     `json:"-"`
}

func (m *CrystallizedState) Reset()         { *m = CrystallizedState{} }
func (m *CrystallizedState) String() string { return proto.CompactTextString(m) }
func (*CrystallizedState) ProtoMessage()    {}
func (*CrystallizedState) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{11}
}
func (m *CrystallizedState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrystallizedState.Unmarshal(m, b)
}
func (m *CrystallizedState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrystallizedState.Marshal(b, m, deterministic)
}
func (dst *CrystallizedState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrystallizedState.Merge(dst, src)
}
func (m *CrystallizedState) XXX_Size() int {
	return xxx_messageInfo_CrystallizedState.Size(m)
}
func (m *CrystallizedState) XXX_DiscardUnknown() {
	xxx_messageInfo_CrystallizedState.DiscardUnknown(m)
}

var xxx_messageInfo_CrystallizedState proto.InternalMessageInfo

func (m *CrystallizedState) GetLastStateRecalculationSlot() uint64 {
	if m != nil {
		return m.LastStateRecalculationSlot
	}
	return 0
}

func (m *CrystallizedState) GetJustifiedStreak() uint64 {
	if m != nil {
		return m.JustifiedStreak
	}
	return 0
}

func (m *CrystallizedState) GetLastJustifiedSlot() uint64 {
	if m != nil {
		return m.LastJustifiedSlot
	}
	return 0
}

func (m *CrystallizedState) GetLastFinalizedSlot() uint64 {
	if m != nil {
		return m.LastFinalizedSlot
	}
	return 0
}

func (m *CrystallizedState) GetValidatorSetChangeSlot() uint64 {
	if m != nil {
		return m.ValidatorSetChangeSlot
	}
	return 0
}

func (m *CrystallizedState) GetCrosslinks() []*CrosslinkRecord {
	if m != nil {
		return m.Crosslinks
	}
	return nil
}

func (m *CrystallizedState) GetValidators() []*ValidatorRecord {
	if m != nil {
		return m.Validators
	}
	return nil
}

func (m *CrystallizedState) GetShardAndCommitteesForSlots() []*ShardAndCommitteeArray {
	if m != nil {
		return m.ShardAndCommitteesForSlots
	}
	return nil
}

func (m *CrystallizedState) GetDepositsPenalizedInPeriod() []uint32 {
	if m != nil {
		return m.DepositsPenalizedInPeriod
	}
	return nil
}

func (m *CrystallizedState) GetValidatorSetDeltaHashChain() []byte {
	if m != nil {
		return m.ValidatorSetDeltaHashChain
	}
	return nil
}

func (m *CrystallizedState) GetPreForkVersion() uint32 {
	if m != nil {
		return m.PreForkVersion
	}
	return 0
}

func (m *CrystallizedState) GetPostForkVersion() uint32 {
	if m != nil {
		return m.PostForkVersion
	}
	return 0
}

func (m *CrystallizedState) GetForkSlotNumber() uint64 {
	if m != nil {
		return m.ForkSlotNumber
	}
	return 0
}

type ActiveState struct {
	PendingAttestations  []*AggregatedAttestation `protobuf:"bytes,1,rep,name=pending_attestations,json=pendingAttestations,proto3" json:"pending_attestations,omitempty"`
	RecentBlockHashes    [][]byte                 `protobuf:"bytes,2,rep,name=recent_block_hashes,json=recentBlockHashes,proto3" json:"recent_block_hashes,omitempty"`
	PendingSpecials      []*SpecialRecord         `protobuf:"bytes,3,rep,name=pending_specials,json=pendingSpecials,proto3" json:"pending_specials,omitempty"`
	RandaoMix            []byte                   `protobuf:"bytes,4,opt,name=randao_mix,json=randaoMix,proto3" json:"randao_mix,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ActiveState) Reset()         { *m = ActiveState{} }
func (m *ActiveState) String() string { return proto.CompactTextString(m) }
func (*ActiveState) ProtoMessage()    {}
func (*ActiveState) Descriptor() ([]byte, []int) {
	return fileDescriptor_types_5befaac8cf59dd97, []int{12}
}
func (m *ActiveState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActiveState.Unmarshal(m, b)
}
func (m *ActiveState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActiveState.Marshal(b, m, deterministic)
}
func (dst *ActiveState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActiveState.Merge(dst, src)
}
func (m *ActiveState) XXX_Size() int {
	return xxx_messageInfo_ActiveState.Size(m)
}
func (m *ActiveState) XXX_DiscardUnknown() {
	xxx_messageInfo_ActiveState.DiscardUnknown(m)
}

var xxx_messageInfo_ActiveState proto.InternalMessageInfo

func (m *ActiveState) GetPendingAttestations() []*AggregatedAttestation {
	if m != nil {
		return m.PendingAttestations
	}
	return nil
}

func (m *ActiveState) GetRecentBlockHashes() [][]byte {
	if m != nil {
		return m.RecentBlockHashes
	}
	return nil
}

func (m *ActiveState) GetPendingSpecials() []*SpecialRecord {
	if m != nil {
		return m.PendingSpecials
	}
	return nil
}

func (m *ActiveState) GetRandaoMix() []byte {
	if m != nil {
		return m.RandaoMix
	}
	return nil
}

func init() {
	proto.RegisterType((*BeaconState)(nil), "ethereum.beacon.p2p.v1.BeaconState")
	proto.RegisterType((*ValidatorRecord)(nil), "ethereum.beacon.p2p.v1.ValidatorRecord")
	proto.RegisterType((*ShardReassignmentRecord)(nil), "ethereum.beacon.p2p.v1.ShardReassignmentRecord")
	proto.RegisterType((*AggregatedAttestation)(nil), "ethereum.beacon.p2p.v1.AggregatedAttestation")
	proto.RegisterType((*AttestationSignedData)(nil), "ethereum.beacon.p2p.v1.AttestationSignedData")
	proto.RegisterType((*AttestationHashes)(nil), "ethereum.beacon.p2p.v1.AttestationHashes")
	proto.RegisterType((*SpecialRecord)(nil), "ethereum.beacon.p2p.v1.SpecialRecord")
	proto.RegisterType((*CrosslinkRecord)(nil), "ethereum.beacon.p2p.v1.CrosslinkRecord")
	proto.RegisterType((*ShardAndCommitteeArray)(nil), "ethereum.beacon.p2p.v1.ShardAndCommitteeArray")
	proto.RegisterType((*ShardAndCommittee)(nil), "ethereum.beacon.p2p.v1.ShardAndCommittee")
	proto.RegisterType((*BeaconBlock)(nil), "ethereum.beacon.p2p.v1.BeaconBlock")
	proto.RegisterType((*CrystallizedState)(nil), "ethereum.beacon.p2p.v1.CrystallizedState")
	proto.RegisterType((*ActiveState)(nil), "ethereum.beacon.p2p.v1.ActiveState")
}

func init() {
	proto.RegisterFile("proto/beacon/p2p/v1/types.proto", fileDescriptor_types_5befaac8cf59dd97)
}

var fileDescriptor_types_5befaac8cf59dd97 = []byte{
	// 1557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x57, 0xeb, 0x6e, 0x1b, 0xb7,
	0x12, 0x86, 0x2e, 0xbe, 0x8d, 0x24, 0x5b, 0xa2, 0x6f, 0x1b, 0x9f, 0x5c, 0x1c, 0x05, 0x41, 0x9c,
	0x93, 0x13, 0xf9, 0xc4, 0x01, 0xce, 0x69, 0x51, 0xa0, 0x85, 0xec, 0xd4, 0x49, 0x8a, 0x5e, 0xdc,
	0x55, 0x90, 0xbf, 0x5b, 0x4a, 0x4b, 0x49, 0x8c, 0x56, 0xcb, 0x0d, 0x49, 0xf9, 0xd2, 0x02, 0x7d,
	0x86, 0xbe, 0x45, 0x7f, 0xf5, 0x5f, 0xdf, 0xa1, 0x40, 0x1f, 0xa1, 0x4f, 0x53, 0x70, 0xb8, 0xab,
	0x5d, 0xc9, 0x92, 0xed, 0x06, 0x28, 0xfa, 0x4f, 0x9a, 0xf9, 0x86, 0x3b, 0x9c, 0x1b, 0xbf, 0x81,
	0x7b, 0x91, 0x14, 0x5a, 0xec, 0xb7, 0x19, 0xed, 0x88, 0x70, 0x3f, 0x3a, 0x88, 0xf6, 0x4f, 0x9f,
	0xed, 0xeb, 0x8b, 0x88, 0xa9, 0x06, 0x6a, 0xc8, 0x16, 0xd3, 0x7d, 0x26, 0xd9, 0x68, 0xd8, 0xb0,
	0x98, 0x46, 0x74, 0x10, 0x35, 0x4e, 0x9f, 0xed, 0xdc, 0xeb, 0x09, 0xd1, 0x0b, 0xd8, 0x3e, 0xa2,
	0xda, 0xa3, 0xee, 0xbe, 0xe6, 0x43, 0xa6, 0x34, 0x1d, 0x46, 0xd6, 0xb0, 0xfe, 0x6b, 0x09, 0x4a,
	0x87, 0x68, 0xd2, 0xd2, 0x54, 0x33, 0xf2, 0x31, 0xdc, 0x3a, 0xa5, 0x01, 0xf7, 0xa9, 0x16, 0xd2,
	0x53, 0x4c, 0x7b, 0x9d, 0x3e, 0x0d, 0x7b, 0xcc, 0x53, 0x81, 0xd0, 0x4e, 0x6e, 0x37, 0xb7, 0x57,
	0x74, 0xb7, 0xc6, 0x80, 0x16, 0xd3, 0x47, 0xa8, 0x6e, 0x05, 0x42, 0x93, 0x97, 0x00, 0x63, 0x8d,
	0x72, 0xf2, 0xbb, 0x85, 0xbd, 0xd2, 0xc1, 0xa3, 0xc6, 0x6c, 0xc7, 0x1a, 0x6f, 0x13, 0xa4, 0xcb,
	0x3a, 0x42, 0xfa, 0x6e, 0xc6, 0xd4, 0x1c, 0xd4, 0x91, 0x42, 0xa9, 0x80, 0x87, 0x03, 0xe5, 0x14,
	0xae, 0x3e, 0xe8, 0x28, 0x41, 0x26, 0x07, 0xa5, 0xa6, 0xa4, 0x09, 0x77, 0x02, 0xaa, 0xb4, 0xa7,
	0xcc, 0xd5, 0x3c, 0xc9, 0x3a, 0x34, 0xe8, 0x8c, 0x02, 0xaa, 0xb9, 0x08, 0xed, 0x85, 0x8a, 0x78,
	0xa1, 0x1d, 0x03, 0xc2, 0xeb, 0xbb, 0x59, 0x08, 0x5e, 0xaa, 0x01, 0xeb, 0x78, 0x44, 0x97, 0x87,
	0x34, 0xe0, 0xdf, 0x33, 0xdf, 0x1a, 0x2e, 0xa0, 0x61, 0xcd, 0xa8, 0x8e, 0x13, 0xcd, 0x04, 0xfe,
	0xdd, 0x48, 0x69, 0xde, 0xe5, 0x09, 0x7e, 0x31, 0xc5, 0x7f, 0x91, 0x68, 0x10, 0xff, 0x18, 0xaa,
	0x19, 0xa8, 0x96, 0x8c, 0x0e, 0x9c, 0x25, 0x04, 0xaf, 0x8d, 0xe5, 0x2d, 0x14, 0x13, 0x09, 0x77,
	0x55, 0x9f, 0x4a, 0xdf, 0xa3, 0xa1, 0xef, 0x75, 0xc4, 0x70, 0xc8, 0xb5, 0x66, 0x4c, 0x79, 0x5d,
	0x93, 0xa9, 0x40, 0x68, 0xe5, 0x2c, 0x63, 0xa8, 0x1a, 0xf3, 0x42, 0xd5, 0x32, 0xd6, 0xcd, 0xd0,
	0x3f, 0x4a, 0x6c, 0x9b, 0x52, 0xd2, 0x0b, 0x77, 0x47, 0x4d, 0xcb, 0xd5, 0xb1, 0x90, 0xc6, 0x3b,
	0x45, 0x9e, 0xc3, 0x66, 0xc4, 0xa4, 0xe2, 0x4a, 0xb3, 0x50, 0x67, 0x3e, 0xea, 0xac, 0xec, 0x16,
	0xf6, 0x2a, 0xee, 0x46, 0xaa, 0x4c, 0x8d, 0xc9, 0x0f, 0x70, 0x7f, 0x96, 0x91, 0x27, 0x19, 0x55,
	0x8a, 0xf7, 0xc2, 0x21, 0x0b, 0xb5, 0x03, 0xe8, 0xeb, 0xfe, 0x95, 0xbe, 0xba, 0x19, 0x83, 0x38,
	0xbd, 0xf7, 0x66, 0x7c, 0x31, 0x0b, 0x33, 0x09, 0x08, 0xd9, 0xb9, 0xf6, 0x54, 0x7f, 0xd4, 0xed,
	0x06, 0x3c, 0xec, 0x79, 0x8a, 0x31, 0xdf, 0x29, 0xed, 0xe6, 0xf6, 0xca, 0x6e, 0xcd, 0xa8, 0x5a,
	0x89, 0xa6, 0xc5, 0x98, 0x4f, 0x3e, 0x83, 0xdb, 0x3e, 0x8b, 0x84, 0xe2, 0x5a, 0x79, 0x11, 0x4b,
	0x92, 0xcc, 0x43, 0x2f, 0x62, 0x92, 0x0b, 0xdf, 0x29, 0xef, 0x16, 0xf6, 0x8a, 0xee, 0xad, 0x04,
	0x73, 0x92, 0x40, 0x5e, 0x87, 0x27, 0x08, 0x20, 0x9f, 0xc0, 0x4e, 0xda, 0x31, 0x3e, 0x0b, 0x34,
	0xf5, 0xfa, 0x54, 0xf5, 0x4d, 0xe3, 0xf0, 0xd0, 0xa9, 0xe0, 0x77, 0xb7, 0xc7, 0x88, 0x17, 0x06,
	0xf0, 0x8a, 0xaa, 0xfe, 0x91, 0x51, 0x93, 0x3d, 0xa8, 0x76, 0x46, 0x52, 0x9a, 0x38, 0xb1, 0x73,
	0xae, 0x3d, 0xc5, 0xde, 0x3b, 0xab, 0x98, 0xfe, 0xd5, 0x58, 0xfe, 0xf9, 0x39, 0xd7, 0x2d, 0xf6,
	0x9e, 0xdc, 0x87, 0x72, 0x8f, 0x85, 0x4c, 0x71, 0xe5, 0x99, 0x1e, 0x76, 0xd6, 0x10, 0x55, 0x8a,
	0x65, 0x6f, 0xf8, 0x90, 0x91, 0xe7, 0xb0, 0x35, 0x08, 0xc5, 0x59, 0xe8, 0x45, 0xe2, 0xcc, 0x54,
	0x3b, 0xe3, 0x91, 0xf6, 0xa4, 0x10, 0xda, 0xa9, 0xa2, 0x17, 0xeb, 0xa8, 0x3d, 0x11, 0x67, 0xae,
	0xd5, 0xb9, 0x42, 0x68, 0xe3, 0x7e, 0x87, 0x86, 0xbe, 0xf1, 0x8e, 0x5d, 0x36, 0xac, 0x59, 0xf7,
	0xc7, 0x88, 0x29, 0xe3, 0x63, 0xd8, 0x9d, 0x6f, 0xec, 0x9d, 0x0a, 0xcd, 0x94, 0x43, 0xd0, 0xd1,
	0xdb, 0x73, 0x8e, 0x78, 0x6b, 0x30, 0x26, 0x0c, 0x91, 0x64, 0xa6, 0x92, 0x07, 0xde, 0xa9, 0x49,
	0xb0, 0x08, 0x9d, 0x75, 0x1b, 0x86, 0x48, 0xb2, 0x63, 0x21, 0x07, 0x6f, 0xad, 0x94, 0xfc, 0x1b,
	0x6a, 0x91, 0x30, 0xfd, 0x98, 0x85, 0x6e, 0xd8, 0x86, 0x31, 0x8a, 0x2c, 0x76, 0x0f, 0xaa, 0x08,
	0x33, 0xcd, 0xe1, 0x85, 0xa3, 0x61, 0x9b, 0x49, 0x67, 0xd3, 0x9e, 0x6a, 0xe4, 0xa6, 0xc2, 0xbf,
	0x46, 0x29, 0xf9, 0x0e, 0x36, 0x22, 0x16, 0xfa, 0xa6, 0x5a, 0xa8, 0xd6, 0x66, 0x40, 0x9a, 0x01,
	0xa0, 0x9c, 0x2d, 0x2c, 0xd2, 0xa7, 0xf3, 0x8a, 0xb4, 0xd9, 0xeb, 0x49, 0xd6, 0xa3, 0x9a, 0xf9,
	0xcd, 0xd4, 0xca, 0x5d, 0x8f, 0x8f, 0xca, 0xc8, 0x94, 0x29, 0x4b, 0x13, 0x9b, 0x50, 0x7b, 0xed,
	0x40, 0x74, 0x06, 0x58, 0x22, 0x4c, 0x39, 0xdb, 0xbb, 0x05, 0x53, 0x96, 0x56, 0x75, 0x68, 0x34,
	0xaf, 0x50, 0x41, 0xee, 0x00, 0x48, 0x1a, 0xfa, 0x54, 0x78, 0x43, 0x7e, 0xee, 0x38, 0x98, 0x86,
	0x15, 0x2b, 0xf9, 0x8a, 0x9f, 0xd7, 0x7f, 0xc9, 0xc3, 0xda, 0xd4, 0x08, 0x25, 0x5b, 0xb0, 0x18,
	0x8d, 0xda, 0x03, 0x76, 0x81, 0x73, 0xba, 0xec, 0xc6, 0xff, 0xcc, 0x88, 0x39, 0xe3, 0xba, 0xef,
	0x4b, 0x7a, 0x46, 0x03, 0x0f, 0x9b, 0xdd, 0xc9, 0xdb, 0x88, 0xa5, 0x72, 0xec, 0x37, 0xf2, 0x14,
	0x48, 0x06, 0x4a, 0x7d, 0x5f, 0x32, 0x65, 0x26, 0x30, 0xf6, 0x4e, 0xaa, 0x69, 0x5a, 0x05, 0x79,
	0x02, 0xb5, 0xd8, 0x49, 0xdb, 0xe4, 0xd8, 0xd8, 0x45, 0x44, 0x57, 0xad, 0xe2, 0x68, 0x2c, 0x27,
	0x0e, 0x2c, 0xb5, 0x69, 0x40, 0xc3, 0x0e, 0x8b, 0xa7, 0x67, 0xf2, 0xd7, 0x38, 0x6e, 0xe2, 0x34,
	0x52, 0xf1, 0x98, 0x8c, 0xff, 0x91, 0x7f, 0xc1, 0x8a, 0x6d, 0x0a, 0x33, 0x41, 0xed, 0x50, 0x5c,
	0x36, 0x02, 0x1c, 0x9c, 0xff, 0x01, 0x12, 0x7f, 0x1b, 0xe7, 0xad, 0x7d, 0xa6, 0x9c, 0x65, 0x44,
	0xc5, 0x1f, 0xff, 0x92, 0xaa, 0xf8, 0x7d, 0xaa, 0x07, 0xb0, 0x3d, 0x67, 0xa2, 0x90, 0x47, 0xb0,
	0x96, 0xf6, 0x2f, 0x0f, 0x7d, 0x76, 0x8e, 0xf1, 0xab, 0xb8, 0xab, 0x63, 0xf1, 0x6b, 0x23, 0x25,
	0x1b, 0xb0, 0x90, 0x0d, 0x9e, 0xfd, 0x43, 0x08, 0x14, 0xd1, 0xbf, 0x02, 0x0a, 0xf1, 0x77, 0xfd,
	0xf7, 0x3c, 0x6c, 0xce, 0xac, 0x8d, 0x31, 0x3a, 0x97, 0xa2, 0xe7, 0x9c, 0xfb, 0x10, 0x56, 0xa7,
	0xde, 0x10, 0xfb, 0x85, 0xca, 0xbb, 0x89, 0xf7, 0xe3, 0xbf, 0xb0, 0x91, 0xc2, 0xd2, 0xd2, 0x8a,
	0xb3, 0x40, 0xc6, 0xba, 0x71, 0x6d, 0x99, 0xae, 0xb0, 0xcf, 0x48, 0x06, 0xbd, 0x80, 0xe8, 0x55,
	0x94, 0xa7, 0xc8, 0x27, 0x50, 0xb3, 0xdd, 0xc0, 0xa4, 0xd7, 0xe6, 0xba, 0xcb, 0x59, 0xe0, 0x63,
	0x8a, 0xca, 0x6e, 0x35, 0x51, 0x1c, 0xc6, 0x72, 0x72, 0x00, 0x9b, 0xa2, 0x1d, 0xf0, 0xf7, 0x23,
	0xe6, 0x45, 0x14, 0x07, 0x5a, 0x5c, 0xe2, 0x4b, 0x58, 0xe2, 0xeb, 0xb1, 0xf2, 0x04, 0x75, 0x71,
	0x91, 0x3f, 0x80, 0x0a, 0x4d, 0xc2, 0xe4, 0x29, 0xde, 0xc3, 0x07, 0xac, 0xe8, 0x96, 0xc7, 0xc2,
	0x16, 0xef, 0xd5, 0xff, 0xc8, 0xc1, 0x66, 0x26, 0x84, 0x2d, 0xde, 0x0b, 0x99, 0xff, 0x82, 0x6a,
	0x6a, 0x46, 0xe2, 0xc4, 0x18, 0xb0, 0x41, 0x2d, 0x75, 0x33, 0x23, 0x20, 0x89, 0x77, 0x7e, 0x56,
	0xbc, 0x0b, 0xd9, 0x78, 0x3f, 0x80, 0xca, 0xa4, 0xdf, 0x45, 0xf4, 0xbb, 0x1c, 0x65, 0x1d, 0xbe,
	0x79, 0xec, 0x2e, 0xa7, 0x6f, 0x71, 0x46, 0xfa, 0xea, 0x9f, 0x42, 0x2d, 0x73, 0xb7, 0xf8, 0x2b,
	0x8f, 0xa1, 0x9a, 0x99, 0x42, 0xf6, 0x2b, 0x39, 0xf4, 0x66, 0x8d, 0x4e, 0x82, 0xeb, 0xff, 0x87,
	0x4a, 0x2b, 0x62, 0x1d, 0x4e, 0x83, 0xb8, 0x9a, 0x09, 0x14, 0x07, 0x3c, 0xf4, 0xe3, 0x12, 0xc6,
	0xdf, 0x46, 0xe6, 0x53, 0x4d, 0x91, 0x92, 0x95, 0x5d, 0xfc, 0x5d, 0xff, 0x06, 0xd6, 0xa6, 0x98,
	0xd3, 0xcc, 0xcb, 0xe5, 0x66, 0x5e, 0x6e, 0x46, 0x54, 0xeb, 0x3f, 0xc2, 0xd6, 0x6c, 0x7e, 0x41,
	0x7c, 0xb8, 0x45, 0xcd, 0x0f, 0x6f, 0x06, 0x7b, 0xc1, 0x7b, 0x95, 0x0e, 0x1e, 0xdf, 0x98, 0xb2,
	0xb8, 0x5b, 0x78, 0xd6, 0x25, 0x79, 0xfd, 0x25, 0xd4, 0x2e, 0x09, 0xd3, 0x54, 0xe7, 0xb2, 0xa9,
	0xbe, 0x0d, 0x2b, 0xa9, 0x03, 0x79, 0x24, 0x32, 0xa9, 0xa0, 0xfe, 0x5b, 0x21, 0x61, 0xc4, 0x78,
	0x61, 0x33, 0x1f, 0xcc, 0x94, 0x52, 0x66, 0x3c, 0xc4, 0xa5, 0x61, 0x93, 0xb1, 0x9a, 0x88, 0xe3,
	0xb4, 0xcd, 0xaa, 0xb5, 0x07, 0x50, 0x89, 0xa7, 0x94, 0x64, 0xa7, 0x8c, 0x06, 0xf1, 0x2c, 0x2d,
	0x5b, 0xa1, 0x8b, 0x32, 0x52, 0x87, 0x8a, 0x79, 0x3b, 0x91, 0x30, 0x78, 0x92, 0x75, 0xe3, 0xe6,
	0x2d, 0x45, 0xe2, 0x0c, 0x59, 0x82, 0xcb, 0xba, 0xe6, 0xdd, 0xa3, 0x1d, 0xcd, 0x4f, 0x59, 0x42,
	0x66, 0x45, 0xcc, 0x42, 0x4d, 0x51, 0xa0, 0xc2, 0x12, 0x58, 0xf3, 0x2a, 0xff, 0x0f, 0xb6, 0x3b,
	0xf2, 0x42, 0x69, 0x1a, 0xc4, 0x8c, 0x35, 0xb5, 0xb0, 0xdd, 0xbb, 0x99, 0x55, 0xa7, 0x76, 0x1f,
	0xc1, 0xca, 0x78, 0x3d, 0xc0, 0x79, 0x5b, 0x3a, 0xd8, 0x69, 0xd8, 0x05, 0xa2, 0x91, 0x2c, 0x10,
	0x8d, 0x37, 0x09, 0xc2, 0x4d, 0xc1, 0xe4, 0x5b, 0x28, 0x4f, 0xbc, 0x9b, 0xcb, 0x1f, 0xf2, 0x6e,
	0x4e, 0x1c, 0x41, 0x9a, 0xb0, 0xac, 0x6c, 0x65, 0x5b, 0xb2, 0x59, 0x3a, 0x78, 0x38, 0xb7, 0x48,
	0xb2, 0x1d, 0xe0, 0x8e, 0xcd, 0xea, 0x3f, 0x2f, 0x42, 0xed, 0x68, 0xfa, 0xa6, 0xd7, 0x2f, 0x05,
	0xb9, 0x6b, 0x97, 0x82, 0x59, 0xa4, 0x3d, 0x3f, 0x9b, 0xb4, 0xcf, 0xd9, 0x07, 0x0a, 0xf3, 0xf6,
	0x81, 0x39, 0xfb, 0x46, 0x71, 0xde, 0xbe, 0x71, 0xe5, 0xbe, 0xb6, 0x70, 0xdd, 0xbe, 0x96, 0x59,
	0xb3, 0x16, 0x3f, 0x7c, 0xcd, 0x9a, 0x5c, 0xfc, 0x96, 0x3e, 0x7c, 0xf1, 0xfb, 0x27, 0x36, 0x9c,
	0xeb, 0xf8, 0xbf, 0x5d, 0x74, 0xae, 0xe0, 0xff, 0x87, 0x70, 0x77, 0x32, 0x03, 0x97, 0x76, 0x00,
	0xc0, 0xa6, 0xdb, 0xc9, 0xa6, 0xe1, 0xf2, 0x1a, 0x70, 0x89, 0xff, 0x96, 0x2c, 0x09, 0xb9, 0x09,
	0xff, 0x2d, 0x23, 0xf4, 0x46, 0xfc, 0xb7, 0x32, 0x8b, 0xff, 0xd6, 0x7f, 0xca, 0x43, 0xa9, 0x99,
	0x4e, 0x91, 0xb9, 0x7c, 0x38, 0xf7, 0x77, 0xf3, 0xe1, 0xfc, 0x3c, 0x3e, 0x7c, 0x02, 0xd5, 0xc4,
	0xa3, 0xf1, 0x58, 0x28, 0xfc, 0x95, 0xb1, 0xb0, 0x16, 0x9b, 0xc7, 0xd2, 0x69, 0x86, 0x5d, 0x9c,
	0x62, 0xd8, 0xed, 0x45, 0x9c, 0x78, 0xcf, 0xff, 0x0c, 0x00, 0x00, 0xff, 0xff, 0x32, 0x82, 0xea,
	0x37, 0x7b, 0x11, 0x00, 0x00,
}
