load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_bundle")
load("//tools:binary_targets.bzl", "binary_targets")
load("@io_bazel_rules_docker//contrib:push-all.bzl", "docker_push")

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
        "usage.go",
    ],
    importpath = "github.com/prysmaticlabs/prysm/beacon-chain",
    visibility = ["//beacon-chain:__subpackages__"],
    deps = [
        "//beacon-chain/flags:go_default_library",
        "//beacon-chain/node:go_default_library",
        "//shared/cmd:go_default_library",
        "//shared/debug:go_default_library",
        "//shared/featureconfig:go_default_library",
        "//shared/logutil:go_default_library",
        "//shared/version:go_default_library",
        "@com_github_ipfs_go_log//:go_default_library",
        "@com_github_joonix_log//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_urfave_cli//:go_default_library",
        "@com_github_whyrusleeping_go_logging//:go_default_library",
        "@com_github_x_cray_logrus_prefixed_formatter//:go_default_library",
        "@org_uber_go_automaxprocs//:go_default_library",
    ],
)

go_image(
    name = "image",
    srcs = [
        "main.go",
        "usage.go",
    ],
    base = "@cc_image_base//image",
    goarch = "amd64",
    goos = "linux",
    importpath = "github.com/prysmaticlabs/prysm/beacon-chain",
    race = "off",
    static = "off",  # Static enabled binary seems to cause issues with DNS lookup with cgo.
    tags = ["manual"],
    visibility = ["//visibility:private"],
    deps = [
        "//beacon-chain/flags:go_default_library",
        "//beacon-chain/node:go_default_library",
        "//shared/cmd:go_default_library",
        "//shared/debug:go_default_library",
        "//shared/featureconfig:go_default_library",
        "//shared/logutil:go_default_library",
        "//shared/version:go_default_library",
        "@com_github_ipfs_go_log//:go_default_library",
        "@com_github_joonix_log//:go_default_library",
        "@com_github_sirupsen_logrus//:go_default_library",
        "@com_github_urfave_cli//:go_default_library",
        "@com_github_whyrusleeping_go_logging//:go_default_library",
        "@com_github_x_cray_logrus_prefixed_formatter//:go_default_library",
        "@org_uber_go_automaxprocs//:go_default_library",
    ],
)

container_bundle(
    name = "image_bundle",
    images = {
        "gcr.io/prysmaticlabs/prysm/beacon-chain:latest": ":image",
        "gcr.io/prysmaticlabs/prysm/beacon-chain:{DOCKER_TAG}": ":image",
    },
    tags = ["manual"],
)

docker_push(
    name = "push_images",
    bundle = ":image_bundle",
    tags = ["manual"],
)

go_binary(
    name = "beacon-chain",
    embed = [":go_default_library"],
    visibility = [
        "//beacon-chain:__subpackages__",
        "//endtoend:__pkg__",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = ["usage_test.go"],
    embed = [":go_default_library"],
    deps = ["@com_github_urfave_cli//:go_default_library"],
)

[go_binary(
    name = "beacon-chain-{}-{}".format(
        pair[0],
        pair[1],
    ),
    embed = [":go_default_library"],
    goarch = pair[1],
    goos = pair[0],
    tags = ["manual"],
    visibility = ["//visibility:public"],
) for pair in binary_targets]
