syntax = "proto3";

package ethereum.beacon.p2p.v1;

import "google/protobuf/timestamp.proto";

import "proto/common/messages.proto";

message BeaconState {
  // Validator registry [1-1000] 
  repeated ValidatorRecord validator_registry = 1;
  uint64 validator_registry_last_change_slot = 2;
  uint64 validator_registry_exit_count = 3;
  bytes validator_registry_delta_chain_tip_hash32 = 4; 

  // Randomness and committees [1001-2000]
  bytes randao_mix_hash32 = 1001;
  bytes next_seed_hash32 = 1002;
  repeated ShardAndCommitteeArray shard_and_committees_at_slots = 1003;
  repeated ethereum.common.Uint32List persistent_committees = 1004;
  repeated ShardReassignmentRecord persistent_committee_reassignments = 1005;

  // Finality [2001-3000] 
  uint64 previous_justified_slot = 2001;
  uint64 justified_slot = 2002;
  uint64 justified_slot_bitfield = 2003;
  uint64 finalized_slot = 2004;

  // Recent state [3001-4000]
  repeated CrosslinkRecord latest_crosslinks = 3001;
  uint64 last_state_recalculation_slot = 3002;
  repeated bytes latest_block_hash32s = 3003;
  repeated uint64 latest_penalized_exit_balances = 3004;
  repeated PendingAttestationRecord latest_attestations = 3005;

  // PoW receipt root [4001-5000]
  repeated bytes processed_pow_receipt_root_hash32 = 4001;
  repeated CandidatePoWReceiptRootRecord candidate_pow_receipt_roots = 4002;

  // Miscellaneous [5001-6000]
  uint64 genesis_time = 5001;
  ForkData fork_data = 5002;
  uint64 slot = 5003;


  // Deprecated fields 
  // All fields mustbe annotated with [deprecated=true];
  uint64 justified_streak = 10007 [deprecated=true]; // Deprecated by changes in fork choice rule. See https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#beacon-chain-fork-choice-rule 
  repeated AggregatedAttestation pending_attestations = 10018 [deprecated=true]; // Deleted by spec
  repeated ShardAndCommitteeArray shard_and_committees_for_slots = 10019 [deprecated=true]; // Renamed to shard_and_committee_at_slots
}

message ForkData {
  uint64 pre_fork_version = 1;
  uint64 post_fork_version = 2;
  uint64 fork_slot = 3;
}

message CandidatePoWReceiptRootRecord {
  bytes candidate_pow_receipt_root_hash32 = 1;
  uint64 votes = 2;
}

message PendingAttestationRecord {
  AttestationData data = 1;
  bytes participation_bitfield = 2;
  bytes custody_bitfield = 3;
  uint64 slot_included = 4;
}

message Attestation {
  AttestationData data = 1;
  bytes participation_bitfield = 2;
  bytes custody_bitfield = 3;
  bytes aggregate_signature = 4; // Type of [uint384] ?
}

message AttestationData {
  uint64 slot = 1;
  uint64 shard = 2;
  bytes beacon_block_hash32 = 3;
  bytes epoch_boundary_hash32 = 4;
  bytes shard_block_hash32 = 5;
  bytes latest_crosslink_hash32 = 6;
  uint64 justified_slot = 7;
  bytes justified_block_hash32 = 8;
}

message ValidatorRecord {
  bytes pubkey = 1;
  // TODO(781): The usage of withdrawal_credentials is not defined in spec. Not used in Prysm yet.
  bytes withdrawal_credentials = 2; // TODO(781): this is hash32, rename with suffix _hash32
  bytes randao_commitment_hash32 = 3;
  uint64 randao_skips = 4;
  // Balance in Gwei
  uint64 balance = 5;
  // Possible validator status code:
  // https://github.com/ethereum/eth2.0-specs/blob/master/specs/core/0_beacon-chain.md#constants
  enum StatusCodes {
    PENDING_ACTIVATION = 0; // validator is queued and waiting to be active.
    ACTIVE = 1; // validator is participating validator duties.
    ACTIVE_PENDING_EXIT = 2; // validator is waiting to exit.
    EXITED_WITHOUT_PENALTY = 3; // validator has successfully withdrawn its balance.
    EXITED_WITH_PENALTY = 4; // validator got slashed and kicked out of validator pool.
  }
  StatusCodes status = 6;
  uint64 latest_status_change_slot = 7;
  uint64 exit_count = 8;
}

message ShardReassignmentRecord {
  uint32 validator_index = 1;
  uint64 shard = 2;
  uint64 slot = 3;
}

// AggregatedAttestation is deprecated entirely by AttestationRecord.
message AggregatedAttestation {
  uint64 slot = 1 [deprecated=true];
  uint64 shard = 2 [deprecated=true];
  uint64 justified_slot = 3 [deprecated=true];
  bytes justified_block_hash = 4 [deprecated=true];
  bytes shard_block_hash = 5 [deprecated=true];
  bytes attester_bitfield = 6 [deprecated=true];
  repeated bytes oblique_parent_hashes = 7 [deprecated=true];
  repeated uint64 aggregate_sig = 8 [deprecated=true];
}

message SpecialRecord {
  uint32 kind = 1 [deprecated=true]; // Deprecated in favor of unify specials object w/ attestations.
  repeated bytes data = 2 [deprecated=true]; // Deprecated in favor of unify specials object w/ attestations.
}

message CrosslinkRecord {
  uint64 slot = 1;
  bytes shard_block_hash32 = 2;
}

message ShardAndCommitteeArray {
  repeated ShardAndCommittee array_shard_and_committee = 1;
}

message ShardAndCommittee {
  uint64 shard = 1;
  repeated uint32 committee = 2;
  uint64 total_validator_count = 3;
}

message BeaconBlock {
  uint64 slot = 1;
  // Ancestor hashes represent a skip list of ancestor beacon block hashes.
  // i'th item is the most recent ancestor whose slot is a multiple of 2^i 
  // for i in the range of 0 to 31.
  repeated bytes ancestor_hash32s = 2;
  bytes state_root_hash32 = 3;
  bytes randao_reveal_hash32 = 4;
  bytes candidate_pow_receipt_root_hash32 = 5;
  repeated bytes signature = 6; // Type of [uint384]?

  // Block Body
  BeaconBlockBody body = 7;

  // Deprecated fields
  // All fields must be annotated with [deprecated=true];
  google.protobuf.Timestamp timestamp = 1006 [deprecated=true]; // Keeping this until we refactor block validation.
  repeated AggregatedAttestation attestations = 1007 [deprecated=true];
}

message BeaconBlockBody {
  repeated Attestation attestations = 1;
  repeated ProposerSlashing proposer_slashings  = 2;
  repeated CasperSlashing casper_slashings = 3;
  repeated Deposit deposits = 4;
  repeated Exit exits = 5;
}

message DepositParameters {
  bytes pubkey = 1;
  bytes proof_of_possession = 2; // Type of ['uint384']??
  // TODO(781): The usage of withdrawal_credentials is not defined in spec. Not used in Prysm yet.
  bytes withdrawal_credentials_hash32 = 3;
  bytes randao_commitment_hash32 = 4;
}

message ProposalSignedData {
  uint64 slot = 1;
  uint64 shard = 2;
  bytes block_root = 3;
}

message SlashableVoteData {
  repeated ethereum.common.Uint32List aggregate_signature_poc_0_indices = 1; // proof of custody indices for 0 bits.
  repeated ethereum.common.Uint32List aggregate_signature_poc_1_indices = 2; // proof of custody indices for 1 bits.
  AttestationData data = 3;
  bytes aggregate_signature = 4; // Type of [uint384]?
}

message DepositData {
  DepositParameters deposit_parameters = 1;
  uint64 value = 2;
  uint64 timestamp = 3;
}

message ProposerSlashing {
  uint32 proposer_index = 1;
  ProposalSignedData proposal_data_1 = 2;
  bytes proposal_signature_1 = 3; // Type of [uint384]?
  ProposalSignedData proposal_data_2 = 4;
  bytes proposal_signature_2 = 5;
}

message CasperSlashing {
  SlashableVoteData votes_1 = 1;
  SlashableVoteData votes_2 = 2;
}

message Deposit {
  repeated bytes merkle_branch_hash32s = 1;
  uint64 merkle_tree_index = 2;
  DepositData deposit_data = 3;
}

message Exit {
  uint64 slot = 1;
  uint64 validator_index = 2;
  bytes signature = 3; // Type of [uint384]?
}
