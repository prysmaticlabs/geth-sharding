syntax = "proto3";

package ethereum.beacon.rpc.v1;

import "proto/sharding/p2p/v1/messages.proto";
import "proto/beacon/p2p/v1/messages.proto";
import "google/protobuf/empty.proto";

service BeaconService {
    rpc LatestBeaconHashHeight(google.protobuf.Empty) returns (stream BeaconHashHeightResponse);
    rpc LatestCrystallizedState(google.protobuf.Empty) returns (stream ethereum.beacon.p2p.v1.CrystallizedStateResponse);
    rpc ShuffleValidators(ShuffleRequest) returns (stream ShuffleResponse);
    rpc SignBlock(SignRequest) returns (SignResponse);
    rpc ProposeBlock(ProposeRequest) returns (ProposeResponse);
}

message BeaconHashHeightResponse {
    bytes hash = 1;
    uint64 height = 2;
}

message ShuffleRequest {
    uint64 validator_count = 1;
    uint64 validator_index = 2;
}

message ShuffleResponse {
    bool is_proposer = 1;
    bool is_attester = 2;
}

message ProposeRequest {
  bytes randao_reveal = 1;
  bytes attestation_bitmask = 2;
  repeated uint32 attestation_aggregate_sig = 3;
  repeated ethereum.beacon.p2p.v1.AggregateVote shard_aggregate_votes = 5;
}

message ProposeResponse {
    bytes block_hash = 1;
}

message SignRequest {
    bytes block_hash = 1;
    ethereum.sharding.p2p.v1.Signature signature = 2;
}

message SignResponse {
    bool signed = 1;
}
