// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/slashing/slashing.proto

package ethereum_slashing

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	v1alpha1 "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ValidatorIDToIdxAtt struct {
	Indices              []uint64 `protobuf:"varint,1,rep,packed,name=indices,proto3" json:"indices,omitempty"`
	DataRoot             []byte   `protobuf:"bytes,2,opt,name=data_root,json=dataRoot,proto3" json:"data_root,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ValidatorIDToIdxAtt) Reset()         { *m = ValidatorIDToIdxAtt{} }
func (m *ValidatorIDToIdxAtt) String() string { return proto.CompactTextString(m) }
func (*ValidatorIDToIdxAtt) ProtoMessage()    {}
func (*ValidatorIDToIdxAtt) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{0}
}

func (m *ValidatorIDToIdxAtt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorIDToIdxAtt.Unmarshal(m, b)
}
func (m *ValidatorIDToIdxAtt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorIDToIdxAtt.Marshal(b, m, deterministic)
}
func (m *ValidatorIDToIdxAtt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorIDToIdxAtt.Merge(m, src)
}
func (m *ValidatorIDToIdxAtt) XXX_Size() int {
	return xxx_messageInfo_ValidatorIDToIdxAtt.Size(m)
}
func (m *ValidatorIDToIdxAtt) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorIDToIdxAtt.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorIDToIdxAtt proto.InternalMessageInfo

func (m *ValidatorIDToIdxAtt) GetIndices() []uint64 {
	if m != nil {
		return m.Indices
	}
	return nil
}

func (m *ValidatorIDToIdxAtt) GetDataRoot() []byte {
	if m != nil {
		return m.DataRoot
	}
	return nil
}

func (m *ValidatorIDToIdxAtt) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type ValidatorIDToIdxAttList struct {
	IndicesList          []*ValidatorIDToIdxAtt `protobuf:"bytes,1,rep,name=indicesList,proto3" json:"indicesList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ValidatorIDToIdxAttList) Reset()         { *m = ValidatorIDToIdxAttList{} }
func (m *ValidatorIDToIdxAttList) String() string { return proto.CompactTextString(m) }
func (*ValidatorIDToIdxAttList) ProtoMessage()    {}
func (*ValidatorIDToIdxAttList) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{1}
}

func (m *ValidatorIDToIdxAttList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidatorIDToIdxAttList.Unmarshal(m, b)
}
func (m *ValidatorIDToIdxAttList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidatorIDToIdxAttList.Marshal(b, m, deterministic)
}
func (m *ValidatorIDToIdxAttList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorIDToIdxAttList.Merge(m, src)
}
func (m *ValidatorIDToIdxAttList) XXX_Size() int {
	return xxx_messageInfo_ValidatorIDToIdxAttList.Size(m)
}
func (m *ValidatorIDToIdxAttList) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorIDToIdxAttList.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorIDToIdxAttList proto.InternalMessageInfo

func (m *ValidatorIDToIdxAttList) GetIndicesList() []*ValidatorIDToIdxAtt {
	if m != nil {
		return m.IndicesList
	}
	return nil
}

type ProposerSlashingRequest struct {
	BlockHeader          *v1alpha1.BeaconBlockHeader `protobuf:"bytes,1,opt,name=block_header,json=blockHeader,proto3" json:"block_header,omitempty"`
	ValidatorIndex       uint64                      `protobuf:"varint,2,opt,name=validator_index,json=validatorIndex,proto3" json:"validator_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ProposerSlashingRequest) Reset()         { *m = ProposerSlashingRequest{} }
func (m *ProposerSlashingRequest) String() string { return proto.CompactTextString(m) }
func (*ProposerSlashingRequest) ProtoMessage()    {}
func (*ProposerSlashingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{2}
}

func (m *ProposerSlashingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposerSlashingRequest.Unmarshal(m, b)
}
func (m *ProposerSlashingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposerSlashingRequest.Marshal(b, m, deterministic)
}
func (m *ProposerSlashingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposerSlashingRequest.Merge(m, src)
}
func (m *ProposerSlashingRequest) XXX_Size() int {
	return xxx_messageInfo_ProposerSlashingRequest.Size(m)
}
func (m *ProposerSlashingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposerSlashingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProposerSlashingRequest proto.InternalMessageInfo

func (m *ProposerSlashingRequest) GetBlockHeader() *v1alpha1.BeaconBlockHeader {
	if m != nil {
		return m.BlockHeader
	}
	return nil
}

func (m *ProposerSlashingRequest) GetValidatorIndex() uint64 {
	if m != nil {
		return m.ValidatorIndex
	}
	return 0
}

type ProposerSlashingResponse struct {
	ProposerSlashing     []*v1alpha1.ProposerSlashing `protobuf:"bytes,1,rep,name=proposer_slashing,json=proposerSlashing,proto3" json:"proposer_slashing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ProposerSlashingResponse) Reset()         { *m = ProposerSlashingResponse{} }
func (m *ProposerSlashingResponse) String() string { return proto.CompactTextString(m) }
func (*ProposerSlashingResponse) ProtoMessage()    {}
func (*ProposerSlashingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{3}
}

func (m *ProposerSlashingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProposerSlashingResponse.Unmarshal(m, b)
}
func (m *ProposerSlashingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProposerSlashingResponse.Marshal(b, m, deterministic)
}
func (m *ProposerSlashingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProposerSlashingResponse.Merge(m, src)
}
func (m *ProposerSlashingResponse) XXX_Size() int {
	return xxx_messageInfo_ProposerSlashingResponse.Size(m)
}
func (m *ProposerSlashingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProposerSlashingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProposerSlashingResponse proto.InternalMessageInfo

func (m *ProposerSlashingResponse) GetProposerSlashing() []*v1alpha1.ProposerSlashing {
	if m != nil {
		return m.ProposerSlashing
	}
	return nil
}

type AttesterSlashingResponse struct {
	AttesterSlashing     []*v1alpha1.AttesterSlashing `protobuf:"bytes,1,rep,name=attester_slashing,json=attesterSlashing,proto3" json:"attester_slashing,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *AttesterSlashingResponse) Reset()         { *m = AttesterSlashingResponse{} }
func (m *AttesterSlashingResponse) String() string { return proto.CompactTextString(m) }
func (*AttesterSlashingResponse) ProtoMessage()    {}
func (*AttesterSlashingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{4}
}

func (m *AttesterSlashingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttesterSlashingResponse.Unmarshal(m, b)
}
func (m *AttesterSlashingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttesterSlashingResponse.Marshal(b, m, deterministic)
}
func (m *AttesterSlashingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttesterSlashingResponse.Merge(m, src)
}
func (m *AttesterSlashingResponse) XXX_Size() int {
	return xxx_messageInfo_AttesterSlashingResponse.Size(m)
}
func (m *AttesterSlashingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AttesterSlashingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AttesterSlashingResponse proto.InternalMessageInfo

func (m *AttesterSlashingResponse) GetAttesterSlashing() []*v1alpha1.AttesterSlashing {
	if m != nil {
		return m.AttesterSlashing
	}
	return nil
}

type MinMaxEpochSpan struct {
	MinEpochSpan         uint32   `protobuf:"varint,1,opt,name=min_epoch_span,json=minEpochSpan,proto3" json:"min_epoch_span,omitempty"`
	MaxEpochSpan         uint32   `protobuf:"varint,2,opt,name=max_epoch_span,json=maxEpochSpan,proto3" json:"max_epoch_span,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MinMaxEpochSpan) Reset()         { *m = MinMaxEpochSpan{} }
func (m *MinMaxEpochSpan) String() string { return proto.CompactTextString(m) }
func (*MinMaxEpochSpan) ProtoMessage()    {}
func (*MinMaxEpochSpan) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{5}
}

func (m *MinMaxEpochSpan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MinMaxEpochSpan.Unmarshal(m, b)
}
func (m *MinMaxEpochSpan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MinMaxEpochSpan.Marshal(b, m, deterministic)
}
func (m *MinMaxEpochSpan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MinMaxEpochSpan.Merge(m, src)
}
func (m *MinMaxEpochSpan) XXX_Size() int {
	return xxx_messageInfo_MinMaxEpochSpan.Size(m)
}
func (m *MinMaxEpochSpan) XXX_DiscardUnknown() {
	xxx_messageInfo_MinMaxEpochSpan.DiscardUnknown(m)
}

var xxx_messageInfo_MinMaxEpochSpan proto.InternalMessageInfo

func (m *MinMaxEpochSpan) GetMinEpochSpan() uint32 {
	if m != nil {
		return m.MinEpochSpan
	}
	return 0
}

func (m *MinMaxEpochSpan) GetMaxEpochSpan() uint32 {
	if m != nil {
		return m.MaxEpochSpan
	}
	return 0
}

type EpochSpanMap struct {
	EpochSpanMap         map[uint64]*MinMaxEpochSpan `protobuf:"bytes,1,rep,name=epoch_span_map,json=epochSpanMap,proto3" json:"epoch_span_map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EpochSpanMap) Reset()         { *m = EpochSpanMap{} }
func (m *EpochSpanMap) String() string { return proto.CompactTextString(m) }
func (*EpochSpanMap) ProtoMessage()    {}
func (*EpochSpanMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_da7e95107d0081b4, []int{6}
}

func (m *EpochSpanMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EpochSpanMap.Unmarshal(m, b)
}
func (m *EpochSpanMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EpochSpanMap.Marshal(b, m, deterministic)
}
func (m *EpochSpanMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EpochSpanMap.Merge(m, src)
}
func (m *EpochSpanMap) XXX_Size() int {
	return xxx_messageInfo_EpochSpanMap.Size(m)
}
func (m *EpochSpanMap) XXX_DiscardUnknown() {
	xxx_messageInfo_EpochSpanMap.DiscardUnknown(m)
}

var xxx_messageInfo_EpochSpanMap proto.InternalMessageInfo

func (m *EpochSpanMap) GetEpochSpanMap() map[uint64]*MinMaxEpochSpan {
	if m != nil {
		return m.EpochSpanMap
	}
	return nil
}

func init() {
	proto.RegisterType((*ValidatorIDToIdxAtt)(nil), "ethereum.slashing.ValidatorIDToIdxAtt")
	proto.RegisterType((*ValidatorIDToIdxAttList)(nil), "ethereum.slashing.ValidatorIDToIdxAttList")
	proto.RegisterType((*ProposerSlashingRequest)(nil), "ethereum.slashing.ProposerSlashingRequest")
	proto.RegisterType((*ProposerSlashingResponse)(nil), "ethereum.slashing.ProposerSlashingResponse")
	proto.RegisterType((*AttesterSlashingResponse)(nil), "ethereum.slashing.AttesterSlashingResponse")
	proto.RegisterType((*MinMaxEpochSpan)(nil), "ethereum.slashing.MinMaxEpochSpan")
	proto.RegisterType((*EpochSpanMap)(nil), "ethereum.slashing.EpochSpanMap")
	proto.RegisterMapType((map[uint64]*MinMaxEpochSpan)(nil), "ethereum.slashing.EpochSpanMap.EpochSpanMapEntry")
}

func init() { proto.RegisterFile("proto/slashing/slashing.proto", fileDescriptor_da7e95107d0081b4) }

var fileDescriptor_da7e95107d0081b4 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xd1, 0x6e, 0xd3, 0x4a,
	0x10, 0x95, 0x9b, 0xde, 0x5b, 0x3a, 0x09, 0x6d, 0xba, 0x88, 0xd6, 0x4a, 0x41, 0x54, 0x16, 0xa2,
	0x01, 0x24, 0xa7, 0x0d, 0x2f, 0x15, 0x6f, 0xad, 0x88, 0xd4, 0x08, 0x22, 0x21, 0xb7, 0xa2, 0x12,
	0x12, 0xb2, 0xd6, 0xf6, 0x10, 0x9b, 0x38, 0xbb, 0x8b, 0x77, 0x13, 0x25, 0x5f, 0xc1, 0x17, 0xf0,
	0x47, 0x7c, 0x14, 0xf2, 0xda, 0x4e, 0xdc, 0xc4, 0x91, 0xca, 0x9b, 0xe7, 0xcc, 0x99, 0x39, 0x33,
	0x27, 0x93, 0x85, 0xe7, 0x22, 0xe1, 0x8a, 0x77, 0x64, 0x4c, 0x65, 0x18, 0xb1, 0xe1, 0xe2, 0xc3,
	0xd6, 0x38, 0x39, 0x40, 0x15, 0x62, 0x82, 0x93, 0xb1, 0x5d, 0x24, 0x5a, 0xc7, 0x43, 0xce, 0x87,
	0x31, 0x76, 0x34, 0xc1, 0x9b, 0x7c, 0xef, 0xe0, 0x58, 0xa8, 0x79, 0xc6, 0x6f, 0xbd, 0x40, 0x15,
	0x76, 0xa6, 0xe7, 0x34, 0x16, 0x21, 0x3d, 0xef, 0x78, 0x48, 0x7d, 0xce, 0x5c, 0x2f, 0xe6, 0xfe,
	0x28, 0x23, 0x58, 0x3f, 0xe0, 0xc9, 0x17, 0x1a, 0x47, 0x01, 0x55, 0x3c, 0xe9, 0x7f, 0xb8, 0xe5,
	0xfd, 0x60, 0x76, 0xa9, 0x14, 0x31, 0x61, 0x27, 0x62, 0x41, 0xe4, 0xa3, 0x34, 0x8d, 0x93, 0x5a,
	0x7b, 0xdb, 0x29, 0x42, 0x72, 0x0c, 0xbb, 0x01, 0x55, 0xd4, 0x4d, 0x38, 0x57, 0xe6, 0xd6, 0x89,
	0xd1, 0x6e, 0x38, 0x8f, 0x52, 0xc0, 0xe1, 0x5c, 0x91, 0x67, 0xb0, 0x2b, 0xa3, 0x21, 0xa3, 0x6a,
	0x92, 0xa0, 0x59, 0xd3, 0xc9, 0x25, 0x60, 0xf9, 0x70, 0x54, 0xa1, 0xf5, 0x29, 0x92, 0x8a, 0x5c,
	0x43, 0x3d, 0x17, 0x48, 0x43, 0xad, 0x59, 0xef, 0xbe, 0xb2, 0xd7, 0xb6, 0xb5, 0x2b, 0x1a, 0x38,
	0xe5, 0x52, 0xeb, 0x97, 0x01, 0x47, 0x9f, 0x13, 0x2e, 0xb8, 0xc4, 0xe4, 0x26, 0xaf, 0x72, 0xf0,
	0xe7, 0x04, 0xa5, 0x22, 0x1f, 0xa1, 0xa1, 0x77, 0x77, 0x43, 0xa4, 0x01, 0x26, 0xa6, 0x71, 0x62,
	0xb4, 0xeb, 0xdd, 0xf6, 0x52, 0x06, 0x55, 0x68, 0x17, 0x6e, 0xd9, 0x57, 0xda, 0xad, 0xab, 0xb4,
	0xe0, 0x5a, 0xf3, 0x9d, 0xba, 0xb7, 0x0c, 0xc8, 0x29, 0xec, 0x4f, 0x8b, 0x61, 0xdc, 0x88, 0x05,
	0x38, 0xd3, 0x76, 0x6c, 0x3b, 0x7b, 0x0b, 0xb8, 0x9f, 0xa2, 0x96, 0x00, 0x73, 0x7d, 0x20, 0x29,
	0x38, 0x93, 0x48, 0x6e, 0xe1, 0x40, 0xe4, 0x39, 0xb7, 0xd8, 0x31, 0xdf, 0xfe, 0x74, 0xc3, 0x58,
	0x6b, 0xbd, 0x9a, 0x62, 0x05, 0x49, 0x15, 0x2f, 0x95, 0x42, 0xa9, 0xaa, 0x15, 0x69, 0x9e, 0x7b,
	0xa8, 0xe2, 0x5a, 0xaf, 0x26, 0x5d, 0x41, 0xac, 0x6f, 0xb0, 0x3f, 0x88, 0xd8, 0x80, 0xce, 0x7a,
	0x82, 0xfb, 0xe1, 0x8d, 0xa0, 0x8c, 0xbc, 0x84, 0xbd, 0x71, 0xc4, 0x5c, 0x4c, 0x01, 0x57, 0x0a,
	0xca, 0xb4, 0xdd, 0x8f, 0x9d, 0xc6, 0x38, 0x62, 0xf7, 0x59, 0x74, 0x56, 0x66, 0x6d, 0xe5, 0xac,
	0x52, 0x2f, 0xeb, 0x8f, 0x01, 0x8d, 0x45, 0x34, 0xa0, 0x82, 0xdc, 0xc1, 0xde, 0xb2, 0xc4, 0x1d,
	0x53, 0x91, 0xaf, 0x70, 0x5e, 0x71, 0x32, 0xe5, 0xc2, 0x7b, 0x41, 0x8f, 0xa9, 0x64, 0xee, 0x34,
	0xb0, 0x04, 0xb5, 0x7c, 0x38, 0x58, 0xa3, 0x90, 0x26, 0xd4, 0x46, 0x38, 0xd7, 0xf3, 0x6f, 0x3b,
	0xe9, 0x27, 0xb9, 0x80, 0xff, 0xa6, 0x34, 0x9e, 0xa0, 0x9e, 0xb6, 0xde, 0xb5, 0x2a, 0x64, 0x57,
	0xfc, 0x70, 0xb2, 0x82, 0xf7, 0x5b, 0x17, 0x46, 0xf7, 0x77, 0x0d, 0x76, 0xb4, 0x75, 0x98, 0x10,
	0x01, 0x87, 0x7d, 0xa9, 0x03, 0xea, 0xc5, 0x98, 0x59, 0x4d, 0x55, 0xc4, 0x19, 0x79, 0xbd, 0xe1,
	0xe7, 0xd0, 0x57, 0x85, 0x41, 0x89, 0xda, 0x7a, 0x5b, 0xa1, 0xbf, 0xf1, 0x02, 0x46, 0xd0, 0x2c,
	0x29, 0xea, 0xfb, 0x26, 0x6f, 0x2a, 0x1a, 0x6c, 0xf8, 0x17, 0x55, 0x8a, 0x6d, 0x3c, 0xf0, 0x3b,
	0x20, 0x0b, 0xa9, 0x8c, 0x44, 0x63, 0x49, 0x0e, 0xed, 0xec, 0xd1, 0xb2, 0x8b, 0x47, 0xcb, 0xee,
	0xa5, 0x8f, 0x56, 0xeb, 0xa1, 0x37, 0x7f, 0x66, 0x90, 0xaf, 0xf0, 0xb4, 0xca, 0xb5, 0x7f, 0xef,
	0xbd, 0xea, 0xd3, 0x99, 0xe1, 0xfd, 0xaf, 0x4b, 0xdf, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x52,
	0xc8, 0x82, 0x62, 0x8d, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SlasherClient is the client API for Slasher service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SlasherClient interface {
	IsSlashableAttestation(ctx context.Context, in *v1alpha1.IndexedAttestation, opts ...grpc.CallOption) (*AttesterSlashingResponse, error)
	IsSlashableBlock(ctx context.Context, in *ProposerSlashingRequest, opts ...grpc.CallOption) (*ProposerSlashingResponse, error)
	SlashableProposals(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Slasher_SlashableProposalsClient, error)
	SlashableAttestations(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Slasher_SlashableAttestationsClient, error)
}

type slasherClient struct {
	cc *grpc.ClientConn
}

func NewSlasherClient(cc *grpc.ClientConn) SlasherClient {
	return &slasherClient{cc}
}

func (c *slasherClient) IsSlashableAttestation(ctx context.Context, in *v1alpha1.IndexedAttestation, opts ...grpc.CallOption) (*AttesterSlashingResponse, error) {
	out := new(AttesterSlashingResponse)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/IsSlashableAttestation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slasherClient) IsSlashableBlock(ctx context.Context, in *ProposerSlashingRequest, opts ...grpc.CallOption) (*ProposerSlashingResponse, error) {
	out := new(ProposerSlashingResponse)
	err := c.cc.Invoke(ctx, "/ethereum.slashing.Slasher/IsSlashableBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *slasherClient) SlashableProposals(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Slasher_SlashableProposalsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Slasher_serviceDesc.Streams[0], "/ethereum.slashing.Slasher/SlashableProposals", opts...)
	if err != nil {
		return nil, err
	}
	x := &slasherSlashableProposalsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Slasher_SlashableProposalsClient interface {
	Recv() (*v1alpha1.ProposerSlashing, error)
	grpc.ClientStream
}

type slasherSlashableProposalsClient struct {
	grpc.ClientStream
}

func (x *slasherSlashableProposalsClient) Recv() (*v1alpha1.ProposerSlashing, error) {
	m := new(v1alpha1.ProposerSlashing)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *slasherClient) SlashableAttestations(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Slasher_SlashableAttestationsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Slasher_serviceDesc.Streams[1], "/ethereum.slashing.Slasher/SlashableAttestations", opts...)
	if err != nil {
		return nil, err
	}
	x := &slasherSlashableAttestationsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Slasher_SlashableAttestationsClient interface {
	Recv() (*v1alpha1.AttesterSlashing, error)
	grpc.ClientStream
}

type slasherSlashableAttestationsClient struct {
	grpc.ClientStream
}

func (x *slasherSlashableAttestationsClient) Recv() (*v1alpha1.AttesterSlashing, error) {
	m := new(v1alpha1.AttesterSlashing)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SlasherServer is the server API for Slasher service.
type SlasherServer interface {
	IsSlashableAttestation(context.Context, *v1alpha1.IndexedAttestation) (*AttesterSlashingResponse, error)
	IsSlashableBlock(context.Context, *ProposerSlashingRequest) (*ProposerSlashingResponse, error)
	SlashableProposals(*empty.Empty, Slasher_SlashableProposalsServer) error
	SlashableAttestations(*empty.Empty, Slasher_SlashableAttestationsServer) error
}

// UnimplementedSlasherServer can be embedded to have forward compatible implementations.
type UnimplementedSlasherServer struct {
}

func (*UnimplementedSlasherServer) IsSlashableAttestation(ctx context.Context, req *v1alpha1.IndexedAttestation) (*AttesterSlashingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSlashableAttestation not implemented")
}
func (*UnimplementedSlasherServer) IsSlashableBlock(ctx context.Context, req *ProposerSlashingRequest) (*ProposerSlashingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsSlashableBlock not implemented")
}
func (*UnimplementedSlasherServer) SlashableProposals(req *empty.Empty, srv Slasher_SlashableProposalsServer) error {
	return status.Errorf(codes.Unimplemented, "method SlashableProposals not implemented")
}
func (*UnimplementedSlasherServer) SlashableAttestations(req *empty.Empty, srv Slasher_SlashableAttestationsServer) error {
	return status.Errorf(codes.Unimplemented, "method SlashableAttestations not implemented")
}

func RegisterSlasherServer(s *grpc.Server, srv SlasherServer) {
	s.RegisterService(&_Slasher_serviceDesc, srv)
}

func _Slasher_IsSlashableAttestation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1alpha1.IndexedAttestation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).IsSlashableAttestation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/IsSlashableAttestation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).IsSlashableAttestation(ctx, req.(*v1alpha1.IndexedAttestation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slasher_IsSlashableBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProposerSlashingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SlasherServer).IsSlashableBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ethereum.slashing.Slasher/IsSlashableBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SlasherServer).IsSlashableBlock(ctx, req.(*ProposerSlashingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Slasher_SlashableProposals_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SlasherServer).SlashableProposals(m, &slasherSlashableProposalsServer{stream})
}

type Slasher_SlashableProposalsServer interface {
	Send(*v1alpha1.ProposerSlashing) error
	grpc.ServerStream
}

type slasherSlashableProposalsServer struct {
	grpc.ServerStream
}

func (x *slasherSlashableProposalsServer) Send(m *v1alpha1.ProposerSlashing) error {
	return x.ServerStream.SendMsg(m)
}

func _Slasher_SlashableAttestations_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SlasherServer).SlashableAttestations(m, &slasherSlashableAttestationsServer{stream})
}

type Slasher_SlashableAttestationsServer interface {
	Send(*v1alpha1.AttesterSlashing) error
	grpc.ServerStream
}

type slasherSlashableAttestationsServer struct {
	grpc.ServerStream
}

func (x *slasherSlashableAttestationsServer) Send(m *v1alpha1.AttesterSlashing) error {
	return x.ServerStream.SendMsg(m)
}

var _Slasher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ethereum.slashing.Slasher",
	HandlerType: (*SlasherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "IsSlashableAttestation",
			Handler:    _Slasher_IsSlashableAttestation_Handler,
		},
		{
			MethodName: "IsSlashableBlock",
			Handler:    _Slasher_IsSlashableBlock_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SlashableProposals",
			Handler:       _Slasher_SlashableProposals_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SlashableAttestations",
			Handler:       _Slasher_SlashableAttestations_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/slashing/slashing.proto",
}
